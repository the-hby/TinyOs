
E:/CppProject/TinyOs/src/build/source/shell/shell.elf:     file format elf32-i386
E:/CppProject/TinyOs/src/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
<<<<<<< HEAD
start address 0x81000055

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00003fd0 memsz 0x00004160 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000375f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000001e  81003760  81003760  00004760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  81003780  81003780  00004780  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000180  81003fe0  81003fe0  00004fd0  2**5
                  ALLOC
  4 .debug_info   00011708  00000000  00000000  00004fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00003e74  00000000  00000000  000166d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000438  00000000  00000000  0001a550  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000027cb  00000000  00000000  0001a988  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000e6c  00000000  00000000  0001d153  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  0001dfbf  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000be0  00000000  00000000  0001dfe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 0000081b  00000000  00000000  0001ebc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 00000022  00000000  00000000  0001f3df  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81003760 l    d  .rodata	00000000 .rodata
81003780 l    d  .data	00000000 .data
81003fe0 l    d  .bss	00000000 .bss
=======
start address 0x81000186

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x0000552c memsz 0x000055b4 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000471e  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000421  81004720  81004720  00005720  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  81004b60  81004b60  00005b60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  81005540  81005540  0000652c  2**5
                  ALLOC
  4 .debug_info   000169a5  00000000  00000000  0000652c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00004e61  00000000  00000000  0001ced1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000530  00000000  00000000  00021d38  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003379  00000000  00000000  00022268  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000011aa  00000000  00000000  000255e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  0002678b  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000fe8  00000000  00000000  000267b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 00000c62  00000000  00000000  00027798  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 0000004e  00000000  00000000  000283fa  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81004720 l    d  .rodata	00000000 .rodata
81004b60 l    d  .data	00000000 .data
81005540 l    d  .bss	00000000 .bss
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
<<<<<<< HEAD
8100009a l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
81003780 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000566 l       .text	00000000 L5
8100059e l       .text	00000000 L15
81000570 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005a9 l     F .text	000000ad std
81000656 l     F .text	0000001b stdin_init
81000671 l     F .text	0000001b stdout_init
8100068c l     F .text	0000001b stderr_init
81003fe0 l     O .bss	00000004 __sfp_recursive_mutex
81003fe4 l     O .bss	00000004 __sinit_recursive_mutex
8100094f l     F .text	0000000a __fp_lock
81000959 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
81000f1c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001a6d l       .text	00000000 L20
81001a24 l       .text	00000000 L5
81001a6a l       .text	00000000 L15
81001a30 l       .text	00000000 L8
81001a51 l       .text	00000000 L9
81001a60 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81004048 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
810024bb l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
=======
810001cb l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810005b6 l       .text	00000000 L5
810005ee l       .text	00000000 L15
810005c0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005f9 l     F .text	000000ad std
810006a6 l     F .text	0000001b stdin_init
810006c1 l     F .text	0000001b stdout_init
810006dc l     F .text	0000001b stderr_init
81005540 l     O .bss	00000004 __sfp_recursive_mutex
81005544 l     O .bss	00000004 __sinit_recursive_mutex
8100099f l     F .text	0000000a __fp_lock
810009a9 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81004b60 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000f6c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001abd l       .text	00000000 L20
81001a74 l       .text	00000000 L5
81001aba l       .text	00000000 L15
81001a80 l       .text	00000000 L8
81001aa1 l       .text	00000000 L9
81001ab0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
810055a8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001d0d l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
<<<<<<< HEAD
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100371f g     F .text	00000040 _isatty_r
81003545 g     F .text	00000037 cleanup_glue
810003b5 g     F .text	000000d6 _puts_r
81003339 g     F .text	00000046 _lseek_r
8100019c g     F .text	0000001b yield
810027d2 g     F .text	0000004a __sseek
8100089e g     F .text	00000099 __sinit
810006a7 g     F .text	0000006f __sfmoreglue
81001bdb g     F .text	00000006 __malloc_unlock
81001ac0 g       .text	00000000 memmove
81000884 g     F .text	0000001a _cleanup
810036dc g     F .text	00000043 _fstat_r
8100404c g     O .bss	00000004 errno
8100050a g     F .text	0000001d __srget
8100276d g     F .text	0000000a __seofread
81000399 g     F .text	0000001c gets
8100016e g     F .text	0000002e execve
81000110 g     F .text	0000001b getpid
81001a78 g       .text	00000000 memcpy
81000863 g     F .text	00000021 _cleanup_r
8100048b g     F .text	0000001c puts
81000286 g     F .text	00000021 isatty
81004000 g     O .bss	00000004 __malloc_top_pad
81003fe0 g       .bss	00000000 __bss_start__
810009ab g     F .text	0000049e __sfvwrite_r
810026e9 g     F .text	00000040 _sbrk_r
810034ff g     F .text	00000046 _read_r
81002a22 g     F .text	00000107 _fclose_r
81002dc4 g     F .text	00000039 fflush
81004004 g     O .bss	00000004 __malloc_max_sbrked_mem
81000259 g     F .text	0000002d lseek
81003778 g     O .rodata	00000004 _global_impure_ptr
81001be1 g     F .text	000008da _realloc_r
81000963 g     F .text	00000024 __fp_lock_all
8100357c g     F .text	00000160 _reclaim_reent
8100020b g     F .text	0000002d write
810002a7 g     F .text	00000027 fstat
81000937 g     F .text	00000006 __sfp_lock_acquire
810019e0 g       .text	00000000 memchr
81004050 g       .bss	00000000 __bss_end__
81002dfd g     F .text	000003db _free_r
810004a7 g     F .text	00000063 __srget_r
81003fcc g     O .data	00000004 __malloc_sbrk_base
81000055 g       .text	00000000 _start
810002ef g     F .text	000000aa _gets_r
810001de g     F .text	0000002d read
81004020 g     O .bss	00000028 __malloc_current_mallinfo
810029e2 g     F .text	00000040 _close_r
81000153 g     F .text	0000001b fork
81002887 g     F .text	0000015b __swsetup_r
81000716 g     F .text	0000014d __sfp
81003bc0 g     O .data	00000408 __malloc_av_
81000949 g     F .text	00000006 __sinit_lock_release
81002729 g     F .text	00000044 __sread
81001bd5 g     F .text	00000006 __malloc_lock
810002ce g     F .text	00000021 sbrk
81002d6c g     F .text	00000058 _fflush_r
81000065 g     F .text	00000035 cstart
81001b4d g       .text	00000000 memset
81000000 g     F .text	00000055 main
81004008 g     O .bss	00000004 __malloc_max_total_mem
8100281c g     F .text	00000025 __sclose
81002b29 g     F .text	0000001d fclose
810011af g     F .text	00000822 _malloc_r
81004060 g     O .bss	00000100 cmd_buf
81000e49 g     F .text	00000068 _fwalk
810031d8 g     F .text	00000161 _malloc_trim_r
81002841 g     F .text	00000046 _write_r
81003ba4 g     O .data	00000004 _impure_ptr
81002b46 g     F .text	00000226 __sflush_r
810024e8 g     F .text	00000201 __srefill_r
81000987 g     F .text	00000024 __fp_unlock_all
8100012b g     F .text	00000028 print_msg
8100346c g     F .text	00000093 __swhatbuf_r
81002777 g     F .text	0000005b __swrite
81003fc8 g     O .data	00000004 __malloc_trim_threshold
81000eb1 g     F .text	0000006b _fwalk_reent
8100093d g     F .text	00000006 __sfp_lock_release
8100337f g     F .text	000000ed __smakebuf_r
81000530 g       .text	00000000 strlen
810001b7 g     F .text	00000027 open
810000e6 g     F .text	0000002a msleep
81000238 g     F .text	00000021 close
81000943 g     F .text	00000006 __sinit_lock_acquire
=======
00000000 l    df *ABS*	00000000 fputwc.c
810038a1 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003f92 l     F .text	0000000a __get_global_locale
81003f9c l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810041fe l     F .text	0000000a __get_global_locale
81004208 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81004516 l     F .text	0000000a __get_global_locale
81004520 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81004620 l     F .text	0000000a __get_global_locale
8100462a l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
810046de g     F .text	00000040 _isatty_r
810042da g     F .text	00000037 cleanup_glue
81000482 g     F .text	000000d6 _puts_r
81004038 g     F .text	00000046 _lseek_r
810002cd g     F .text	0000001b yield
8100044d g     F .text	00000035 printf
8100452a g     F .text	00000077 _wcrtomb_r
81003143 g     F .text	0000004a __sseek
810008ee g     F .text	00000099 __sinit
810031b2 g     F .text	00000112 __swbuf_r
81003fa6 g     F .text	0000005f _setlocale_r
810006f7 g     F .text	0000006f __sfmoreglue
81001c2b g     F .text	00000006 __malloc_unlock
81001b10 g       .text	00000000 memmove
810008d4 g     F .text	0000001a _cleanup
8100469b g     F .text	00000043 _fstat_r
810055b0 g     O .bss	00000004 errno
810030de g     F .text	0000000a __seofread
8100029f g     F .text	0000002e execve
81000241 g     F .text	0000001b getpid
81001ac8 g       .text	00000000 memcpy
810008b3 g     F .text	00000021 _cleanup_r
81000558 g     F .text	0000001c puts
81000420 g     F .text	0000002d _printf_r
810003b7 g     F .text	00000021 isatty
81005560 g     O .bss	00000004 __malloc_top_pad
81005540 g       .bss	00000000 __bss_start__
810009fb g     F .text	0000049e __sfvwrite_r
8100305a g     F .text	00000040 _sbrk_r
81004294 g     F .text	00000046 _read_r
810034c6 g     F .text	00000107 _fclose_r
81003868 g     F .text	00000039 fflush
81005564 g     O .bss	00000004 __malloc_max_sbrked_mem
8100038a g     F .text	0000002d lseek
810047f0 g     O .rodata	00000004 _global_impure_ptr
81002780 g     F .text	000008da _realloc_r
810039b7 g     F .text	00000057 _fputwc_r
810009b3 g     F .text	00000024 __fp_lock_all
81004311 g     F .text	00000160 _reclaim_reent
8100033c g     F .text	0000002d write
810003d8 g     F .text	00000027 fstat
81001d73 g     F .text	000000a8 __sfputs_r
81000987 g     F .text	00000006 __sfp_lock_acquire
81001a30 g       .text	00000000 memchr
810055b4 g       .bss	00000000 __bss_end__
81003a56 g     F .text	000003db _free_r
810048c0 g     O .rodata	00000180 _ctype_b
81004005 g     F .text	00000014 __locale_mb_cur_max
810053ac g     O .data	00000004 __malloc_sbrk_base
81000186 g       .text	00000000 _start
8100030f g     F .text	0000002d read
81005580 g     O .bss	00000028 __malloc_current_mallinfo
81000420 g     F .text	0000002d _iprintf_r
81003486 g     F .text	00000040 _close_r
81000284 g     F .text	0000001b fork
8100332b g     F .text	0000015b __swsetup_r
81000766 g     F .text	0000014d __sfp
81004fa0 g     O .data	00000408 __malloc_av_
81000999 g     F .text	00000006 __sinit_lock_release
8100309a g     F .text	00000044 __sread
81001c25 g     F .text	00000006 __malloc_lock
810003ff g     F .text	00000021 sbrk
81003810 g     F .text	00000058 _fflush_r
81000196 g     F .text	00000035 cstart
81001b9d g       .text	00000000 memset
81000000 g     F .text	00000186 main
81005568 g     O .bss	00000004 __malloc_max_total_mem
810032c4 g     F .text	00000021 __swbuf
8100318d g     F .text	00000025 __sclose
810035cd g     F .text	0000001d fclose
810011ff g     F .text	00000822 _malloc_r
81004658 g     F .text	00000043 __ascii_wctomb
81000e99 g     F .text	00000068 _fwalk
81004212 g     F .text	0000002a _mbtowc_r
81003e31 g     F .text	00000161 _malloc_trim_r
81004471 g     F .text	000000a5 strcmp
81001e1b g     F .text	00000025 vfiprintf
8100044d g     F .text	00000035 iprintf
810055ac g     O .bss	00000004 _PathLocale
810032e5 g     F .text	00000046 _write_r
81004019 g     F .text	0000001f setlocale
81002196 g     F .text	0000019b _printf_common
81004f84 g     O .data	00000004 _impure_ptr
810035ea g     F .text	00000226 __sflush_r
8100423c g     F .text	00000058 __ascii_mbtowc
810009d7 g     F .text	00000024 __fp_unlock_all
8100025c g     F .text	00000028 print_msg
8100416b g     F .text	00000093 __swhatbuf_r
81003907 g     F .text	000000b0 __fputwc
810030e8 g     F .text	0000005b __swrite
810053a8 g     O .data	00000004 __malloc_trim_threshold
81001e40 g     F .text	00000356 _vfiprintf_r
81000f01 g     F .text	0000006b _fwalk_reent
8100098d g     F .text	00000006 __sfp_lock_release
81004a40 g     O .rodata	00000101 _ctype_
8100407e g     F .text	000000ed __smakebuf_r
81000580 g       .text	00000000 strlen
81002331 g     F .text	0000044f _printf_i
810002e8 g     F .text	00000027 open
81001c31 g     F .text	000000dc __sprint_r
81004634 g     F .text	00000024 _wctomb_r
81001e40 g     F .text	00000356 _vfprintf_r
81000217 g     F .text	0000002a msleep
810045a1 g     F .text	0000007f wcrtomb
81000369 g     F .text	00000021 close
810053c0 g     O .data	0000016c __global_locale
81001e1b g     F .text	00000025 vfprintf
81003a0e g     F .text	00000048 fputwc
81000993 g     F .text	00000006 __sinit_lock_acquire
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b



Disassembly of section .text:

81000000 <main>:
#include "lib_syscall.h"
#include <stdio.h>
<<<<<<< HEAD

char cmd_buf[256];

=======
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
int main(int argc,char** argv){
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	pushl  -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
<<<<<<< HEAD
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp

    printf("\033[2J\n");
#endif

    // 打开tty0设备
    open("tty:0",0);
81000011:	83 ec 08             	sub    $0x8,%esp
81000014:	6a 00                	push   $0x0
81000016:	68 60 37 00 81       	push   $0x81003760
8100001b:	e8 97 01 00 00       	call   810001b7 <open>
81000020:	83 c4 10             	add    $0x10,%esp

    printf("Hello from shell\n");
81000023:	83 ec 0c             	sub    $0xc,%esp
81000026:	68 66 37 00 81       	push   $0x81003766
8100002b:	e8 5b 04 00 00       	call   8100048b <puts>
81000030:	83 c4 10             	add    $0x10,%esp
    
    for(;;){
        gets(cmd_buf);
81000033:	83 ec 0c             	sub    $0xc,%esp
81000036:	68 60 40 00 81       	push   $0x81004060
8100003b:	e8 59 03 00 00       	call   81000399 <gets>
81000040:	83 c4 10             	add    $0x10,%esp
        puts(cmd_buf);
81000043:	83 ec 0c             	sub    $0xc,%esp
81000046:	68 60 40 00 81       	push   $0x81004060
8100004b:	e8 3b 04 00 00       	call   8100048b <puts>
81000050:	83 c4 10             	add    $0x10,%esp
        gets(cmd_buf);
81000053:	eb de                	jmp    81000033 <main+0x33>

81000055 <_start>:
=======
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    sbrk(0);
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	6a 00                	push   $0x0
81000019:	e8 e1 03 00 00       	call   810003ff <sbrk>
8100001e:	83 c4 10             	add    $0x10,%esp
    sbrk(100);
81000021:	83 ec 0c             	sub    $0xc,%esp
81000024:	6a 64                	push   $0x64
81000026:	e8 d4 03 00 00       	call   810003ff <sbrk>
8100002b:	83 c4 10             	add    $0x10,%esp
    sbrk(200);
8100002e:	83 ec 0c             	sub    $0xc,%esp
81000031:	68 c8 00 00 00       	push   $0xc8
81000036:	e8 c4 03 00 00       	call   810003ff <sbrk>
8100003b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*2+200);
8100003e:	83 ec 0c             	sub    $0xc,%esp
81000041:	68 c8 20 00 00       	push   $0x20c8
81000046:	e8 b4 03 00 00       	call   810003ff <sbrk>
8100004b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*5+1234);
8100004e:	83 ec 0c             	sub    $0xc,%esp
81000051:	68 d2 54 00 00       	push   $0x54d2
81000056:	e8 a4 03 00 00       	call   810003ff <sbrk>
8100005b:	83 c4 10             	add    $0x10,%esp
    printf("Hello from shell\n");
8100005e:	83 ec 0c             	sub    $0xc,%esp
81000061:	68 20 47 00 81       	push   $0x81004720
81000066:	e8 ed 04 00 00       	call   81000558 <puts>
8100006b:	83 c4 10             	add    $0x10,%esp

    printf("abef\b\b\b\bcd\n");
8100006e:	83 ec 0c             	sub    $0xc,%esp
81000071:	68 31 47 00 81       	push   $0x81004731
81000076:	e8 dd 04 00 00       	call   81000558 <puts>
8100007b:	83 c4 10             	add    $0x10,%esp
    printf("abcd\x7f;fg\n");
8100007e:	83 ec 0c             	sub    $0xc,%esp
81000081:	68 3c 47 00 81       	push   $0x8100473c
81000086:	e8 cd 04 00 00       	call   81000558 <puts>
8100008b:	83 c4 10             	add    $0x10,%esp
    printf("\0337hello,world\0338123\n");
8100008e:	83 ec 0c             	sub    $0xc,%esp
81000091:	68 45 47 00 81       	push   $0x81004745
81000096:	e8 bd 04 00 00       	call   81000558 <puts>
8100009b:	83 c4 10             	add    $0x10,%esp

    // 必须加换行符 \n 要不然会跳过这句话的打印出现一些问题，会被缓存
    printf("\033[31;42mHello,word!\033[39;49m123\n");
8100009e:	83 ec 0c             	sub    $0xc,%esp
810000a1:	68 58 47 00 81       	push   $0x81004758
810000a6:	e8 ad 04 00 00       	call   81000558 <puts>
810000ab:	83 c4 10             	add    $0x10,%esp

    printf("123\033[2DHello,word!\n");  // 光标左移2，1Hello,word!
810000ae:	83 ec 0c             	sub    $0xc,%esp
810000b1:	68 77 47 00 81       	push   $0x81004777
810000b6:	e8 9d 04 00 00       	call   81000558 <puts>
810000bb:	83 c4 10             	add    $0x10,%esp
    printf("123\033[2CHello,word!\n");  // 光标右移2，123  Hello,word!
810000be:	83 ec 0c             	sub    $0xc,%esp
810000c1:	68 8a 47 00 81       	push   $0x8100478a
810000c6:	e8 8d 04 00 00       	call   81000558 <puts>
810000cb:	83 c4 10             	add    $0x10,%esp

    printf("\033[31m");  // ESC [pn m, Hello,world红色，其余绿色
810000ce:	83 ec 0c             	sub    $0xc,%esp
810000d1:	68 9d 47 00 81       	push   $0x8100479d
810000d6:	e8 72 03 00 00       	call   8100044d <iprintf>
810000db:	83 c4 10             	add    $0x10,%esp
    printf("\033[10;10H test!\n");  // 定位到10, 10，test!
810000de:	83 ec 0c             	sub    $0xc,%esp
810000e1:	68 a3 47 00 81       	push   $0x810047a3
810000e6:	e8 6d 04 00 00       	call   81000558 <puts>
810000eb:	83 c4 10             	add    $0x10,%esp
    printf("\033[20;20H test!\n");  // 定位到20, 20，test!
810000ee:	83 ec 0c             	sub    $0xc,%esp
810000f1:	68 b2 47 00 81       	push   $0x810047b2
810000f6:	e8 5d 04 00 00       	call   81000558 <puts>
810000fb:	83 c4 10             	add    $0x10,%esp
    printf("\033[32;25;39m123\n");  // ESC [pn m, Hello,world红色，其余绿色  
810000fe:	83 ec 0c             	sub    $0xc,%esp
81000101:	68 c1 47 00 81       	push   $0x810047c1
81000106:	e8 4d 04 00 00       	call   81000558 <puts>
8100010b:	83 c4 10             	add    $0x10,%esp

    printf("\033[2J\n");
8100010e:	83 ec 0c             	sub    $0xc,%esp
81000111:	68 d0 47 00 81       	push   $0x810047d0
81000116:	e8 3d 04 00 00       	call   81000558 <puts>
8100011b:	83 c4 10             	add    $0x10,%esp
    
    for(int i=0;i<argc;i++){
8100011e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000125:	eb 26                	jmp    8100014d <main+0x14d>
        print_msg("arg: %s\n",(int)argv[i]);
81000127:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100012a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000131:	8b 43 04             	mov    0x4(%ebx),%eax
81000134:	01 d0                	add    %edx,%eax
81000136:	8b 00                	mov    (%eax),%eax
81000138:	83 ec 08             	sub    $0x8,%esp
8100013b:	50                   	push   %eax
8100013c:	68 d5 47 00 81       	push   $0x810047d5
81000141:	e8 16 01 00 00       	call   8100025c <print_msg>
81000146:	83 c4 10             	add    $0x10,%esp
    for(int i=0;i<argc;i++){
81000149:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100014d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000150:	3b 03                	cmp    (%ebx),%eax
81000152:	7c d3                	jl     81000127 <main+0x127>
    }

    fork();
81000154:	e8 2b 01 00 00       	call   81000284 <fork>
    yield();
81000159:	e8 6f 01 00 00       	call   810002cd <yield>
    
    for(;;){
        printf("shell pid=%d\n",getpid());
8100015e:	e8 de 00 00 00       	call   81000241 <getpid>
81000163:	83 ec 08             	sub    $0x8,%esp
81000166:	50                   	push   %eax
81000167:	68 de 47 00 81       	push   $0x810047de
8100016c:	e8 dc 02 00 00       	call   8100044d <iprintf>
81000171:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
81000174:	83 ec 0c             	sub    $0xc,%esp
81000177:	68 e8 03 00 00       	push   $0x3e8
8100017c:	e8 96 00 00 00       	call   81000217 <msleep>
81000181:	83 c4 10             	add    $0x10,%esp
        printf("shell pid=%d\n",getpid());
81000184:	eb d8                	jmp    8100015e <main+0x15e>

81000186 <_start>:
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
    .text
    .global _start
    .extern cstart
_start:
    mov %ss,%ax
<<<<<<< HEAD
81000055:	66 8c d0             	mov    %ss,%ax
    mov %ax,%ds
81000058:	8e d8                	mov    %eax,%ds
    mov %ax,%es
8100005a:	8e c0                	mov    %eax,%es
    mov %ax,%fs
8100005c:	8e e0                	mov    %eax,%fs
    mov %ax,%gs
8100005e:	8e e8                	mov    %eax,%gs
81000060:	e9 00 00 00 00       	jmp    81000065 <cstart>

81000065 <cstart>:
=======
81000186:	66 8c d0             	mov    %ss,%ax
    mov %ax,%ds
81000189:	8e d8                	mov    %eax,%ds
    mov %ax,%es
8100018b:	8e c0                	mov    %eax,%es
    mov %ax,%fs
8100018d:	8e e0                	mov    %eax,%fs
    mov %ax,%gs
8100018f:	8e e8                	mov    %eax,%gs
81000191:	e9 00 00 00 00       	jmp    81000196 <cstart>

81000196 <cstart>:
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b

int main(int argc,char** argv);

extern uint8_t __bss_start__[],__bss_end__[];

void cstart(int argc,char **argv){
<<<<<<< HEAD
81000065:	55                   	push   %ebp
81000066:	89 e5                	mov    %esp,%ebp
81000068:	83 ec 18             	sub    $0x18,%esp
    uint8_t* start=__bss_start__;
8100006b:	c7 45 f4 e0 3f 00 81 	movl   $0x81003fe0,-0xc(%ebp)
    
    while(start<__bss_end__){
81000072:	eb 09                	jmp    8100007d <cstart+0x18>
        *start++;     
81000074:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000077:	83 c0 01             	add    $0x1,%eax
8100007a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start<__bss_end__){
8100007d:	81 7d f4 50 40 00 81 	cmpl   $0x81004050,-0xc(%ebp)
81000084:	72 ee                	jb     81000074 <cstart+0xf>
    }

    main(argc,argv);
81000086:	83 ec 08             	sub    $0x8,%esp
81000089:	ff 75 0c             	pushl  0xc(%ebp)
8100008c:	ff 75 08             	pushl  0x8(%ebp)
8100008f:	e8 6c ff ff ff       	call   81000000 <main>
81000094:	83 c4 10             	add    $0x10,%esp
81000097:	90                   	nop
81000098:	c9                   	leave  
81000099:	c3                   	ret    

8100009a <sys_call>:
=======
81000196:	55                   	push   %ebp
81000197:	89 e5                	mov    %esp,%ebp
81000199:	83 ec 18             	sub    $0x18,%esp
    uint8_t* start=__bss_start__;
8100019c:	c7 45 f4 40 55 00 81 	movl   $0x81005540,-0xc(%ebp)
    
    while(start<__bss_end__){
810001a3:	eb 09                	jmp    810001ae <cstart+0x18>
        *start++;     
810001a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810001a8:	83 c0 01             	add    $0x1,%eax
810001ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start<__bss_end__){
810001ae:	81 7d f4 b4 55 00 81 	cmpl   $0x810055b4,-0xc(%ebp)
810001b5:	72 ee                	jb     810001a5 <cstart+0xf>
    }

    main(argc,argv);
810001b7:	83 ec 08             	sub    $0x8,%esp
810001ba:	ff 75 0c             	pushl  0xc(%ebp)
810001bd:	ff 75 08             	pushl  0x8(%ebp)
810001c0:	e8 3b fe ff ff       	call   81000000 <main>
810001c5:	83 c4 10             	add    $0x10,%esp
810001c8:	90                   	nop
810001c9:	c9                   	leave  
810001ca:	c3                   	ret    

810001cb <sys_call>:
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
#include "lib_syscall.h"
#include "comm/types.h"
#include "core/syscall.h"
#include "os_cfg.h"

static inline int sys_call(syscall_args_t*args){
<<<<<<< HEAD
8100009a:	55                   	push   %ebp
8100009b:	89 e5                	mov    %esp,%ebp
8100009d:	57                   	push   %edi
8100009e:	56                   	push   %esi
8100009f:	53                   	push   %ebx
810000a0:	83 ec 10             	sub    $0x10,%esp
    uint32_t addr[]={0,SELECTOR_SYSCALL | 0};
810000a3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000aa:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
=======
810001cb:	55                   	push   %ebp
810001cc:	89 e5                	mov    %esp,%ebp
810001ce:	57                   	push   %edi
810001cf:	56                   	push   %esi
810001d0:	53                   	push   %ebx
810001d1:	83 ec 10             	sub    $0x10,%esp
    uint32_t addr[]={0,SELECTOR_SYSCALL | 0};
810001d4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810001db:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcall *(%[a])"
        :"=a"(ret)
        :[a]"r"(addr),
         [arg3]"r"(args->arg3),
<<<<<<< HEAD
810000b1:	8b 45 08             	mov    0x8(%ebp),%eax
810000b4:	8b 50 10             	mov    0x10(%eax),%edx
         [arg2]"r"(args->arg2),
810000b7:	8b 45 08             	mov    0x8(%ebp),%eax
810000ba:	8b 48 0c             	mov    0xc(%eax),%ecx
         [arg1]"r"(args->arg1),
810000bd:	8b 45 08             	mov    0x8(%ebp),%eax
810000c0:	8b 58 08             	mov    0x8(%eax),%ebx
         [arg0]"r"(args->arg0),
810000c3:	8b 45 08             	mov    0x8(%ebp),%eax
810000c6:	8b 70 04             	mov    0x4(%eax),%esi
         [id]"r"(args->id)
810000c9:	8b 45 08             	mov    0x8(%ebp),%eax
810000cc:	8b 38                	mov    (%eax),%edi
    __asm__ __volatile__(
810000ce:	8d 45 e8             	lea    -0x18(%ebp),%eax
810000d1:	52                   	push   %edx
810000d2:	51                   	push   %ecx
810000d3:	53                   	push   %ebx
810000d4:	56                   	push   %esi
810000d5:	57                   	push   %edi
810000d6:	ff 18                	lcall  *(%eax)
810000d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    );
    return ret;
810000db:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810000de:	83 c4 10             	add    $0x10,%esp
810000e1:	5b                   	pop    %ebx
810000e2:	5e                   	pop    %esi
810000e3:	5f                   	pop    %edi
810000e4:	5d                   	pop    %ebp
810000e5:	c3                   	ret    

810000e6 <msleep>:

void msleep(int ms){
810000e6:	55                   	push   %ebp
810000e7:	89 e5                	mov    %esp,%ebp
810000e9:	83 ec 20             	sub    $0x20,%esp
    if(ms<=0){
810000ec:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810000f0:	7e 1b                	jle    8100010d <msleep+0x27>
=======
810001e2:	8b 45 08             	mov    0x8(%ebp),%eax
810001e5:	8b 50 10             	mov    0x10(%eax),%edx
         [arg2]"r"(args->arg2),
810001e8:	8b 45 08             	mov    0x8(%ebp),%eax
810001eb:	8b 48 0c             	mov    0xc(%eax),%ecx
         [arg1]"r"(args->arg1),
810001ee:	8b 45 08             	mov    0x8(%ebp),%eax
810001f1:	8b 58 08             	mov    0x8(%eax),%ebx
         [arg0]"r"(args->arg0),
810001f4:	8b 45 08             	mov    0x8(%ebp),%eax
810001f7:	8b 70 04             	mov    0x4(%eax),%esi
         [id]"r"(args->id)
810001fa:	8b 45 08             	mov    0x8(%ebp),%eax
810001fd:	8b 38                	mov    (%eax),%edi
    __asm__ __volatile__(
810001ff:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000202:	52                   	push   %edx
81000203:	51                   	push   %ecx
81000204:	53                   	push   %ebx
81000205:	56                   	push   %esi
81000206:	57                   	push   %edi
81000207:	ff 18                	lcall  *(%eax)
81000209:	89 45 f0             	mov    %eax,-0x10(%ebp)
    );
    return ret;
8100020c:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100020f:	83 c4 10             	add    $0x10,%esp
81000212:	5b                   	pop    %ebx
81000213:	5e                   	pop    %esi
81000214:	5f                   	pop    %edi
81000215:	5d                   	pop    %ebp
81000216:	c3                   	ret    

81000217 <msleep>:

void msleep(int ms){
81000217:	55                   	push   %ebp
81000218:	89 e5                	mov    %esp,%ebp
8100021a:	83 ec 20             	sub    $0x20,%esp
    if(ms<=0){
8100021d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000221:	7e 1b                	jle    8100023e <msleep+0x27>
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
        return;
    }

    syscall_args_t args;
    args.id=SYS_SLEEP;
<<<<<<< HEAD
810000f2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0=ms;
810000f9:	8b 45 08             	mov    0x8(%ebp),%eax
810000fc:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810000ff:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000102:	50                   	push   %eax
81000103:	e8 92 ff ff ff       	call   8100009a <sys_call>
81000108:	83 c4 04             	add    $0x4,%esp
8100010b:	eb 01                	jmp    8100010e <msleep+0x28>
        return;
8100010d:	90                   	nop
}
8100010e:	c9                   	leave  
8100010f:	c3                   	ret    

81000110 <getpid>:

int getpid(void){
81000110:	55                   	push   %ebp
81000111:	89 e5                	mov    %esp,%ebp
81000113:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_GETPID;
81000116:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
8100011d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000120:	50                   	push   %eax
81000121:	e8 74 ff ff ff       	call   8100009a <sys_call>
81000126:	83 c4 04             	add    $0x4,%esp
}
81000129:	c9                   	leave  
8100012a:	c3                   	ret    

8100012b <print_msg>:

void print_msg(const char* fmt,int arg){
8100012b:	55                   	push   %ebp
8100012c:	89 e5                	mov    %esp,%ebp
8100012e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_PRINT_MSG;
81000131:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0=(uint32_t)fmt;
81000138:	8b 45 08             	mov    0x8(%ebp),%eax
8100013b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=arg;
8100013e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000141:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000144:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000147:	50                   	push   %eax
81000148:	e8 4d ff ff ff       	call   8100009a <sys_call>
8100014d:	83 c4 04             	add    $0x4,%esp
}
81000150:	90                   	nop
81000151:	c9                   	leave  
81000152:	c3                   	ret    

81000153 <fork>:

int fork(void){
81000153:	55                   	push   %ebp
81000154:	89 e5                	mov    %esp,%ebp
81000156:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FORK;
81000159:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000160:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000163:	50                   	push   %eax
81000164:	e8 31 ff ff ff       	call   8100009a <sys_call>
81000169:	83 c4 04             	add    $0x4,%esp
}
8100016c:	c9                   	leave  
8100016d:	c3                   	ret    

8100016e <execve>:

int execve(const char* name,char* const* argv,char* const* env){
8100016e:	55                   	push   %ebp
8100016f:	89 e5                	mov    %esp,%ebp
81000171:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXECVE;
81000174:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0=(int)name;
8100017b:	8b 45 08             	mov    0x8(%ebp),%eax
8100017e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)argv;
81000181:	8b 45 0c             	mov    0xc(%ebp),%eax
81000184:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)env;
81000187:	8b 45 10             	mov    0x10(%ebp),%eax
8100018a:	89 45 f8             	mov    %eax,-0x8(%ebp)

    sys_call(&args);
8100018d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000190:	50                   	push   %eax
81000191:	e8 04 ff ff ff       	call   8100009a <sys_call>
81000196:	83 c4 04             	add    $0x4,%esp
}
81000199:	90                   	nop
8100019a:	c9                   	leave  
8100019b:	c3                   	ret    

8100019c <yield>:

int yield(void){
8100019c:	55                   	push   %ebp
8100019d:	89 e5                	mov    %esp,%ebp
8100019f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_YIELD;
810001a2:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810001a9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001ac:	50                   	push   %eax
810001ad:	e8 e8 fe ff ff       	call   8100009a <sys_call>
810001b2:	83 c4 04             	add    $0x4,%esp
}
810001b5:	c9                   	leave  
810001b6:	c3                   	ret    

810001b7 <open>:

int open(const char*name,int flags, ...){
810001b7:	55                   	push   %ebp
810001b8:	89 e5                	mov    %esp,%ebp
810001ba:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_OPEN;
810001bd:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0=(int)name;
810001c4:	8b 45 08             	mov    0x8(%ebp),%eax
810001c7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)flags;
810001ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810001cd:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810001d0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001d3:	50                   	push   %eax
810001d4:	e8 c1 fe ff ff       	call   8100009a <sys_call>
810001d9:	83 c4 04             	add    $0x4,%esp
}
810001dc:	c9                   	leave  
810001dd:	c3                   	ret    

810001de <read>:

int read(int file,char* ptr,int len){
810001de:	55                   	push   %ebp
810001df:	89 e5                	mov    %esp,%ebp
810001e1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_READ;
810001e4:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0=(int)file;
810001eb:	8b 45 08             	mov    0x8(%ebp),%eax
810001ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
810001f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810001f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
810001f7:	8b 45 10             	mov    0x10(%ebp),%eax
810001fa:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810001fd:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000200:	50                   	push   %eax
81000201:	e8 94 fe ff ff       	call   8100009a <sys_call>
81000206:	83 c4 04             	add    $0x4,%esp
}
81000209:	c9                   	leave  
8100020a:	c3                   	ret    

8100020b <write>:

int write(int file,char*ptr,int len){
8100020b:	55                   	push   %ebp
8100020c:	89 e5                	mov    %esp,%ebp
8100020e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WRITE;
81000211:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0=(int)file;
81000218:	8b 45 08             	mov    0x8(%ebp),%eax
8100021b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
8100021e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000221:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000224:	8b 45 10             	mov    0x10(%ebp),%eax
81000227:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100022a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100022d:	50                   	push   %eax
8100022e:	e8 67 fe ff ff       	call   8100009a <sys_call>
81000233:	83 c4 04             	add    $0x4,%esp
}
81000236:	c9                   	leave  
81000237:	c3                   	ret    

81000238 <close>:

int close(int file){
81000238:	55                   	push   %ebp
81000239:	89 e5                	mov    %esp,%ebp
8100023b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_CLOSE;
8100023e:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0=(int)file;
81000245:	8b 45 08             	mov    0x8(%ebp),%eax
81000248:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100024b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100024e:	50                   	push   %eax
8100024f:	e8 46 fe ff ff       	call   8100009a <sys_call>
81000254:	83 c4 04             	add    $0x4,%esp
}
81000257:	c9                   	leave  
81000258:	c3                   	ret    

81000259 <lseek>:

int lseek(int file,int ptr,int dir){
81000259:	55                   	push   %ebp
8100025a:	89 e5                	mov    %esp,%ebp
8100025c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_LSEEK;
8100025f:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0=(int)file;
81000266:	8b 45 08             	mov    0x8(%ebp),%eax
81000269:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
8100026c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100026f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)dir;
81000272:	8b 45 10             	mov    0x10(%ebp),%eax
81000275:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000278:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100027b:	50                   	push   %eax
8100027c:	e8 19 fe ff ff       	call   8100009a <sys_call>
81000281:	83 c4 04             	add    $0x4,%esp
}
81000284:	c9                   	leave  
81000285:	c3                   	ret    

81000286 <isatty>:

int isatty(int file){
81000286:	55                   	push   %ebp
81000287:	89 e5                	mov    %esp,%ebp
81000289:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_ISATTY;
8100028c:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0=(int)file;
81000293:	8b 45 08             	mov    0x8(%ebp),%eax
81000296:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000299:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029c:	50                   	push   %eax
8100029d:	e8 f8 fd ff ff       	call   8100009a <sys_call>
810002a2:	83 c4 04             	add    $0x4,%esp
}
810002a5:	c9                   	leave  
810002a6:	c3                   	ret    

810002a7 <fstat>:

int fstat(int file,struct stat* st){
810002a7:	55                   	push   %ebp
810002a8:	89 e5                	mov    %esp,%ebp
810002aa:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FSTAT;
810002ad:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0=(int)file;
810002b4:	8b 45 08             	mov    0x8(%ebp),%eax
810002b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)st;
810002ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810002bd:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002c0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c3:	50                   	push   %eax
810002c4:	e8 d1 fd ff ff       	call   8100009a <sys_call>
810002c9:	83 c4 04             	add    $0x4,%esp
}
810002cc:	c9                   	leave  
810002cd:	c3                   	ret    

810002ce <sbrk>:

void* sbrk(ptrdiff_t incr){
810002ce:	55                   	push   %ebp
810002cf:	89 e5                	mov    %esp,%ebp
810002d1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_SBRK;
810002d4:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0=(int)incr;
810002db:	8b 45 08             	mov    0x8(%ebp),%eax
810002de:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (void*)sys_call(&args);
810002e1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e4:	50                   	push   %eax
810002e5:	e8 b0 fd ff ff       	call   8100009a <sys_call>
810002ea:	83 c4 04             	add    $0x4,%esp
810002ed:	c9                   	leave  
810002ee:	c3                   	ret    

810002ef <_gets_r>:
810002ef:	55                   	push   %ebp
810002f0:	89 e5                	mov    %esp,%ebp
810002f2:	56                   	push   %esi
810002f3:	53                   	push   %ebx
810002f4:	83 ec 10             	sub    $0x10,%esp
810002f7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810002fa:	8b 45 08             	mov    0x8(%ebp),%eax
810002fd:	8b 40 04             	mov    0x4(%eax),%eax
81000300:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000303:	8b 45 08             	mov    0x8(%ebp),%eax
81000306:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000309:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100030d:	74 34                	je     81000343 <_gets_r+0x54>
8100030f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000312:	8b 40 38             	mov    0x38(%eax),%eax
81000315:	85 c0                	test   %eax,%eax
81000317:	75 2a                	jne    81000343 <_gets_r+0x54>
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	ff 75 f0             	pushl  -0x10(%ebp)
8100031f:	e8 7a 05 00 00       	call   8100089e <__sinit>
81000324:	83 c4 10             	add    $0x10,%esp
81000327:	eb 1a                	jmp    81000343 <_gets_r+0x54>
81000329:	83 fe ff             	cmp    $0xffffffff,%esi
8100032c:	75 0c                	jne    8100033a <_gets_r+0x4b>
8100032e:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
81000331:	75 58                	jne    8100038b <_gets_r+0x9c>
81000333:	b8 00 00 00 00       	mov    $0x0,%eax
81000338:	eb 58                	jmp    81000392 <_gets_r+0xa3>
8100033a:	89 d8                	mov    %ebx,%eax
8100033c:	8d 58 01             	lea    0x1(%eax),%ebx
8100033f:	89 f2                	mov    %esi,%edx
81000341:	88 10                	mov    %dl,(%eax)
81000343:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000346:	8b 40 04             	mov    0x4(%eax),%eax
81000349:	8d 50 ff             	lea    -0x1(%eax),%edx
8100034c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100034f:	89 50 04             	mov    %edx,0x4(%eax)
81000352:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000355:	8b 40 04             	mov    0x4(%eax),%eax
81000358:	85 c0                	test   %eax,%eax
8100035a:	79 13                	jns    8100036f <_gets_r+0x80>
8100035c:	83 ec 08             	sub    $0x8,%esp
8100035f:	ff 75 f4             	pushl  -0xc(%ebp)
81000362:	ff 75 08             	pushl  0x8(%ebp)
81000365:	e8 3d 01 00 00       	call   810004a7 <__srget_r>
8100036a:	83 c4 10             	add    $0x10,%esp
8100036d:	eb 13                	jmp    81000382 <_gets_r+0x93>
8100036f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000372:	8b 00                	mov    (%eax),%eax
81000374:	8d 48 01             	lea    0x1(%eax),%ecx
81000377:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100037a:	89 0a                	mov    %ecx,(%edx)
8100037c:	0f b6 00             	movzbl (%eax),%eax
8100037f:	0f b6 c0             	movzbl %al,%eax
81000382:	89 c6                	mov    %eax,%esi
81000384:	83 fe 0a             	cmp    $0xa,%esi
81000387:	75 a0                	jne    81000329 <_gets_r+0x3a>
81000389:	eb 01                	jmp    8100038c <_gets_r+0x9d>
8100038b:	90                   	nop
8100038c:	c6 03 00             	movb   $0x0,(%ebx)
8100038f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000392:	8d 65 f8             	lea    -0x8(%ebp),%esp
81000395:	5b                   	pop    %ebx
81000396:	5e                   	pop    %esi
81000397:	5d                   	pop    %ebp
81000398:	c3                   	ret    

81000399 <gets>:
81000399:	55                   	push   %ebp
8100039a:	89 e5                	mov    %esp,%ebp
8100039c:	83 ec 08             	sub    $0x8,%esp
8100039f:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
810003a4:	83 ec 08             	sub    $0x8,%esp
810003a7:	ff 75 08             	pushl  0x8(%ebp)
810003aa:	50                   	push   %eax
810003ab:	e8 3f ff ff ff       	call   810002ef <_gets_r>
810003b0:	83 c4 10             	add    $0x10,%esp
810003b3:	c9                   	leave  
810003b4:	c3                   	ret    

810003b5 <_puts_r>:
810003b5:	55                   	push   %ebp
810003b6:	89 e5                	mov    %esp,%ebp
810003b8:	83 ec 38             	sub    $0x38,%esp
810003bb:	83 ec 0c             	sub    $0xc,%esp
810003be:	ff 75 0c             	pushl  0xc(%ebp)
810003c1:	e8 6a 01 00 00       	call   81000530 <strlen>
810003c6:	83 c4 10             	add    $0x10,%esp
810003c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810003cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810003cf:	89 45 cc             	mov    %eax,-0x34(%ebp)
810003d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003d5:	89 45 d0             	mov    %eax,-0x30(%ebp)
810003d8:	c7 45 d4 7c 37 00 81 	movl   $0x8100377c,-0x2c(%ebp)
810003df:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810003e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003e9:	83 c0 01             	add    $0x1,%eax
810003ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810003ef:	8d 45 cc             	lea    -0x34(%ebp),%eax
810003f2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810003f5:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810003fc:	8b 45 08             	mov    0x8(%ebp),%eax
810003ff:	8b 40 08             	mov    0x8(%eax),%eax
81000402:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000405:	8b 45 08             	mov    0x8(%ebp),%eax
81000408:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100040b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040f:	74 18                	je     81000429 <_puts_r+0x74>
81000411:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000414:	8b 40 38             	mov    0x38(%eax),%eax
81000417:	85 c0                	test   %eax,%eax
81000419:	75 0e                	jne    81000429 <_puts_r+0x74>
8100041b:	83 ec 0c             	sub    $0xc,%esp
8100041e:	ff 75 ec             	pushl  -0x14(%ebp)
81000421:	e8 78 04 00 00       	call   8100089e <__sinit>
81000426:	83 c4 10             	add    $0x10,%esp
81000429:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100042c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000430:	98                   	cwtl   
81000431:	25 00 20 00 00       	and    $0x2000,%eax
81000436:	85 c0                	test   %eax,%eax
81000438:	75 24                	jne    8100045e <_puts_r+0xa9>
8100043a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100043d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000441:	80 cc 20             	or     $0x20,%ah
81000444:	89 c2                	mov    %eax,%edx
81000446:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000449:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100044d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000450:	8b 40 64             	mov    0x64(%eax),%eax
81000453:	80 e4 df             	and    $0xdf,%ah
81000456:	89 c2                	mov    %eax,%edx
81000458:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100045b:	89 50 64             	mov    %edx,0x64(%eax)
8100045e:	83 ec 04             	sub    $0x4,%esp
81000461:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000464:	50                   	push   %eax
81000465:	ff 75 f0             	pushl  -0x10(%ebp)
81000468:	ff 75 08             	pushl  0x8(%ebp)
8100046b:	e8 3b 05 00 00       	call   810009ab <__sfvwrite_r>
81000470:	83 c4 10             	add    $0x10,%esp
81000473:	85 c0                	test   %eax,%eax
81000475:	74 07                	je     8100047e <_puts_r+0xc9>
81000477:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100047c:	eb 05                	jmp    81000483 <_puts_r+0xce>
8100047e:	b8 0a 00 00 00       	mov    $0xa,%eax
81000483:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000486:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000489:	c9                   	leave  
8100048a:	c3                   	ret    

8100048b <puts>:
8100048b:	55                   	push   %ebp
8100048c:	89 e5                	mov    %esp,%ebp
8100048e:	83 ec 08             	sub    $0x8,%esp
81000491:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000496:	83 ec 08             	sub    $0x8,%esp
81000499:	ff 75 08             	pushl  0x8(%ebp)
8100049c:	50                   	push   %eax
8100049d:	e8 13 ff ff ff       	call   810003b5 <_puts_r>
810004a2:	83 c4 10             	add    $0x10,%esp
810004a5:	c9                   	leave  
810004a6:	c3                   	ret    

810004a7 <__srget_r>:
810004a7:	55                   	push   %ebp
810004a8:	89 e5                	mov    %esp,%ebp
810004aa:	53                   	push   %ebx
810004ab:	83 ec 14             	sub    $0x14,%esp
810004ae:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810004b1:	8b 45 08             	mov    0x8(%ebp),%eax
810004b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810004bb:	74 18                	je     810004d5 <__srget_r+0x2e>
810004bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004c0:	8b 40 38             	mov    0x38(%eax),%eax
810004c3:	85 c0                	test   %eax,%eax
810004c5:	75 0e                	jne    810004d5 <__srget_r+0x2e>
810004c7:	83 ec 0c             	sub    $0xc,%esp
810004ca:	ff 75 f4             	pushl  -0xc(%ebp)
810004cd:	e8 cc 03 00 00       	call   8100089e <__sinit>
810004d2:	83 c4 10             	add    $0x10,%esp
810004d5:	83 ec 08             	sub    $0x8,%esp
810004d8:	53                   	push   %ebx
810004d9:	ff 75 08             	pushl  0x8(%ebp)
810004dc:	e8 07 20 00 00       	call   810024e8 <__srefill_r>
810004e1:	83 c4 10             	add    $0x10,%esp
810004e4:	85 c0                	test   %eax,%eax
810004e6:	75 18                	jne    81000500 <__srget_r+0x59>
810004e8:	8b 43 04             	mov    0x4(%ebx),%eax
810004eb:	83 e8 01             	sub    $0x1,%eax
810004ee:	89 43 04             	mov    %eax,0x4(%ebx)
810004f1:	8b 03                	mov    (%ebx),%eax
810004f3:	8d 50 01             	lea    0x1(%eax),%edx
810004f6:	89 13                	mov    %edx,(%ebx)
810004f8:	0f b6 00             	movzbl (%eax),%eax
810004fb:	0f b6 c0             	movzbl %al,%eax
810004fe:	eb 05                	jmp    81000505 <__srget_r+0x5e>
81000500:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000505:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000508:	c9                   	leave  
81000509:	c3                   	ret    

8100050a <__srget>:
8100050a:	55                   	push   %ebp
8100050b:	89 e5                	mov    %esp,%ebp
8100050d:	83 ec 08             	sub    $0x8,%esp
81000510:	8b 55 08             	mov    0x8(%ebp),%edx
81000513:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000518:	83 ec 08             	sub    $0x8,%esp
8100051b:	52                   	push   %edx
8100051c:	50                   	push   %eax
8100051d:	e8 85 ff ff ff       	call   810004a7 <__srget_r>
81000522:	83 c4 10             	add    $0x10,%esp
81000525:	c9                   	leave  
81000526:	c3                   	ret    
81000527:	66 90                	xchg   %ax,%ax
81000529:	66 90                	xchg   %ax,%ax
8100052b:	66 90                	xchg   %ax,%ax
8100052d:	66 90                	xchg   %ax,%ax
8100052f:	90                   	nop

81000530 <strlen>:
81000530:	55                   	push   %ebp
81000531:	89 e5                	mov    %esp,%ebp
81000533:	57                   	push   %edi
81000534:	8b 55 08             	mov    0x8(%ebp),%edx
81000537:	89 d7                	mov    %edx,%edi
81000539:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100053f:	74 25                	je     81000566 <L5>
81000541:	8a 0f                	mov    (%edi),%cl
81000543:	47                   	inc    %edi
81000544:	84 c9                	test   %cl,%cl
81000546:	74 56                	je     8100059e <L15>
81000548:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100054e:	74 16                	je     81000566 <L5>
81000550:	8a 0f                	mov    (%edi),%cl
81000552:	47                   	inc    %edi
81000553:	84 c9                	test   %cl,%cl
81000555:	74 47                	je     8100059e <L15>
81000557:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100055d:	74 07                	je     81000566 <L5>
8100055f:	8a 0f                	mov    (%edi),%cl
81000561:	47                   	inc    %edi
81000562:	84 c9                	test   %cl,%cl
81000564:	74 38                	je     8100059e <L15>

81000566 <L5>:
81000566:	83 ef 04             	sub    $0x4,%edi
81000569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000570 <L10>:
81000570:	83 c7 04             	add    $0x4,%edi
81000573:	8b 0f                	mov    (%edi),%ecx
81000575:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100057b:	f7 d1                	not    %ecx
8100057d:	21 c8                	and    %ecx,%eax
8100057f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000584:	74 ea                	je     81000570 <L10>
81000586:	f7 d1                	not    %ecx
81000588:	47                   	inc    %edi
81000589:	84 c9                	test   %cl,%cl
8100058b:	74 11                	je     8100059e <L15>
8100058d:	47                   	inc    %edi
8100058e:	c1 e9 08             	shr    $0x8,%ecx
81000591:	84 c9                	test   %cl,%cl
81000593:	74 09                	je     8100059e <L15>
81000595:	47                   	inc    %edi
81000596:	c1 e9 08             	shr    $0x8,%ecx
81000599:	84 c9                	test   %cl,%cl
8100059b:	74 01                	je     8100059e <L15>
8100059d:	47                   	inc    %edi

8100059e <L15>:
8100059e:	29 d7                	sub    %edx,%edi
810005a0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005a3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005a6:	5f                   	pop    %edi
810005a7:	c9                   	leave  
810005a8:	c3                   	ret    

810005a9 <std>:
810005a9:	55                   	push   %ebp
810005aa:	89 e5                	mov    %esp,%ebp
810005ac:	83 ec 08             	sub    $0x8,%esp
810005af:	8b 45 08             	mov    0x8(%ebp),%eax
810005b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005b8:	8b 45 08             	mov    0x8(%ebp),%eax
810005bb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810005c2:	8b 45 08             	mov    0x8(%ebp),%eax
810005c5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810005cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cf:	89 c2                	mov    %eax,%edx
810005d1:	8b 45 08             	mov    0x8(%ebp),%eax
810005d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810005d8:	8b 45 08             	mov    0x8(%ebp),%eax
810005db:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810005e2:	8b 45 10             	mov    0x10(%ebp),%eax
810005e5:	89 c2                	mov    %eax,%edx
810005e7:	8b 45 08             	mov    0x8(%ebp),%eax
810005ea:	66 89 50 0e          	mov    %dx,0xe(%eax)
810005ee:	8b 45 08             	mov    0x8(%ebp),%eax
810005f1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810005f8:	8b 45 08             	mov    0x8(%ebp),%eax
810005fb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000602:	8b 45 08             	mov    0x8(%ebp),%eax
81000605:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100060c:	8b 45 08             	mov    0x8(%ebp),%eax
8100060f:	83 c0 5c             	add    $0x5c,%eax
81000612:	83 ec 04             	sub    $0x4,%esp
81000615:	6a 08                	push   $0x8
81000617:	6a 00                	push   $0x0
81000619:	50                   	push   %eax
8100061a:	e8 2e 15 00 00       	call   81001b4d <memset>
8100061f:	83 c4 10             	add    $0x10,%esp
81000622:	8b 45 08             	mov    0x8(%ebp),%eax
81000625:	8b 55 08             	mov    0x8(%ebp),%edx
81000628:	89 50 1c             	mov    %edx,0x1c(%eax)
8100062b:	8b 45 08             	mov    0x8(%ebp),%eax
8100062e:	c7 40 20 29 27 00 81 	movl   $0x81002729,0x20(%eax)
81000635:	8b 45 08             	mov    0x8(%ebp),%eax
81000638:	c7 40 24 77 27 00 81 	movl   $0x81002777,0x24(%eax)
8100063f:	8b 45 08             	mov    0x8(%ebp),%eax
81000642:	c7 40 28 d2 27 00 81 	movl   $0x810027d2,0x28(%eax)
81000649:	8b 45 08             	mov    0x8(%ebp),%eax
8100064c:	c7 40 2c 1c 28 00 81 	movl   $0x8100281c,0x2c(%eax)
81000653:	90                   	nop
81000654:	c9                   	leave  
81000655:	c3                   	ret    

81000656 <stdin_init>:
81000656:	55                   	push   %ebp
81000657:	89 e5                	mov    %esp,%ebp
81000659:	83 ec 08             	sub    $0x8,%esp
8100065c:	83 ec 04             	sub    $0x4,%esp
8100065f:	6a 00                	push   $0x0
81000661:	6a 04                	push   $0x4
81000663:	ff 75 08             	pushl  0x8(%ebp)
81000666:	e8 3e ff ff ff       	call   810005a9 <std>
8100066b:	83 c4 10             	add    $0x10,%esp
8100066e:	90                   	nop
8100066f:	c9                   	leave  
81000670:	c3                   	ret    

81000671 <stdout_init>:
81000671:	55                   	push   %ebp
81000672:	89 e5                	mov    %esp,%ebp
81000674:	83 ec 08             	sub    $0x8,%esp
81000677:	83 ec 04             	sub    $0x4,%esp
8100067a:	6a 01                	push   $0x1
8100067c:	6a 09                	push   $0x9
8100067e:	ff 75 08             	pushl  0x8(%ebp)
81000681:	e8 23 ff ff ff       	call   810005a9 <std>
81000686:	83 c4 10             	add    $0x10,%esp
81000689:	90                   	nop
8100068a:	c9                   	leave  
8100068b:	c3                   	ret    

8100068c <stderr_init>:
8100068c:	55                   	push   %ebp
8100068d:	89 e5                	mov    %esp,%ebp
8100068f:	83 ec 08             	sub    $0x8,%esp
81000692:	83 ec 04             	sub    $0x4,%esp
81000695:	6a 02                	push   $0x2
81000697:	6a 12                	push   $0x12
81000699:	ff 75 08             	pushl  0x8(%ebp)
8100069c:	e8 08 ff ff ff       	call   810005a9 <std>
810006a1:	83 c4 10             	add    $0x10,%esp
810006a4:	90                   	nop
810006a5:	c9                   	leave  
810006a6:	c3                   	ret    

810006a7 <__sfmoreglue>:
810006a7:	55                   	push   %ebp
810006a8:	89 e5                	mov    %esp,%ebp
810006aa:	53                   	push   %ebx
810006ab:	83 ec 14             	sub    $0x14,%esp
810006ae:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006b1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006b4:	6b c0 68             	imul   $0x68,%eax,%eax
810006b7:	83 c0 74             	add    $0x74,%eax
810006ba:	83 ec 08             	sub    $0x8,%esp
810006bd:	50                   	push   %eax
810006be:	ff 75 08             	pushl  0x8(%ebp)
810006c1:	e8 e9 0a 00 00       	call   810011af <_malloc_r>
810006c6:	83 c4 10             	add    $0x10,%esp
810006c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006cc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006d0:	75 07                	jne    810006d9 <__sfmoreglue+0x32>
810006d2:	b8 00 00 00 00       	mov    $0x0,%eax
810006d7:	eb 38                	jmp    81000711 <__sfmoreglue+0x6a>
810006d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006dc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e5:	89 58 04             	mov    %ebx,0x4(%eax)
810006e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006eb:	8d 50 0c             	lea    0xc(%eax),%edx
810006ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f1:	89 50 08             	mov    %edx,0x8(%eax)
810006f4:	89 d8                	mov    %ebx,%eax
810006f6:	6b c0 68             	imul   $0x68,%eax,%eax
810006f9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810006fc:	83 c2 0c             	add    $0xc,%edx
810006ff:	83 ec 04             	sub    $0x4,%esp
81000702:	50                   	push   %eax
81000703:	6a 00                	push   $0x0
81000705:	52                   	push   %edx
81000706:	e8 42 14 00 00       	call   81001b4d <memset>
8100070b:	83 c4 10             	add    $0x10,%esp
8100070e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000711:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000714:	c9                   	leave  
81000715:	c3                   	ret    

81000716 <__sfp>:
81000716:	55                   	push   %ebp
81000717:	89 e5                	mov    %esp,%ebp
81000719:	83 ec 18             	sub    $0x18,%esp
8100071c:	e8 16 02 00 00       	call   81000937 <__sfp_lock_acquire>
81000721:	a1 78 37 00 81       	mov    0x81003778,%eax
81000726:	8b 40 38             	mov    0x38(%eax),%eax
81000729:	85 c0                	test   %eax,%eax
8100072b:	75 11                	jne    8100073e <__sfp+0x28>
8100072d:	a1 78 37 00 81       	mov    0x81003778,%eax
81000732:	83 ec 0c             	sub    $0xc,%esp
81000735:	50                   	push   %eax
81000736:	e8 63 01 00 00       	call   8100089e <__sinit>
8100073b:	83 c4 10             	add    $0x10,%esp
8100073e:	a1 78 37 00 81       	mov    0x81003778,%eax
81000743:	05 e0 02 00 00       	add    $0x2e0,%eax
81000748:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100074b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100074e:	8b 40 08             	mov    0x8(%eax),%eax
81000751:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000754:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000757:	8b 40 04             	mov    0x4(%eax),%eax
8100075a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100075d:	eb 10                	jmp    8100076f <__sfp+0x59>
8100075f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000762:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000766:	66 85 c0             	test   %ax,%ax
81000769:	74 58                	je     810007c3 <__sfp+0xad>
8100076b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100076f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000773:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000777:	79 e6                	jns    8100075f <__sfp+0x49>
81000779:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100077c:	8b 00                	mov    (%eax),%eax
8100077e:	85 c0                	test   %eax,%eax
81000780:	75 1e                	jne    810007a0 <__sfp+0x8a>
81000782:	83 ec 08             	sub    $0x8,%esp
81000785:	6a 04                	push   $0x4
81000787:	ff 75 08             	pushl  0x8(%ebp)
8100078a:	e8 18 ff ff ff       	call   810006a7 <__sfmoreglue>
8100078f:	83 c4 10             	add    $0x10,%esp
81000792:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000795:	89 02                	mov    %eax,(%edx)
81000797:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100079a:	8b 00                	mov    (%eax),%eax
8100079c:	85 c0                	test   %eax,%eax
8100079e:	74 0a                	je     810007aa <__sfp+0x94>
810007a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007a3:	8b 00                	mov    (%eax),%eax
810007a5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007a8:	eb a1                	jmp    8100074b <__sfp+0x35>
810007aa:	90                   	nop
810007ab:	e8 8d 01 00 00       	call   8100093d <__sfp_lock_release>
810007b0:	8b 45 08             	mov    0x8(%ebp),%eax
810007b3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007b9:	b8 00 00 00 00       	mov    $0x0,%eax
810007be:	e9 9e 00 00 00       	jmp    81000861 <__sfp+0x14b>
810007c3:	90                   	nop
810007c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007c7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810007cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810007d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810007e0:	e8 58 01 00 00       	call   8100093d <__sfp_lock_release>
810007e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810007ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810007f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007fb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000802:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000805:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100080c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100080f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000816:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000819:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000820:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000823:	83 c0 5c             	add    $0x5c,%eax
81000826:	83 ec 04             	sub    $0x4,%esp
81000829:	6a 08                	push   $0x8
8100082b:	6a 00                	push   $0x0
8100082d:	50                   	push   %eax
8100082e:	e8 1a 13 00 00       	call   81001b4d <memset>
81000833:	83 c4 10             	add    $0x10,%esp
81000836:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000839:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000840:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000843:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100084a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100084d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000854:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000857:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100085e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000861:	c9                   	leave  
81000862:	c3                   	ret    

81000863 <_cleanup_r>:
81000863:	55                   	push   %ebp
81000864:	89 e5                	mov    %esp,%ebp
81000866:	83 ec 18             	sub    $0x18,%esp
81000869:	c7 45 f4 22 2a 00 81 	movl   $0x81002a22,-0xc(%ebp)
81000870:	83 ec 08             	sub    $0x8,%esp
81000873:	ff 75 f4             	pushl  -0xc(%ebp)
81000876:	ff 75 08             	pushl  0x8(%ebp)
81000879:	e8 33 06 00 00       	call   81000eb1 <_fwalk_reent>
8100087e:	83 c4 10             	add    $0x10,%esp
81000881:	90                   	nop
81000882:	c9                   	leave  
81000883:	c3                   	ret    

81000884 <_cleanup>:
81000884:	55                   	push   %ebp
81000885:	89 e5                	mov    %esp,%ebp
81000887:	83 ec 08             	sub    $0x8,%esp
8100088a:	a1 78 37 00 81       	mov    0x81003778,%eax
8100088f:	83 ec 0c             	sub    $0xc,%esp
81000892:	50                   	push   %eax
81000893:	e8 cb ff ff ff       	call   81000863 <_cleanup_r>
81000898:	83 c4 10             	add    $0x10,%esp
8100089b:	90                   	nop
8100089c:	c9                   	leave  
8100089d:	c3                   	ret    

8100089e <__sinit>:
8100089e:	55                   	push   %ebp
8100089f:	89 e5                	mov    %esp,%ebp
810008a1:	83 ec 08             	sub    $0x8,%esp
810008a4:	e8 9a 00 00 00       	call   81000943 <__sinit_lock_acquire>
810008a9:	8b 45 08             	mov    0x8(%ebp),%eax
810008ac:	8b 40 38             	mov    0x38(%eax),%eax
810008af:	85 c0                	test   %eax,%eax
810008b1:	74 07                	je     810008ba <__sinit+0x1c>
810008b3:	e8 91 00 00 00       	call   81000949 <__sinit_lock_release>
810008b8:	eb 7b                	jmp    81000935 <__sinit+0x97>
810008ba:	8b 45 08             	mov    0x8(%ebp),%eax
810008bd:	c7 40 3c 63 08 00 81 	movl   $0x81000863,0x3c(%eax)
810008c4:	8b 45 08             	mov    0x8(%ebp),%eax
810008c7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810008ce:	00 00 00 
810008d1:	8b 45 08             	mov    0x8(%ebp),%eax
810008d4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810008db:	00 00 00 
810008de:	8b 45 08             	mov    0x8(%ebp),%eax
810008e1:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810008e7:	8b 45 08             	mov    0x8(%ebp),%eax
810008ea:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810008f0:	8b 45 08             	mov    0x8(%ebp),%eax
810008f3:	8b 40 04             	mov    0x4(%eax),%eax
810008f6:	83 ec 0c             	sub    $0xc,%esp
810008f9:	50                   	push   %eax
810008fa:	e8 57 fd ff ff       	call   81000656 <stdin_init>
810008ff:	83 c4 10             	add    $0x10,%esp
81000902:	8b 45 08             	mov    0x8(%ebp),%eax
81000905:	8b 40 08             	mov    0x8(%eax),%eax
81000908:	83 ec 0c             	sub    $0xc,%esp
8100090b:	50                   	push   %eax
8100090c:	e8 60 fd ff ff       	call   81000671 <stdout_init>
81000911:	83 c4 10             	add    $0x10,%esp
81000914:	8b 45 08             	mov    0x8(%ebp),%eax
81000917:	8b 40 0c             	mov    0xc(%eax),%eax
8100091a:	83 ec 0c             	sub    $0xc,%esp
8100091d:	50                   	push   %eax
8100091e:	e8 69 fd ff ff       	call   8100068c <stderr_init>
81000923:	83 c4 10             	add    $0x10,%esp
81000926:	8b 45 08             	mov    0x8(%ebp),%eax
81000929:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000930:	e8 14 00 00 00       	call   81000949 <__sinit_lock_release>
81000935:	c9                   	leave  
81000936:	c3                   	ret    

81000937 <__sfp_lock_acquire>:
81000937:	55                   	push   %ebp
81000938:	89 e5                	mov    %esp,%ebp
8100093a:	90                   	nop
8100093b:	5d                   	pop    %ebp
8100093c:	c3                   	ret    

8100093d <__sfp_lock_release>:
8100093d:	55                   	push   %ebp
8100093e:	89 e5                	mov    %esp,%ebp
81000940:	90                   	nop
81000941:	5d                   	pop    %ebp
81000942:	c3                   	ret    

81000943 <__sinit_lock_acquire>:
81000943:	55                   	push   %ebp
81000944:	89 e5                	mov    %esp,%ebp
81000946:	90                   	nop
81000947:	5d                   	pop    %ebp
81000948:	c3                   	ret    

81000949 <__sinit_lock_release>:
81000949:	55                   	push   %ebp
8100094a:	89 e5                	mov    %esp,%ebp
8100094c:	90                   	nop
8100094d:	5d                   	pop    %ebp
8100094e:	c3                   	ret    

8100094f <__fp_lock>:
8100094f:	55                   	push   %ebp
81000950:	89 e5                	mov    %esp,%ebp
81000952:	b8 00 00 00 00       	mov    $0x0,%eax
81000957:	5d                   	pop    %ebp
81000958:	c3                   	ret    

81000959 <__fp_unlock>:
81000959:	55                   	push   %ebp
8100095a:	89 e5                	mov    %esp,%ebp
8100095c:	b8 00 00 00 00       	mov    $0x0,%eax
81000961:	5d                   	pop    %ebp
81000962:	c3                   	ret    

81000963 <__fp_lock_all>:
81000963:	55                   	push   %ebp
81000964:	89 e5                	mov    %esp,%ebp
81000966:	83 ec 08             	sub    $0x8,%esp
81000969:	e8 c9 ff ff ff       	call   81000937 <__sfp_lock_acquire>
8100096e:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000973:	83 ec 08             	sub    $0x8,%esp
81000976:	68 4f 09 00 81       	push   $0x8100094f
8100097b:	50                   	push   %eax
8100097c:	e8 c8 04 00 00       	call   81000e49 <_fwalk>
81000981:	83 c4 10             	add    $0x10,%esp
81000984:	90                   	nop
81000985:	c9                   	leave  
81000986:	c3                   	ret    

81000987 <__fp_unlock_all>:
81000987:	55                   	push   %ebp
81000988:	89 e5                	mov    %esp,%ebp
8100098a:	83 ec 08             	sub    $0x8,%esp
8100098d:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000992:	83 ec 08             	sub    $0x8,%esp
81000995:	68 59 09 00 81       	push   $0x81000959
8100099a:	50                   	push   %eax
8100099b:	e8 a9 04 00 00       	call   81000e49 <_fwalk>
810009a0:	83 c4 10             	add    $0x10,%esp
810009a3:	e8 95 ff ff ff       	call   8100093d <__sfp_lock_release>
810009a8:	90                   	nop
810009a9:	c9                   	leave  
810009aa:	c3                   	ret    

810009ab <__sfvwrite_r>:
810009ab:	55                   	push   %ebp
810009ac:	89 e5                	mov    %esp,%ebp
810009ae:	57                   	push   %edi
810009af:	56                   	push   %esi
810009b0:	53                   	push   %ebx
810009b1:	83 ec 3c             	sub    $0x3c,%esp
810009b4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009b7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009be:	8b 45 10             	mov    0x10(%ebp),%eax
810009c1:	8b 78 08             	mov    0x8(%eax),%edi
810009c4:	85 ff                	test   %edi,%edi
810009c6:	75 0a                	jne    810009d2 <__sfvwrite_r+0x27>
810009c8:	b8 00 00 00 00       	mov    $0x0,%eax
810009cd:	e9 6f 04 00 00       	jmp    81000e41 <__sfvwrite_r+0x496>
810009d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009d6:	98                   	cwtl   
810009d7:	83 e0 08             	and    $0x8,%eax
810009da:	85 c0                	test   %eax,%eax
810009dc:	74 07                	je     810009e5 <__sfvwrite_r+0x3a>
810009de:	8b 43 10             	mov    0x10(%ebx),%eax
810009e1:	85 c0                	test   %eax,%eax
810009e3:	75 1d                	jne    81000a02 <__sfvwrite_r+0x57>
810009e5:	83 ec 08             	sub    $0x8,%esp
810009e8:	53                   	push   %ebx
810009e9:	ff 75 08             	pushl  0x8(%ebp)
810009ec:	e8 96 1e 00 00       	call   81002887 <__swsetup_r>
810009f1:	83 c4 10             	add    $0x10,%esp
810009f4:	85 c0                	test   %eax,%eax
810009f6:	74 0a                	je     81000a02 <__sfvwrite_r+0x57>
810009f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810009fd:	e9 3f 04 00 00       	jmp    81000e41 <__sfvwrite_r+0x496>
81000a02:	8b 45 10             	mov    0x10(%ebp),%eax
81000a05:	8b 00                	mov    (%eax),%eax
81000a07:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a0a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a13:	98                   	cwtl   
81000a14:	83 e0 02             	and    $0x2,%eax
81000a17:	85 c0                	test   %eax,%eax
81000a19:	74 68                	je     81000a83 <__sfvwrite_r+0xd8>
81000a1b:	eb 11                	jmp    81000a2e <__sfvwrite_r+0x83>
81000a1d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a20:	8b 08                	mov    (%eax),%ecx
81000a22:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a25:	8b 78 04             	mov    0x4(%eax),%edi
81000a28:	83 c0 08             	add    $0x8,%eax
81000a2b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a2e:	85 ff                	test   %edi,%edi
81000a30:	74 eb                	je     81000a1d <__sfvwrite_r+0x72>
81000a32:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a35:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a3a:	39 c7                	cmp    %eax,%edi
81000a3c:	0f 46 c7             	cmovbe %edi,%eax
81000a3f:	89 c2                	mov    %eax,%edx
81000a41:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a44:	52                   	push   %edx
81000a45:	ff 75 c4             	pushl  -0x3c(%ebp)
81000a48:	50                   	push   %eax
81000a49:	ff 75 08             	pushl  0x8(%ebp)
81000a4c:	ff d1                	call   *%ecx
81000a4e:	83 c4 10             	add    $0x10,%esp
81000a51:	89 c6                	mov    %eax,%esi
81000a53:	85 f6                	test   %esi,%esi
81000a55:	0f 8e cf 03 00 00    	jle    81000e2a <__sfvwrite_r+0x47f>
81000a5b:	89 f0                	mov    %esi,%eax
81000a5d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000a60:	89 f0                	mov    %esi,%eax
81000a62:	29 c7                	sub    %eax,%edi
81000a64:	8b 45 10             	mov    0x10(%ebp),%eax
81000a67:	8b 40 08             	mov    0x8(%eax),%eax
81000a6a:	89 f2                	mov    %esi,%edx
81000a6c:	29 d0                	sub    %edx,%eax
81000a6e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000a71:	89 41 08             	mov    %eax,0x8(%ecx)
81000a74:	8b 45 10             	mov    0x10(%ebp),%eax
81000a77:	8b 40 08             	mov    0x8(%eax),%eax
81000a7a:	85 c0                	test   %eax,%eax
81000a7c:	75 b0                	jne    81000a2e <__sfvwrite_r+0x83>
81000a7e:	e9 a0 03 00 00       	jmp    81000e23 <__sfvwrite_r+0x478>
81000a83:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a87:	98                   	cwtl   
81000a88:	83 e0 01             	and    $0x1,%eax
81000a8b:	85 c0                	test   %eax,%eax
81000a8d:	0f 85 44 02 00 00    	jne    81000cd7 <__sfvwrite_r+0x32c>
81000a93:	eb 11                	jmp    81000aa6 <__sfvwrite_r+0xfb>
81000a95:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a98:	8b 08                	mov    (%eax),%ecx
81000a9a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a9d:	8b 78 04             	mov    0x4(%eax),%edi
81000aa0:	83 c0 08             	add    $0x8,%eax
81000aa3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000aa6:	85 ff                	test   %edi,%edi
81000aa8:	74 eb                	je     81000a95 <__sfvwrite_r+0xea>
81000aaa:	8b 73 08             	mov    0x8(%ebx),%esi
81000aad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab1:	98                   	cwtl   
81000ab2:	25 00 02 00 00       	and    $0x200,%eax
81000ab7:	85 c0                	test   %eax,%eax
81000ab9:	0f 84 4f 01 00 00    	je     81000c0e <__sfvwrite_r+0x263>
81000abf:	89 f0                	mov    %esi,%eax
81000ac1:	39 c7                	cmp    %eax,%edi
81000ac3:	0f 82 12 01 00 00    	jb     81000bdb <__sfvwrite_r+0x230>
81000ac9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000acd:	98                   	cwtl   
81000ace:	25 80 04 00 00       	and    $0x480,%eax
81000ad3:	85 c0                	test   %eax,%eax
81000ad5:	0f 84 00 01 00 00    	je     81000bdb <__sfvwrite_r+0x230>
81000adb:	8b 03                	mov    (%ebx),%eax
81000add:	8b 53 10             	mov    0x10(%ebx),%edx
81000ae0:	29 d0                	sub    %edx,%eax
81000ae2:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ae5:	8b 53 14             	mov    0x14(%ebx),%edx
81000ae8:	89 d0                	mov    %edx,%eax
81000aea:	01 c0                	add    %eax,%eax
81000aec:	01 d0                	add    %edx,%eax
81000aee:	89 c2                	mov    %eax,%edx
81000af0:	c1 ea 1f             	shr    $0x1f,%edx
81000af3:	01 d0                	add    %edx,%eax
81000af5:	d1 f8                	sar    %eax
81000af7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000afa:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000afd:	01 f8                	add    %edi,%eax
81000aff:	8d 50 01             	lea    0x1(%eax),%edx
81000b02:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b05:	39 c2                	cmp    %eax,%edx
81000b07:	76 0b                	jbe    81000b14 <__sfvwrite_r+0x169>
81000b09:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b0c:	01 f8                	add    %edi,%eax
81000b0e:	83 c0 01             	add    $0x1,%eax
81000b11:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b18:	98                   	cwtl   
81000b19:	25 00 04 00 00       	and    $0x400,%eax
81000b1e:	85 c0                	test   %eax,%eax
81000b20:	74 4f                	je     81000b71 <__sfvwrite_r+0x1c6>
81000b22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b25:	83 ec 08             	sub    $0x8,%esp
81000b28:	50                   	push   %eax
81000b29:	ff 75 08             	pushl  0x8(%ebp)
81000b2c:	e8 7e 06 00 00       	call   810011af <_malloc_r>
81000b31:	83 c4 10             	add    $0x10,%esp
81000b34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b37:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b3b:	75 0e                	jne    81000b4b <__sfvwrite_r+0x1a0>
81000b3d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b40:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b46:	e9 e6 02 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000b4b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b4e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b51:	83 ec 04             	sub    $0x4,%esp
81000b54:	52                   	push   %edx
81000b55:	50                   	push   %eax
81000b56:	ff 75 dc             	pushl  -0x24(%ebp)
81000b59:	e8 1a 0f 00 00       	call   81001a78 <memcpy>
81000b5e:	83 c4 10             	add    $0x10,%esp
81000b61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b65:	66 25 7f fb          	and    $0xfb7f,%ax
81000b69:	0c 80                	or     $0x80,%al
81000b6b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b6f:	eb 49                	jmp    81000bba <__sfvwrite_r+0x20f>
81000b71:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b74:	8b 43 10             	mov    0x10(%ebx),%eax
81000b77:	83 ec 04             	sub    $0x4,%esp
81000b7a:	52                   	push   %edx
81000b7b:	50                   	push   %eax
81000b7c:	ff 75 08             	pushl  0x8(%ebp)
81000b7f:	e8 5d 10 00 00       	call   81001be1 <_realloc_r>
81000b84:	83 c4 10             	add    $0x10,%esp
81000b87:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b8e:	75 2a                	jne    81000bba <__sfvwrite_r+0x20f>
81000b90:	8b 43 10             	mov    0x10(%ebx),%eax
81000b93:	83 ec 08             	sub    $0x8,%esp
81000b96:	50                   	push   %eax
81000b97:	ff 75 08             	pushl  0x8(%ebp)
81000b9a:	e8 5e 22 00 00       	call   81002dfd <_free_r>
81000b9f:	83 c4 10             	add    $0x10,%esp
81000ba2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ba6:	24 7f                	and    $0x7f,%al
81000ba8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bac:	8b 45 08             	mov    0x8(%ebp),%eax
81000baf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bb5:	e9 77 02 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000bba:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bbd:	89 43 10             	mov    %eax,0x10(%ebx)
81000bc0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000bc3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bc6:	01 d0                	add    %edx,%eax
81000bc8:	89 03                	mov    %eax,(%ebx)
81000bca:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bcd:	89 43 14             	mov    %eax,0x14(%ebx)
81000bd0:	89 fe                	mov    %edi,%esi
81000bd2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bd5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000bd8:	89 43 08             	mov    %eax,0x8(%ebx)
81000bdb:	89 f0                	mov    %esi,%eax
81000bdd:	39 c7                	cmp    %eax,%edi
81000bdf:	73 02                	jae    81000be3 <__sfvwrite_r+0x238>
81000be1:	89 fe                	mov    %edi,%esi
81000be3:	89 f2                	mov    %esi,%edx
81000be5:	8b 03                	mov    (%ebx),%eax
81000be7:	83 ec 04             	sub    $0x4,%esp
81000bea:	52                   	push   %edx
81000beb:	ff 75 c4             	pushl  -0x3c(%ebp)
81000bee:	50                   	push   %eax
81000bef:	e8 cc 0e 00 00       	call   81001ac0 <memmove>
81000bf4:	83 c4 10             	add    $0x10,%esp
81000bf7:	8b 43 08             	mov    0x8(%ebx),%eax
81000bfa:	29 f0                	sub    %esi,%eax
81000bfc:	89 43 08             	mov    %eax,0x8(%ebx)
81000bff:	8b 03                	mov    (%ebx),%eax
81000c01:	89 f2                	mov    %esi,%edx
81000c03:	01 d0                	add    %edx,%eax
81000c05:	89 03                	mov    %eax,(%ebx)
81000c07:	89 fe                	mov    %edi,%esi
81000c09:	e9 9d 00 00 00       	jmp    81000cab <__sfvwrite_r+0x300>
81000c0e:	8b 13                	mov    (%ebx),%edx
81000c10:	8b 43 10             	mov    0x10(%ebx),%eax
81000c13:	39 c2                	cmp    %eax,%edx
81000c15:	77 07                	ja     81000c1e <__sfvwrite_r+0x273>
81000c17:	8b 43 14             	mov    0x14(%ebx),%eax
81000c1a:	39 c7                	cmp    %eax,%edi
81000c1c:	73 4c                	jae    81000c6a <__sfvwrite_r+0x2bf>
81000c1e:	89 f0                	mov    %esi,%eax
81000c20:	39 c7                	cmp    %eax,%edi
81000c22:	0f 46 c7             	cmovbe %edi,%eax
81000c25:	89 c6                	mov    %eax,%esi
81000c27:	89 f2                	mov    %esi,%edx
81000c29:	8b 03                	mov    (%ebx),%eax
81000c2b:	83 ec 04             	sub    $0x4,%esp
81000c2e:	52                   	push   %edx
81000c2f:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c32:	50                   	push   %eax
81000c33:	e8 88 0e 00 00       	call   81001ac0 <memmove>
81000c38:	83 c4 10             	add    $0x10,%esp
81000c3b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c3e:	29 f0                	sub    %esi,%eax
81000c40:	89 43 08             	mov    %eax,0x8(%ebx)
81000c43:	8b 03                	mov    (%ebx),%eax
81000c45:	89 f2                	mov    %esi,%edx
81000c47:	01 d0                	add    %edx,%eax
81000c49:	89 03                	mov    %eax,(%ebx)
81000c4b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c4e:	85 c0                	test   %eax,%eax
81000c50:	75 58                	jne    81000caa <__sfvwrite_r+0x2ff>
81000c52:	83 ec 08             	sub    $0x8,%esp
81000c55:	53                   	push   %ebx
81000c56:	ff 75 08             	pushl  0x8(%ebp)
81000c59:	e8 0e 21 00 00       	call   81002d6c <_fflush_r>
81000c5e:	83 c4 10             	add    $0x10,%esp
81000c61:	85 c0                	test   %eax,%eax
81000c63:	74 45                	je     81000caa <__sfvwrite_r+0x2ff>
81000c65:	e9 c7 01 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000c6a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000c70:	77 04                	ja     81000c76 <__sfvwrite_r+0x2cb>
81000c72:	89 f8                	mov    %edi,%eax
81000c74:	eb 05                	jmp    81000c7b <__sfvwrite_r+0x2d0>
81000c76:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000c7b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000c7e:	99                   	cltd   
81000c7f:	f7 f9                	idiv   %ecx
81000c81:	89 c2                	mov    %eax,%edx
81000c83:	8b 43 14             	mov    0x14(%ebx),%eax
81000c86:	89 d6                	mov    %edx,%esi
81000c88:	0f af f0             	imul   %eax,%esi
81000c8b:	8b 53 24             	mov    0x24(%ebx),%edx
81000c8e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000c91:	56                   	push   %esi
81000c92:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c95:	50                   	push   %eax
81000c96:	ff 75 08             	pushl  0x8(%ebp)
81000c99:	ff d2                	call   *%edx
81000c9b:	83 c4 10             	add    $0x10,%esp
81000c9e:	89 c6                	mov    %eax,%esi
81000ca0:	85 f6                	test   %esi,%esi
81000ca2:	0f 8e 85 01 00 00    	jle    81000e2d <__sfvwrite_r+0x482>
81000ca8:	eb 01                	jmp    81000cab <__sfvwrite_r+0x300>
81000caa:	90                   	nop
81000cab:	89 f0                	mov    %esi,%eax
81000cad:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cb0:	89 f0                	mov    %esi,%eax
81000cb2:	29 c7                	sub    %eax,%edi
81000cb4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb7:	8b 40 08             	mov    0x8(%eax),%eax
81000cba:	89 f2                	mov    %esi,%edx
81000cbc:	29 d0                	sub    %edx,%eax
81000cbe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000cc1:	89 41 08             	mov    %eax,0x8(%ecx)
81000cc4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cc7:	8b 40 08             	mov    0x8(%eax),%eax
81000cca:	85 c0                	test   %eax,%eax
81000ccc:	0f 85 d4 fd ff ff    	jne    81000aa6 <__sfvwrite_r+0xfb>
81000cd2:	e9 4c 01 00 00       	jmp    81000e23 <__sfvwrite_r+0x478>
81000cd7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cde:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000ce5:	eb 18                	jmp    81000cff <__sfvwrite_r+0x354>
81000ce7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cee:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000cf1:	8b 08                	mov    (%eax),%ecx
81000cf3:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000cf6:	8b 78 04             	mov    0x4(%eax),%edi
81000cf9:	83 c0 08             	add    $0x8,%eax
81000cfc:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000cff:	85 ff                	test   %edi,%edi
81000d01:	74 e4                	je     81000ce7 <__sfvwrite_r+0x33c>
81000d03:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d07:	75 32                	jne    81000d3b <__sfvwrite_r+0x390>
81000d09:	83 ec 04             	sub    $0x4,%esp
81000d0c:	57                   	push   %edi
81000d0d:	6a 0a                	push   $0xa
81000d0f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d12:	56                   	push   %esi
81000d13:	e8 c8 0c 00 00       	call   810019e0 <memchr>
81000d18:	83 c4 10             	add    $0x10,%esp
81000d1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d1e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d22:	74 0a                	je     81000d2e <__sfvwrite_r+0x383>
81000d24:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d27:	83 c0 01             	add    $0x1,%eax
81000d2a:	29 f0                	sub    %esi,%eax
81000d2c:	eb 03                	jmp    81000d31 <__sfvwrite_r+0x386>
81000d2e:	8d 47 01             	lea    0x1(%edi),%eax
81000d31:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d34:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d3b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d3e:	39 c7                	cmp    %eax,%edi
81000d40:	0f 46 c7             	cmovbe %edi,%eax
81000d43:	89 c1                	mov    %eax,%ecx
81000d45:	8b 53 08             	mov    0x8(%ebx),%edx
81000d48:	8b 43 14             	mov    0x14(%ebx),%eax
81000d4b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d4e:	8b 13                	mov    (%ebx),%edx
81000d50:	8b 43 10             	mov    0x10(%ebx),%eax
81000d53:	39 c2                	cmp    %eax,%edx
81000d55:	76 38                	jbe    81000d8f <__sfvwrite_r+0x3e4>
81000d57:	39 f1                	cmp    %esi,%ecx
81000d59:	7e 34                	jle    81000d8f <__sfvwrite_r+0x3e4>
81000d5b:	89 f2                	mov    %esi,%edx
81000d5d:	8b 03                	mov    (%ebx),%eax
81000d5f:	83 ec 04             	sub    $0x4,%esp
81000d62:	52                   	push   %edx
81000d63:	ff 75 c4             	pushl  -0x3c(%ebp)
81000d66:	50                   	push   %eax
81000d67:	e8 54 0d 00 00       	call   81001ac0 <memmove>
81000d6c:	83 c4 10             	add    $0x10,%esp
81000d6f:	8b 03                	mov    (%ebx),%eax
81000d71:	89 f2                	mov    %esi,%edx
81000d73:	01 d0                	add    %edx,%eax
81000d75:	89 03                	mov    %eax,(%ebx)
81000d77:	83 ec 08             	sub    $0x8,%esp
81000d7a:	53                   	push   %ebx
81000d7b:	ff 75 08             	pushl  0x8(%ebp)
81000d7e:	e8 e9 1f 00 00       	call   81002d6c <_fflush_r>
81000d83:	83 c4 10             	add    $0x10,%esp
81000d86:	85 c0                	test   %eax,%eax
81000d88:	74 4f                	je     81000dd9 <__sfvwrite_r+0x42e>
81000d8a:	e9 a2 00 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000d8f:	8b 73 14             	mov    0x14(%ebx),%esi
81000d92:	89 c8                	mov    %ecx,%eax
81000d94:	39 c6                	cmp    %eax,%esi
81000d96:	7f 1b                	jg     81000db3 <__sfvwrite_r+0x408>
81000d98:	8b 53 24             	mov    0x24(%ebx),%edx
81000d9b:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000d9e:	56                   	push   %esi
81000d9f:	ff 75 c4             	pushl  -0x3c(%ebp)
81000da2:	50                   	push   %eax
81000da3:	ff 75 08             	pushl  0x8(%ebp)
81000da6:	ff d2                	call   *%edx
81000da8:	83 c4 10             	add    $0x10,%esp
81000dab:	89 c6                	mov    %eax,%esi
81000dad:	85 f6                	test   %esi,%esi
81000daf:	7f 28                	jg     81000dd9 <__sfvwrite_r+0x42e>
81000db1:	eb 7e                	jmp    81000e31 <__sfvwrite_r+0x486>
81000db3:	89 ce                	mov    %ecx,%esi
81000db5:	89 f2                	mov    %esi,%edx
81000db7:	8b 03                	mov    (%ebx),%eax
81000db9:	83 ec 04             	sub    $0x4,%esp
81000dbc:	52                   	push   %edx
81000dbd:	ff 75 c4             	pushl  -0x3c(%ebp)
81000dc0:	50                   	push   %eax
81000dc1:	e8 fa 0c 00 00       	call   81001ac0 <memmove>
81000dc6:	83 c4 10             	add    $0x10,%esp
81000dc9:	8b 43 08             	mov    0x8(%ebx),%eax
81000dcc:	29 f0                	sub    %esi,%eax
81000dce:	89 43 08             	mov    %eax,0x8(%ebx)
81000dd1:	8b 03                	mov    (%ebx),%eax
81000dd3:	89 f2                	mov    %esi,%edx
81000dd5:	01 d0                	add    %edx,%eax
81000dd7:	89 03                	mov    %eax,(%ebx)
81000dd9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000ddc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000de0:	75 1a                	jne    81000dfc <__sfvwrite_r+0x451>
81000de2:	83 ec 08             	sub    $0x8,%esp
81000de5:	53                   	push   %ebx
81000de6:	ff 75 08             	pushl  0x8(%ebp)
81000de9:	e8 7e 1f 00 00       	call   81002d6c <_fflush_r>
81000dee:	83 c4 10             	add    $0x10,%esp
81000df1:	85 c0                	test   %eax,%eax
81000df3:	75 3b                	jne    81000e30 <__sfvwrite_r+0x485>
81000df5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000dfc:	89 f0                	mov    %esi,%eax
81000dfe:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e01:	89 f0                	mov    %esi,%eax
81000e03:	29 c7                	sub    %eax,%edi
81000e05:	8b 45 10             	mov    0x10(%ebp),%eax
81000e08:	8b 40 08             	mov    0x8(%eax),%eax
81000e0b:	89 f2                	mov    %esi,%edx
81000e0d:	29 d0                	sub    %edx,%eax
81000e0f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e12:	89 41 08             	mov    %eax,0x8(%ecx)
81000e15:	8b 45 10             	mov    0x10(%ebp),%eax
81000e18:	8b 40 08             	mov    0x8(%eax),%eax
81000e1b:	85 c0                	test   %eax,%eax
81000e1d:	0f 85 dc fe ff ff    	jne    81000cff <__sfvwrite_r+0x354>
81000e23:	b8 00 00 00 00       	mov    $0x0,%eax
81000e28:	eb 17                	jmp    81000e41 <__sfvwrite_r+0x496>
81000e2a:	90                   	nop
81000e2b:	eb 04                	jmp    81000e31 <__sfvwrite_r+0x486>
81000e2d:	90                   	nop
81000e2e:	eb 01                	jmp    81000e31 <__sfvwrite_r+0x486>
81000e30:	90                   	nop
81000e31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e35:	83 c8 40             	or     $0x40,%eax
81000e38:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e41:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e44:	5b                   	pop    %ebx
81000e45:	5e                   	pop    %esi
81000e46:	5f                   	pop    %edi
81000e47:	5d                   	pop    %ebp
81000e48:	c3                   	ret    

81000e49 <_fwalk>:
81000e49:	55                   	push   %ebp
81000e4a:	89 e5                	mov    %esp,%ebp
81000e4c:	57                   	push   %edi
81000e4d:	56                   	push   %esi
81000e4e:	53                   	push   %ebx
81000e4f:	83 ec 1c             	sub    $0x1c,%esp
81000e52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e59:	8b 45 08             	mov    0x8(%ebp),%eax
81000e5c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000e62:	eb 3e                	jmp    81000ea2 <_fwalk+0x59>
81000e64:	8b 5e 08             	mov    0x8(%esi),%ebx
81000e67:	8b 7e 04             	mov    0x4(%esi),%edi
81000e6a:	eb 2d                	jmp    81000e99 <_fwalk+0x50>
81000e6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e70:	66 85 c0             	test   %ax,%ax
81000e73:	74 21                	je     81000e96 <_fwalk+0x4d>
81000e75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e79:	66 83 f8 01          	cmp    $0x1,%ax
81000e7d:	74 17                	je     81000e96 <_fwalk+0x4d>
81000e7f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e83:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e87:	74 0d                	je     81000e96 <_fwalk+0x4d>
81000e89:	83 ec 0c             	sub    $0xc,%esp
81000e8c:	53                   	push   %ebx
81000e8d:	ff 55 0c             	call   *0xc(%ebp)
81000e90:	83 c4 10             	add    $0x10,%esp
81000e93:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e96:	83 c3 68             	add    $0x68,%ebx
81000e99:	83 ef 01             	sub    $0x1,%edi
81000e9c:	85 ff                	test   %edi,%edi
81000e9e:	79 cc                	jns    81000e6c <_fwalk+0x23>
81000ea0:	8b 36                	mov    (%esi),%esi
81000ea2:	85 f6                	test   %esi,%esi
81000ea4:	75 be                	jne    81000e64 <_fwalk+0x1b>
81000ea6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ea9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000eac:	5b                   	pop    %ebx
81000ead:	5e                   	pop    %esi
81000eae:	5f                   	pop    %edi
81000eaf:	5d                   	pop    %ebp
81000eb0:	c3                   	ret    

81000eb1 <_fwalk_reent>:
81000eb1:	55                   	push   %ebp
81000eb2:	89 e5                	mov    %esp,%ebp
81000eb4:	57                   	push   %edi
81000eb5:	56                   	push   %esi
81000eb6:	53                   	push   %ebx
81000eb7:	83 ec 1c             	sub    $0x1c,%esp
81000eba:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ec1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eca:	eb 41                	jmp    81000f0d <_fwalk_reent+0x5c>
81000ecc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ecf:	8b 7e 04             	mov    0x4(%esi),%edi
81000ed2:	eb 30                	jmp    81000f04 <_fwalk_reent+0x53>
81000ed4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ed8:	66 85 c0             	test   %ax,%ax
81000edb:	74 24                	je     81000f01 <_fwalk_reent+0x50>
81000edd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ee1:	66 83 f8 01          	cmp    $0x1,%ax
81000ee5:	74 1a                	je     81000f01 <_fwalk_reent+0x50>
81000ee7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000eeb:	66 83 f8 ff          	cmp    $0xffff,%ax
81000eef:	74 10                	je     81000f01 <_fwalk_reent+0x50>
81000ef1:	83 ec 08             	sub    $0x8,%esp
81000ef4:	53                   	push   %ebx
81000ef5:	ff 75 08             	pushl  0x8(%ebp)
81000ef8:	ff 55 0c             	call   *0xc(%ebp)
81000efb:	83 c4 10             	add    $0x10,%esp
81000efe:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f01:	83 c3 68             	add    $0x68,%ebx
81000f04:	83 ef 01             	sub    $0x1,%edi
81000f07:	85 ff                	test   %edi,%edi
81000f09:	79 c9                	jns    81000ed4 <_fwalk_reent+0x23>
81000f0b:	8b 36                	mov    (%esi),%esi
81000f0d:	85 f6                	test   %esi,%esi
81000f0f:	75 bb                	jne    81000ecc <_fwalk_reent+0x1b>
81000f11:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f14:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f17:	5b                   	pop    %ebx
81000f18:	5e                   	pop    %esi
81000f19:	5f                   	pop    %edi
81000f1a:	5d                   	pop    %ebp
81000f1b:	c3                   	ret    

81000f1c <malloc_extend_top>:
81000f1c:	55                   	push   %ebp
81000f1d:	89 e5                	mov    %esp,%ebp
81000f1f:	83 ec 38             	sub    $0x38,%esp
81000f22:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f29:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000f2e:	8b 40 08             	mov    0x8(%eax),%eax
81000f31:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f34:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f37:	8b 40 04             	mov    0x4(%eax),%eax
81000f3a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f3d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f40:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f43:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f46:	01 d0                	add    %edx,%eax
81000f48:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f4b:	8b 15 00 40 00 81    	mov    0x81004000,%edx
81000f51:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f54:	01 d0                	add    %edx,%eax
81000f56:	83 c0 10             	add    $0x10,%eax
81000f59:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f5c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000f63:	a1 cc 3f 00 81       	mov    0x81003fcc,%eax
81000f68:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f6b:	74 15                	je     81000f82 <malloc_extend_top+0x66>
81000f6d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000f70:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f73:	01 d0                	add    %edx,%eax
81000f75:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f78:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f7b:	f7 d8                	neg    %eax
81000f7d:	21 d0                	and    %edx,%eax
81000f7f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f82:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f85:	83 ec 08             	sub    $0x8,%esp
81000f88:	50                   	push   %eax
81000f89:	ff 75 08             	pushl  0x8(%ebp)
81000f8c:	e8 58 17 00 00       	call   810026e9 <_sbrk_r>
81000f91:	83 c4 10             	add    $0x10,%esp
81000f94:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f97:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000f9b:	0f 84 0b 02 00 00    	je     810011ac <malloc_extend_top+0x290>
81000fa1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fa7:	73 0e                	jae    81000fb7 <malloc_extend_top+0x9b>
81000fa9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000fae:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000fb1:	0f 85 f5 01 00 00    	jne    810011ac <malloc_extend_top+0x290>
81000fb7:	a1 20 40 00 81       	mov    0x81004020,%eax
81000fbc:	89 c2                	mov    %eax,%edx
81000fbe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc1:	01 d0                	add    %edx,%eax
81000fc3:	a3 20 40 00 81       	mov    %eax,0x81004020
81000fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fcb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fce:	75 30                	jne    81001000 <malloc_extend_top+0xe4>
81000fd0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fd3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fd6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000fd9:	21 d0                	and    %edx,%eax
81000fdb:	85 c0                	test   %eax,%eax
81000fdd:	75 21                	jne    81001000 <malloc_extend_top+0xe4>
81000fdf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000fe2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fe5:	01 d0                	add    %edx,%eax
81000fe7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000fea:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000fef:	8b 40 08             	mov    0x8(%eax),%eax
81000ff2:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000ff5:	83 ca 01             	or     $0x1,%edx
81000ff8:	89 50 04             	mov    %edx,0x4(%eax)
81000ffb:	e9 76 01 00 00       	jmp    81001176 <malloc_extend_top+0x25a>
81001000:	a1 cc 3f 00 81       	mov    0x81003fcc,%eax
81001005:	83 f8 ff             	cmp    $0xffffffff,%eax
81001008:	75 0a                	jne    81001014 <malloc_extend_top+0xf8>
8100100a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100d:	a3 cc 3f 00 81       	mov    %eax,0x81003fcc
81001012:	eb 13                	jmp    81001027 <malloc_extend_top+0x10b>
81001014:	8b 15 20 40 00 81    	mov    0x81004020,%edx
8100101a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001020:	01 d0                	add    %edx,%eax
81001022:	a3 20 40 00 81       	mov    %eax,0x81004020
81001027:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102a:	83 c0 08             	add    $0x8,%eax
8100102d:	83 e0 07             	and    $0x7,%eax
81001030:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001033:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001037:	74 13                	je     8100104c <malloc_extend_top+0x130>
81001039:	b8 08 00 00 00       	mov    $0x8,%eax
8100103e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001041:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001044:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001047:	01 45 f4             	add    %eax,-0xc(%ebp)
8100104a:	eb 07                	jmp    81001053 <malloc_extend_top+0x137>
8100104c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001053:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001056:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001059:	01 d0                	add    %edx,%eax
8100105b:	89 c2                	mov    %eax,%edx
8100105d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001060:	83 e8 01             	sub    $0x1,%eax
81001063:	21 c2                	and    %eax,%edx
81001065:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001068:	29 d0                	sub    %edx,%eax
8100106a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100106d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001070:	83 e8 01             	sub    $0x1,%eax
81001073:	21 45 f0             	and    %eax,-0x10(%ebp)
81001076:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001079:	83 ec 08             	sub    $0x8,%esp
8100107c:	50                   	push   %eax
8100107d:	ff 75 08             	pushl  0x8(%ebp)
81001080:	e8 64 16 00 00       	call   810026e9 <_sbrk_r>
81001085:	83 c4 10             	add    $0x10,%esp
81001088:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100108b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100108f:	75 28                	jne    810010b9 <malloc_extend_top+0x19d>
81001091:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001098:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100109f:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010a2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010a5:	01 d0                	add    %edx,%eax
810010a7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010aa:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010ae:	74 09                	je     810010b9 <malloc_extend_top+0x19d>
810010b0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010b3:	83 e8 08             	sub    $0x8,%eax
810010b6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010b9:	a1 20 40 00 81       	mov    0x81004020,%eax
810010be:	89 c2                	mov    %eax,%edx
810010c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010c3:	01 d0                	add    %edx,%eax
810010c5:	a3 20 40 00 81       	mov    %eax,0x81004020
810010ca:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
810010cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d2:	89 42 08             	mov    %eax,0x8(%edx)
810010d5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010d8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010db:	89 c2                	mov    %eax,%edx
810010dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e0:	01 d0                	add    %edx,%eax
810010e2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010e5:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810010ea:	8b 40 08             	mov    0x8(%eax),%eax
810010ed:	8b 55 d0             	mov    -0x30(%ebp),%edx
810010f0:	83 ca 01             	or     $0x1,%edx
810010f3:	89 50 04             	mov    %edx,0x4(%eax)
810010f6:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810010fb:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810010fe:	74 76                	je     81001176 <malloc_extend_top+0x25a>
81001100:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001104:	77 14                	ja     8100111a <malloc_extend_top+0x1fe>
81001106:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100110b:	8b 40 08             	mov    0x8(%eax),%eax
8100110e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001115:	e9 93 00 00 00       	jmp    810011ad <malloc_extend_top+0x291>
8100111a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100111d:	83 e8 0c             	sub    $0xc,%eax
81001120:	83 e0 f8             	and    $0xfffffff8,%eax
81001123:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001126:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001129:	8b 40 04             	mov    0x4(%eax),%eax
8100112c:	83 e0 01             	and    $0x1,%eax
8100112f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001132:	89 c2                	mov    %eax,%edx
81001134:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001137:	89 50 04             	mov    %edx,0x4(%eax)
8100113a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100113d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001140:	01 d0                	add    %edx,%eax
81001142:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001149:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100114c:	8d 50 04             	lea    0x4(%eax),%edx
8100114f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001152:	01 d0                	add    %edx,%eax
81001154:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100115b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100115f:	76 15                	jbe    81001176 <malloc_extend_top+0x25a>
81001161:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001164:	83 c0 08             	add    $0x8,%eax
81001167:	83 ec 08             	sub    $0x8,%esp
8100116a:	50                   	push   %eax
8100116b:	ff 75 08             	pushl  0x8(%ebp)
8100116e:	e8 8a 1c 00 00       	call   81002dfd <_free_r>
81001173:	83 c4 10             	add    $0x10,%esp
81001176:	a1 20 40 00 81       	mov    0x81004020,%eax
8100117b:	89 c2                	mov    %eax,%edx
8100117d:	a1 04 40 00 81       	mov    0x81004004,%eax
81001182:	39 c2                	cmp    %eax,%edx
81001184:	76 0a                	jbe    81001190 <malloc_extend_top+0x274>
81001186:	a1 20 40 00 81       	mov    0x81004020,%eax
8100118b:	a3 04 40 00 81       	mov    %eax,0x81004004
81001190:	a1 20 40 00 81       	mov    0x81004020,%eax
81001195:	89 c2                	mov    %eax,%edx
81001197:	a1 08 40 00 81       	mov    0x81004008,%eax
8100119c:	39 c2                	cmp    %eax,%edx
8100119e:	76 0d                	jbe    810011ad <malloc_extend_top+0x291>
810011a0:	a1 20 40 00 81       	mov    0x81004020,%eax
810011a5:	a3 08 40 00 81       	mov    %eax,0x81004008
810011aa:	eb 01                	jmp    810011ad <malloc_extend_top+0x291>
810011ac:	90                   	nop
810011ad:	c9                   	leave  
810011ae:	c3                   	ret    

810011af <_malloc_r>:
810011af:	55                   	push   %ebp
810011b0:	89 e5                	mov    %esp,%ebp
810011b2:	53                   	push   %ebx
810011b3:	83 ec 44             	sub    $0x44,%esp
810011b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011b9:	83 c0 0b             	add    $0xb,%eax
810011bc:	83 f8 16             	cmp    $0x16,%eax
810011bf:	76 0b                	jbe    810011cc <_malloc_r+0x1d>
810011c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810011c4:	83 c0 0b             	add    $0xb,%eax
810011c7:	83 e0 f8             	and    $0xfffffff8,%eax
810011ca:	eb 05                	jmp    810011d1 <_malloc_r+0x22>
810011cc:	b8 10 00 00 00       	mov    $0x10,%eax
810011d1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810011d4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011d7:	85 c0                	test   %eax,%eax
810011d9:	78 08                	js     810011e3 <_malloc_r+0x34>
810011db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011de:	3b 45 0c             	cmp    0xc(%ebp),%eax
810011e1:	73 13                	jae    810011f6 <_malloc_r+0x47>
810011e3:	8b 45 08             	mov    0x8(%ebp),%eax
810011e6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810011ec:	b8 00 00 00 00       	mov    $0x0,%eax
810011f1:	e9 d6 07 00 00       	jmp    810019cc <_malloc_r+0x81d>
810011f6:	83 ec 0c             	sub    $0xc,%esp
810011f9:	ff 75 08             	pushl  0x8(%ebp)
810011fc:	e8 d4 09 00 00       	call   81001bd5 <__malloc_lock>
81001201:	83 c4 10             	add    $0x10,%esp
81001204:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100120b:	0f 87 b0 00 00 00    	ja     810012c1 <_malloc_r+0x112>
81001211:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001214:	c1 e8 03             	shr    $0x3,%eax
81001217:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100121a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100121d:	83 c0 01             	add    $0x1,%eax
81001220:	01 c0                	add    %eax,%eax
81001222:	c1 e0 02             	shl    $0x2,%eax
81001225:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100122a:	83 e8 08             	sub    $0x8,%eax
8100122d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001230:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001233:	8b 40 0c             	mov    0xc(%eax),%eax
81001236:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001239:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100123c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100123f:	75 0d                	jne    8100124e <_malloc_r+0x9f>
81001241:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001245:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001248:	8b 40 0c             	mov    0xc(%eax),%eax
8100124b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100124e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001251:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001254:	74 62                	je     810012b8 <_malloc_r+0x109>
81001256:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001259:	8b 40 04             	mov    0x4(%eax),%eax
8100125c:	83 e0 fc             	and    $0xfffffffc,%eax
8100125f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001265:	8b 40 0c             	mov    0xc(%eax),%eax
81001268:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100126b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100126e:	8b 40 08             	mov    0x8(%eax),%eax
81001271:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001274:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001277:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100127a:	89 50 0c             	mov    %edx,0xc(%eax)
8100127d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001280:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001283:	89 50 08             	mov    %edx,0x8(%eax)
81001286:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001289:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100128c:	01 d0                	add    %edx,%eax
8100128e:	8b 50 04             	mov    0x4(%eax),%edx
81001291:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001294:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001297:	01 c8                	add    %ecx,%eax
81001299:	83 ca 01             	or     $0x1,%edx
8100129c:	89 50 04             	mov    %edx,0x4(%eax)
8100129f:	83 ec 0c             	sub    $0xc,%esp
810012a2:	ff 75 08             	pushl  0x8(%ebp)
810012a5:	e8 31 09 00 00       	call   81001bdb <__malloc_unlock>
810012aa:	83 c4 10             	add    $0x10,%esp
810012ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b0:	83 c0 08             	add    $0x8,%eax
810012b3:	e9 14 07 00 00       	jmp    810019cc <_malloc_r+0x81d>
810012b8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012bc:	e9 46 01 00 00       	jmp    81001407 <_malloc_r+0x258>
810012c1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012c4:	c1 e8 09             	shr    $0x9,%eax
810012c7:	85 c0                	test   %eax,%eax
810012c9:	75 08                	jne    810012d3 <_malloc_r+0x124>
810012cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012ce:	c1 e8 03             	shr    $0x3,%eax
810012d1:	eb 77                	jmp    8100134a <_malloc_r+0x19b>
810012d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012d6:	c1 e8 09             	shr    $0x9,%eax
810012d9:	83 f8 04             	cmp    $0x4,%eax
810012dc:	77 0b                	ja     810012e9 <_malloc_r+0x13a>
810012de:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012e1:	c1 e8 06             	shr    $0x6,%eax
810012e4:	83 c0 38             	add    $0x38,%eax
810012e7:	eb 61                	jmp    8100134a <_malloc_r+0x19b>
810012e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012ec:	c1 e8 09             	shr    $0x9,%eax
810012ef:	83 f8 14             	cmp    $0x14,%eax
810012f2:	77 0b                	ja     810012ff <_malloc_r+0x150>
810012f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f7:	c1 e8 09             	shr    $0x9,%eax
810012fa:	83 c0 5b             	add    $0x5b,%eax
810012fd:	eb 4b                	jmp    8100134a <_malloc_r+0x19b>
810012ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001302:	c1 e8 09             	shr    $0x9,%eax
81001305:	83 f8 54             	cmp    $0x54,%eax
81001308:	77 0b                	ja     81001315 <_malloc_r+0x166>
8100130a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130d:	c1 e8 0c             	shr    $0xc,%eax
81001310:	83 c0 6e             	add    $0x6e,%eax
81001313:	eb 35                	jmp    8100134a <_malloc_r+0x19b>
81001315:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001318:	c1 e8 09             	shr    $0x9,%eax
8100131b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001320:	77 0b                	ja     8100132d <_malloc_r+0x17e>
81001322:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001325:	c1 e8 0f             	shr    $0xf,%eax
81001328:	83 c0 77             	add    $0x77,%eax
8100132b:	eb 1d                	jmp    8100134a <_malloc_r+0x19b>
8100132d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001330:	c1 e8 09             	shr    $0x9,%eax
81001333:	3d 54 05 00 00       	cmp    $0x554,%eax
81001338:	77 0b                	ja     81001345 <_malloc_r+0x196>
8100133a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100133d:	c1 e8 12             	shr    $0x12,%eax
81001340:	83 c0 7c             	add    $0x7c,%eax
81001343:	eb 05                	jmp    8100134a <_malloc_r+0x19b>
81001345:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100134a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100134d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001350:	83 c0 01             	add    $0x1,%eax
81001353:	01 c0                	add    %eax,%eax
81001355:	c1 e0 02             	shl    $0x2,%eax
81001358:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100135d:	83 e8 08             	sub    $0x8,%eax
81001360:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001363:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001366:	8b 40 0c             	mov    0xc(%eax),%eax
81001369:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100136c:	e9 86 00 00 00       	jmp    810013f7 <_malloc_r+0x248>
81001371:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001374:	8b 40 04             	mov    0x4(%eax),%eax
81001377:	83 e0 fc             	and    $0xfffffffc,%eax
8100137a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100137d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001380:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001383:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001386:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100138a:	7e 06                	jle    81001392 <_malloc_r+0x1e3>
8100138c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001390:	eb 71                	jmp    81001403 <_malloc_r+0x254>
81001392:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001396:	78 56                	js     810013ee <_malloc_r+0x23f>
81001398:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100139b:	8b 40 0c             	mov    0xc(%eax),%eax
8100139e:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a4:	8b 40 08             	mov    0x8(%eax),%eax
810013a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013aa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013ad:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013b0:	89 50 0c             	mov    %edx,0xc(%eax)
810013b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013b6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013b9:	89 50 08             	mov    %edx,0x8(%eax)
810013bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013c2:	01 d0                	add    %edx,%eax
810013c4:	8b 50 04             	mov    0x4(%eax),%edx
810013c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013cd:	01 c8                	add    %ecx,%eax
810013cf:	83 ca 01             	or     $0x1,%edx
810013d2:	89 50 04             	mov    %edx,0x4(%eax)
810013d5:	83 ec 0c             	sub    $0xc,%esp
810013d8:	ff 75 08             	pushl  0x8(%ebp)
810013db:	e8 fb 07 00 00       	call   81001bdb <__malloc_unlock>
810013e0:	83 c4 10             	add    $0x10,%esp
810013e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e6:	83 c0 08             	add    $0x8,%eax
810013e9:	e9 de 05 00 00       	jmp    810019cc <_malloc_r+0x81d>
810013ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f1:	8b 40 0c             	mov    0xc(%eax),%eax
810013f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013fa:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810013fd:	0f 85 6e ff ff ff    	jne    81001371 <_malloc_r+0x1c2>
81001403:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001407:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
8100140c:	8b 40 08             	mov    0x8(%eax),%eax
8100140f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001412:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81001417:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100141a:	0f 84 9c 02 00 00    	je     810016bc <_malloc_r+0x50d>
81001420:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001423:	8b 40 04             	mov    0x4(%eax),%eax
81001426:	83 e0 fc             	and    $0xfffffffc,%eax
81001429:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100142c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100142f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001432:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001435:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001439:	7e 7a                	jle    810014b5 <_malloc_r+0x306>
8100143b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100143e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001441:	01 d0                	add    %edx,%eax
81001443:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001446:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001449:	83 c8 01             	or     $0x1,%eax
8100144c:	89 c2                	mov    %eax,%edx
8100144e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001451:	89 50 04             	mov    %edx,0x4(%eax)
81001454:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81001459:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100145c:	89 50 0c             	mov    %edx,0xc(%eax)
8100145f:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81001464:	8b 40 0c             	mov    0xc(%eax),%eax
81001467:	89 42 08             	mov    %eax,0x8(%edx)
8100146a:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
8100146f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001472:	89 50 0c             	mov    %edx,0xc(%eax)
81001475:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001478:	8b 50 0c             	mov    0xc(%eax),%edx
8100147b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100147e:	89 50 08             	mov    %edx,0x8(%eax)
81001481:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001484:	83 c8 01             	or     $0x1,%eax
81001487:	89 c2                	mov    %eax,%edx
81001489:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100148c:	89 50 04             	mov    %edx,0x4(%eax)
8100148f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001492:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001495:	01 c2                	add    %eax,%edx
81001497:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100149a:	89 02                	mov    %eax,(%edx)
8100149c:	83 ec 0c             	sub    $0xc,%esp
8100149f:	ff 75 08             	pushl  0x8(%ebp)
810014a2:	e8 34 07 00 00       	call   81001bdb <__malloc_unlock>
810014a7:	83 c4 10             	add    $0x10,%esp
810014aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ad:	83 c0 08             	add    $0x8,%eax
810014b0:	e9 17 05 00 00       	jmp    810019cc <_malloc_r+0x81d>
810014b5:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
810014ba:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810014bf:	89 50 0c             	mov    %edx,0xc(%eax)
810014c2:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810014c7:	8b 40 0c             	mov    0xc(%eax),%eax
810014ca:	89 42 08             	mov    %eax,0x8(%edx)
810014cd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014d1:	78 32                	js     81001505 <_malloc_r+0x356>
810014d3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d9:	01 d0                	add    %edx,%eax
810014db:	8b 50 04             	mov    0x4(%eax),%edx
810014de:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e4:	01 c8                	add    %ecx,%eax
810014e6:	83 ca 01             	or     $0x1,%edx
810014e9:	89 50 04             	mov    %edx,0x4(%eax)
810014ec:	83 ec 0c             	sub    $0xc,%esp
810014ef:	ff 75 08             	pushl  0x8(%ebp)
810014f2:	e8 e4 06 00 00       	call   81001bdb <__malloc_unlock>
810014f7:	83 c4 10             	add    $0x10,%esp
810014fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fd:	83 c0 08             	add    $0x8,%eax
81001500:	e9 c7 04 00 00       	jmp    810019cc <_malloc_r+0x81d>
81001505:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100150c:	77 7f                	ja     8100158d <_malloc_r+0x3de>
8100150e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001511:	c1 e8 03             	shr    $0x3,%eax
81001514:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001517:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100151c:	8b 58 04             	mov    0x4(%eax),%ebx
8100151f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001522:	8d 50 03             	lea    0x3(%eax),%edx
81001525:	85 c0                	test   %eax,%eax
81001527:	0f 48 c2             	cmovs  %edx,%eax
8100152a:	c1 f8 02             	sar    $0x2,%eax
8100152d:	ba 01 00 00 00       	mov    $0x1,%edx
81001532:	89 c1                	mov    %eax,%ecx
81001534:	d3 e2                	shl    %cl,%edx
81001536:	89 d0                	mov    %edx,%eax
81001538:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100153d:	09 d8                	or     %ebx,%eax
8100153f:	89 42 04             	mov    %eax,0x4(%edx)
81001542:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001545:	83 c0 01             	add    $0x1,%eax
81001548:	01 c0                	add    %eax,%eax
8100154a:	c1 e0 02             	shl    $0x2,%eax
8100154d:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001552:	83 e8 08             	sub    $0x8,%eax
81001555:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001558:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100155b:	8b 40 08             	mov    0x8(%eax),%eax
8100155e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001561:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001564:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001567:	89 50 0c             	mov    %edx,0xc(%eax)
8100156a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100156d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001570:	89 50 08             	mov    %edx,0x8(%eax)
81001573:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001576:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001579:	89 50 08             	mov    %edx,0x8(%eax)
8100157c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100157f:	8b 50 08             	mov    0x8(%eax),%edx
81001582:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001585:	89 50 0c             	mov    %edx,0xc(%eax)
81001588:	e9 2f 01 00 00       	jmp    810016bc <_malloc_r+0x50d>
8100158d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001590:	c1 e8 09             	shr    $0x9,%eax
81001593:	85 c0                	test   %eax,%eax
81001595:	75 08                	jne    8100159f <_malloc_r+0x3f0>
81001597:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100159a:	c1 e8 03             	shr    $0x3,%eax
8100159d:	eb 77                	jmp    81001616 <_malloc_r+0x467>
8100159f:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015a2:	c1 e8 09             	shr    $0x9,%eax
810015a5:	83 f8 04             	cmp    $0x4,%eax
810015a8:	77 0b                	ja     810015b5 <_malloc_r+0x406>
810015aa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ad:	c1 e8 06             	shr    $0x6,%eax
810015b0:	83 c0 38             	add    $0x38,%eax
810015b3:	eb 61                	jmp    81001616 <_malloc_r+0x467>
810015b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b8:	c1 e8 09             	shr    $0x9,%eax
810015bb:	83 f8 14             	cmp    $0x14,%eax
810015be:	77 0b                	ja     810015cb <_malloc_r+0x41c>
810015c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015c3:	c1 e8 09             	shr    $0x9,%eax
810015c6:	83 c0 5b             	add    $0x5b,%eax
810015c9:	eb 4b                	jmp    81001616 <_malloc_r+0x467>
810015cb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ce:	c1 e8 09             	shr    $0x9,%eax
810015d1:	83 f8 54             	cmp    $0x54,%eax
810015d4:	77 0b                	ja     810015e1 <_malloc_r+0x432>
810015d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d9:	c1 e8 0c             	shr    $0xc,%eax
810015dc:	83 c0 6e             	add    $0x6e,%eax
810015df:	eb 35                	jmp    81001616 <_malloc_r+0x467>
810015e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e4:	c1 e8 09             	shr    $0x9,%eax
810015e7:	3d 54 01 00 00       	cmp    $0x154,%eax
810015ec:	77 0b                	ja     810015f9 <_malloc_r+0x44a>
810015ee:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f1:	c1 e8 0f             	shr    $0xf,%eax
810015f4:	83 c0 77             	add    $0x77,%eax
810015f7:	eb 1d                	jmp    81001616 <_malloc_r+0x467>
810015f9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015fc:	c1 e8 09             	shr    $0x9,%eax
810015ff:	3d 54 05 00 00       	cmp    $0x554,%eax
81001604:	77 0b                	ja     81001611 <_malloc_r+0x462>
81001606:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001609:	c1 e8 12             	shr    $0x12,%eax
8100160c:	83 c0 7c             	add    $0x7c,%eax
8100160f:	eb 05                	jmp    81001616 <_malloc_r+0x467>
81001611:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001616:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001619:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100161c:	83 c0 01             	add    $0x1,%eax
8100161f:	01 c0                	add    %eax,%eax
81001621:	c1 e0 02             	shl    $0x2,%eax
81001624:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001629:	83 e8 08             	sub    $0x8,%eax
8100162c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100162f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001632:	8b 40 08             	mov    0x8(%eax),%eax
81001635:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001638:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100163b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100163e:	75 36                	jne    81001676 <_malloc_r+0x4c7>
81001640:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001645:	8b 58 04             	mov    0x4(%eax),%ebx
81001648:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100164b:	8d 50 03             	lea    0x3(%eax),%edx
8100164e:	85 c0                	test   %eax,%eax
81001650:	0f 48 c2             	cmovs  %edx,%eax
81001653:	c1 f8 02             	sar    $0x2,%eax
81001656:	ba 01 00 00 00       	mov    $0x1,%edx
8100165b:	89 c1                	mov    %eax,%ecx
8100165d:	d3 e2                	shl    %cl,%edx
8100165f:	89 d0                	mov    %edx,%eax
81001661:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001666:	09 d8                	or     %ebx,%eax
81001668:	89 42 04             	mov    %eax,0x4(%edx)
8100166b:	eb 28                	jmp    81001695 <_malloc_r+0x4e6>
8100166d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001670:	8b 40 08             	mov    0x8(%eax),%eax
81001673:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001676:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001679:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100167c:	74 0e                	je     8100168c <_malloc_r+0x4dd>
8100167e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001681:	8b 40 04             	mov    0x4(%eax),%eax
81001684:	83 e0 fc             	and    $0xfffffffc,%eax
81001687:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100168a:	72 e1                	jb     8100166d <_malloc_r+0x4be>
8100168c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100168f:	8b 40 0c             	mov    0xc(%eax),%eax
81001692:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001695:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001698:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100169b:	89 50 0c             	mov    %edx,0xc(%eax)
8100169e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016a4:	89 50 08             	mov    %edx,0x8(%eax)
810016a7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016aa:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016ad:	89 50 08             	mov    %edx,0x8(%eax)
810016b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016b3:	8b 50 08             	mov    0x8(%eax),%edx
810016b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b9:	89 50 0c             	mov    %edx,0xc(%eax)
810016bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016bf:	8d 50 03             	lea    0x3(%eax),%edx
810016c2:	85 c0                	test   %eax,%eax
810016c4:	0f 48 c2             	cmovs  %edx,%eax
810016c7:	c1 f8 02             	sar    $0x2,%eax
810016ca:	ba 01 00 00 00       	mov    $0x1,%edx
810016cf:	89 c1                	mov    %eax,%ecx
810016d1:	d3 e2                	shl    %cl,%edx
810016d3:	89 d0                	mov    %edx,%eax
810016d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016d8:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810016dd:	8b 40 04             	mov    0x4(%eax),%eax
810016e0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810016e3:	0f 87 13 02 00 00    	ja     810018fc <_malloc_r+0x74d>
810016e9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810016ee:	8b 40 04             	mov    0x4(%eax),%eax
810016f1:	23 45 e4             	and    -0x1c(%ebp),%eax
810016f4:	85 c0                	test   %eax,%eax
810016f6:	75 27                	jne    8100171f <_malloc_r+0x570>
810016f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016fb:	83 e0 fc             	and    $0xfffffffc,%eax
810016fe:	83 c0 04             	add    $0x4,%eax
81001701:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001704:	d1 65 e4             	shll   -0x1c(%ebp)
81001707:	eb 07                	jmp    81001710 <_malloc_r+0x561>
81001709:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100170d:	d1 65 e4             	shll   -0x1c(%ebp)
81001710:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001715:	8b 40 04             	mov    0x4(%eax),%eax
81001718:	23 45 e4             	and    -0x1c(%ebp),%eax
8100171b:	85 c0                	test   %eax,%eax
8100171d:	74 ea                	je     81001709 <_malloc_r+0x55a>
8100171f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001722:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001725:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001728:	83 c0 01             	add    $0x1,%eax
8100172b:	01 c0                	add    %eax,%eax
8100172d:	c1 e0 02             	shl    $0x2,%eax
81001730:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001735:	83 e8 08             	sub    $0x8,%eax
81001738:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100173b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100173e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001741:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001744:	8b 40 0c             	mov    0xc(%eax),%eax
81001747:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100174a:	e9 22 01 00 00       	jmp    81001871 <_malloc_r+0x6c2>
8100174f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001752:	8b 40 04             	mov    0x4(%eax),%eax
81001755:	83 e0 fc             	and    $0xfffffffc,%eax
81001758:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100175b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100175e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001761:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001764:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001768:	0f 8e 9e 00 00 00    	jle    8100180c <_malloc_r+0x65d>
8100176e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001771:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001774:	01 d0                	add    %edx,%eax
81001776:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001779:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100177c:	83 c8 01             	or     $0x1,%eax
8100177f:	89 c2                	mov    %eax,%edx
81001781:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001784:	89 50 04             	mov    %edx,0x4(%eax)
81001787:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100178a:	8b 40 0c             	mov    0xc(%eax),%eax
8100178d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001790:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001793:	8b 40 08             	mov    0x8(%eax),%eax
81001796:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001799:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100179c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100179f:	89 50 0c             	mov    %edx,0xc(%eax)
810017a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017a5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017a8:	89 50 08             	mov    %edx,0x8(%eax)
810017ab:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
810017b0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017b3:	89 50 0c             	mov    %edx,0xc(%eax)
810017b6:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810017bb:	8b 40 0c             	mov    0xc(%eax),%eax
810017be:	89 42 08             	mov    %eax,0x8(%edx)
810017c1:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810017c6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017c9:	89 50 0c             	mov    %edx,0xc(%eax)
810017cc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017cf:	8b 50 0c             	mov    0xc(%eax),%edx
810017d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017d5:	89 50 08             	mov    %edx,0x8(%eax)
810017d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017db:	83 c8 01             	or     $0x1,%eax
810017de:	89 c2                	mov    %eax,%edx
810017e0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017e3:	89 50 04             	mov    %edx,0x4(%eax)
810017e6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810017e9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017ec:	01 c2                	add    %eax,%edx
810017ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017f1:	89 02                	mov    %eax,(%edx)
810017f3:	83 ec 0c             	sub    $0xc,%esp
810017f6:	ff 75 08             	pushl  0x8(%ebp)
810017f9:	e8 dd 03 00 00       	call   81001bdb <__malloc_unlock>
810017fe:	83 c4 10             	add    $0x10,%esp
81001801:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001804:	83 c0 08             	add    $0x8,%eax
81001807:	e9 c0 01 00 00       	jmp    810019cc <_malloc_r+0x81d>
8100180c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001810:	78 56                	js     81001868 <_malloc_r+0x6b9>
81001812:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001815:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001818:	01 d0                	add    %edx,%eax
8100181a:	8b 50 04             	mov    0x4(%eax),%edx
8100181d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001820:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001823:	01 c8                	add    %ecx,%eax
81001825:	83 ca 01             	or     $0x1,%edx
81001828:	89 50 04             	mov    %edx,0x4(%eax)
8100182b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182e:	8b 40 0c             	mov    0xc(%eax),%eax
81001831:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001834:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001837:	8b 40 08             	mov    0x8(%eax),%eax
8100183a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100183d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001840:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001843:	89 50 0c             	mov    %edx,0xc(%eax)
81001846:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001849:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100184c:	89 50 08             	mov    %edx,0x8(%eax)
8100184f:	83 ec 0c             	sub    $0xc,%esp
81001852:	ff 75 08             	pushl  0x8(%ebp)
81001855:	e8 81 03 00 00       	call   81001bdb <__malloc_unlock>
8100185a:	83 c4 10             	add    $0x10,%esp
8100185d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001860:	83 c0 08             	add    $0x8,%eax
81001863:	e9 64 01 00 00       	jmp    810019cc <_malloc_r+0x81d>
81001868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186b:	8b 40 0c             	mov    0xc(%eax),%eax
8100186e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001871:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001874:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001877:	0f 85 d2 fe ff ff    	jne    8100174f <_malloc_r+0x5a0>
8100187d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001881:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001885:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001888:	83 e0 03             	and    $0x3,%eax
8100188b:	85 c0                	test   %eax,%eax
8100188d:	0f 85 ae fe ff ff    	jne    81001741 <_malloc_r+0x592>
81001893:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001896:	83 e0 03             	and    $0x3,%eax
81001899:	85 c0                	test   %eax,%eax
8100189b:	75 19                	jne    810018b6 <_malloc_r+0x707>
8100189d:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018a2:	8b 48 04             	mov    0x4(%eax),%ecx
810018a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018a8:	f7 d0                	not    %eax
810018aa:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
810018af:	21 c8                	and    %ecx,%eax
810018b1:	89 42 04             	mov    %eax,0x4(%edx)
810018b4:	eb 13                	jmp    810018c9 <_malloc_r+0x71a>
810018b6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018ba:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018be:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018c1:	8b 40 08             	mov    0x8(%eax),%eax
810018c4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810018c7:	74 ca                	je     81001893 <_malloc_r+0x6e4>
810018c9:	d1 65 e4             	shll   -0x1c(%ebp)
810018cc:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018d1:	8b 40 04             	mov    0x4(%eax),%eax
810018d4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810018d7:	77 23                	ja     810018fc <_malloc_r+0x74d>
810018d9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018dd:	74 1d                	je     810018fc <_malloc_r+0x74d>
810018df:	eb 07                	jmp    810018e8 <_malloc_r+0x739>
810018e1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810018e5:	d1 65 e4             	shll   -0x1c(%ebp)
810018e8:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018ed:	8b 40 04             	mov    0x4(%eax),%eax
810018f0:	23 45 e4             	and    -0x1c(%ebp),%eax
810018f3:	85 c0                	test   %eax,%eax
810018f5:	74 ea                	je     810018e1 <_malloc_r+0x732>
810018f7:	e9 23 fe ff ff       	jmp    8100171f <_malloc_r+0x570>
810018fc:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001901:	8b 40 08             	mov    0x8(%eax),%eax
81001904:	8b 40 04             	mov    0x4(%eax),%eax
81001907:	83 e0 fc             	and    $0xfffffffc,%eax
8100190a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100190d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001910:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001915:	8b 40 08             	mov    0x8(%eax),%eax
81001918:	8b 40 04             	mov    0x4(%eax),%eax
8100191b:	83 e0 fc             	and    $0xfffffffc,%eax
8100191e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001921:	77 06                	ja     81001929 <_malloc_r+0x77a>
81001923:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001927:	7f 53                	jg     8100197c <_malloc_r+0x7cd>
81001929:	83 ec 08             	sub    $0x8,%esp
8100192c:	ff 75 d0             	pushl  -0x30(%ebp)
8100192f:	ff 75 08             	pushl  0x8(%ebp)
81001932:	e8 e5 f5 ff ff       	call   81000f1c <malloc_extend_top>
81001937:	83 c4 10             	add    $0x10,%esp
8100193a:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100193f:	8b 40 08             	mov    0x8(%eax),%eax
81001942:	8b 40 04             	mov    0x4(%eax),%eax
81001945:	83 e0 fc             	and    $0xfffffffc,%eax
81001948:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100194b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100194e:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001953:	8b 40 08             	mov    0x8(%eax),%eax
81001956:	8b 40 04             	mov    0x4(%eax),%eax
81001959:	83 e0 fc             	and    $0xfffffffc,%eax
8100195c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100195f:	77 06                	ja     81001967 <_malloc_r+0x7b8>
81001961:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001965:	7f 15                	jg     8100197c <_malloc_r+0x7cd>
81001967:	83 ec 0c             	sub    $0xc,%esp
8100196a:	ff 75 08             	pushl  0x8(%ebp)
8100196d:	e8 69 02 00 00       	call   81001bdb <__malloc_unlock>
81001972:	83 c4 10             	add    $0x10,%esp
81001975:	b8 00 00 00 00       	mov    $0x0,%eax
8100197a:	eb 50                	jmp    810019cc <_malloc_r+0x81d>
8100197c:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001981:	8b 40 08             	mov    0x8(%eax),%eax
81001984:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001987:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100198a:	83 c8 01             	or     $0x1,%eax
8100198d:	89 c2                	mov    %eax,%edx
8100198f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001992:	89 50 04             	mov    %edx,0x4(%eax)
81001995:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100199a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100199d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019a0:	01 c8                	add    %ecx,%eax
810019a2:	89 42 08             	mov    %eax,0x8(%edx)
810019a5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019a8:	83 c8 01             	or     $0x1,%eax
810019ab:	89 c2                	mov    %eax,%edx
810019ad:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810019b2:	8b 40 08             	mov    0x8(%eax),%eax
810019b5:	89 50 04             	mov    %edx,0x4(%eax)
810019b8:	83 ec 0c             	sub    $0xc,%esp
810019bb:	ff 75 08             	pushl  0x8(%ebp)
810019be:	e8 18 02 00 00       	call   81001bdb <__malloc_unlock>
810019c3:	83 c4 10             	add    $0x10,%esp
810019c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019c9:	83 c0 08             	add    $0x8,%eax
810019cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810019cf:	c9                   	leave  
810019d0:	c3                   	ret    
810019d1:	66 90                	xchg   %ax,%ax
810019d3:	66 90                	xchg   %ax,%ax
810019d5:	66 90                	xchg   %ax,%ax
810019d7:	66 90                	xchg   %ax,%ax
810019d9:	66 90                	xchg   %ax,%ax
810019db:	66 90                	xchg   %ax,%ax
810019dd:	66 90                	xchg   %ax,%ax
810019df:	90                   	nop

810019e0 <memchr>:
810019e0:	55                   	push   %ebp
810019e1:	89 e5                	mov    %esp,%ebp
810019e3:	57                   	push   %edi
810019e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810019e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019eb:	8b 7d 08             	mov    0x8(%ebp),%edi
810019ee:	31 d2                	xor    %edx,%edx
810019f0:	85 c9                	test   %ecx,%ecx
810019f2:	74 79                	je     81001a6d <L20>
810019f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810019fa:	74 28                	je     81001a24 <L5>
810019fc:	3a 07                	cmp    (%edi),%al
810019fe:	74 6a                	je     81001a6a <L15>
81001a00:	47                   	inc    %edi
81001a01:	49                   	dec    %ecx
81001a02:	74 69                	je     81001a6d <L20>
81001a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a0a:	74 18                	je     81001a24 <L5>
81001a0c:	3a 07                	cmp    (%edi),%al
81001a0e:	74 5a                	je     81001a6a <L15>
81001a10:	47                   	inc    %edi
81001a11:	49                   	dec    %ecx
81001a12:	74 59                	je     81001a6d <L20>
81001a14:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a1a:	74 08                	je     81001a24 <L5>
81001a1c:	3a 07                	cmp    (%edi),%al
81001a1e:	74 4a                	je     81001a6a <L15>
81001a20:	47                   	inc    %edi
81001a21:	49                   	dec    %ecx
81001a22:	74 49                	je     81001a6d <L20>

81001a24 <L5>:
81001a24:	88 c4                	mov    %al,%ah
81001a26:	89 c2                	mov    %eax,%edx
81001a28:	c1 e2 10             	shl    $0x10,%edx
81001a2b:	09 d0                	or     %edx,%eax
81001a2d:	53                   	push   %ebx
81001a2e:	66 90                	xchg   %ax,%ax

81001a30 <L8>:
81001a30:	83 e9 04             	sub    $0x4,%ecx
81001a33:	72 1c                	jb     81001a51 <L9>
81001a35:	8b 17                	mov    (%edi),%edx
81001a37:	83 c7 04             	add    $0x4,%edi
81001a3a:	31 c2                	xor    %eax,%edx
81001a3c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a42:	f7 d2                	not    %edx
81001a44:	21 d3                	and    %edx,%ebx
81001a46:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a4c:	74 e2                	je     81001a30 <L8>
81001a4e:	83 ef 04             	sub    $0x4,%edi

81001a51 <L9>:
81001a51:	5b                   	pop    %ebx
81001a52:	31 d2                	xor    %edx,%edx
81001a54:	83 c1 04             	add    $0x4,%ecx
81001a57:	74 14                	je     81001a6d <L20>
81001a59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001a60 <L10>:
81001a60:	3a 07                	cmp    (%edi),%al
81001a62:	74 06                	je     81001a6a <L15>
81001a64:	47                   	inc    %edi
81001a65:	49                   	dec    %ecx
81001a66:	75 f8                	jne    81001a60 <L10>
81001a68:	31 ff                	xor    %edi,%edi

81001a6a <L15>:
81001a6a:	4a                   	dec    %edx
81001a6b:	21 fa                	and    %edi,%edx

81001a6d <L20>:
81001a6d:	89 d0                	mov    %edx,%eax
81001a6f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001a72:	5f                   	pop    %edi
81001a73:	c9                   	leave  
81001a74:	c3                   	ret    
81001a75:	66 90                	xchg   %ax,%ax
81001a77:	90                   	nop

81001a78 <memcpy>:
81001a78:	55                   	push   %ebp
81001a79:	89 e5                	mov    %esp,%ebp
81001a7b:	56                   	push   %esi
81001a7c:	57                   	push   %edi
81001a7d:	53                   	push   %ebx
81001a7e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a81:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a84:	8b 75 0c             	mov    0xc(%ebp),%esi
81001a87:	fc                   	cld    
81001a88:	83 f9 08             	cmp    $0x8,%ecx
81001a8b:	76 26                	jbe    81001ab3 <memcpy+0x3b>
81001a8d:	89 fa                	mov    %edi,%edx
81001a8f:	89 cb                	mov    %ecx,%ebx
81001a91:	83 e2 03             	and    $0x3,%edx
81001a94:	74 10                	je     81001aa6 <memcpy+0x2e>
81001a96:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a9b:	29 d1                	sub    %edx,%ecx
81001a9d:	83 e1 03             	and    $0x3,%ecx
81001aa0:	29 cb                	sub    %ecx,%ebx
81001aa2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001aa4:	89 d9                	mov    %ebx,%ecx
81001aa6:	c1 e9 02             	shr    $0x2,%ecx
81001aa9:	8d 76 00             	lea    0x0(%esi),%esi
81001aac:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001aae:	89 d9                	mov    %ebx,%ecx
81001ab0:	83 e1 03             	and    $0x3,%ecx
81001ab3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ab5:	8b 45 08             	mov    0x8(%ebp),%eax
81001ab8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001abb:	5b                   	pop    %ebx
81001abc:	5f                   	pop    %edi
81001abd:	5e                   	pop    %esi
81001abe:	c9                   	leave  
81001abf:	c3                   	ret    

81001ac0 <memmove>:
81001ac0:	55                   	push   %ebp
81001ac1:	89 e5                	mov    %esp,%ebp
81001ac3:	56                   	push   %esi
81001ac4:	57                   	push   %edi
81001ac5:	53                   	push   %ebx
81001ac6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ac9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001acc:	8b 75 0c             	mov    0xc(%ebp),%esi
81001acf:	fc                   	cld    
81001ad0:	39 fe                	cmp    %edi,%esi
81001ad2:	73 43                	jae    81001b17 <memmove+0x57>
81001ad4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001ad8:	39 df                	cmp    %ebx,%edi
81001ada:	77 3b                	ja     81001b17 <memmove+0x57>
81001adc:	01 ce                	add    %ecx,%esi
81001ade:	01 cf                	add    %ecx,%edi
81001ae0:	fd                   	std    
81001ae1:	83 f9 08             	cmp    $0x8,%ecx
81001ae4:	76 2b                	jbe    81001b11 <memmove+0x51>
81001ae6:	89 fa                	mov    %edi,%edx
81001ae8:	89 cb                	mov    %ecx,%ebx
81001aea:	83 e2 03             	and    $0x3,%edx
81001aed:	74 0c                	je     81001afb <memmove+0x3b>
81001aef:	89 d1                	mov    %edx,%ecx
81001af1:	4e                   	dec    %esi
81001af2:	4f                   	dec    %edi
81001af3:	29 cb                	sub    %ecx,%ebx
81001af5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001af7:	89 d9                	mov    %ebx,%ecx
81001af9:	46                   	inc    %esi
81001afa:	47                   	inc    %edi
81001afb:	c1 e9 02             	shr    $0x2,%ecx
81001afe:	83 ee 04             	sub    $0x4,%esi
81001b01:	83 ef 04             	sub    $0x4,%edi
81001b04:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b06:	83 c6 04             	add    $0x4,%esi
81001b09:	83 c7 04             	add    $0x4,%edi
81001b0c:	89 d9                	mov    %ebx,%ecx
81001b0e:	83 e1 03             	and    $0x3,%ecx
81001b11:	4e                   	dec    %esi
81001b12:	4f                   	dec    %edi
81001b13:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b15:	eb 2a                	jmp    81001b41 <memmove+0x81>
81001b17:	83 f9 08             	cmp    $0x8,%ecx
81001b1a:	76 23                	jbe    81001b3f <memmove+0x7f>
81001b1c:	89 fa                	mov    %edi,%edx
81001b1e:	89 cb                	mov    %ecx,%ebx
81001b20:	83 e2 03             	and    $0x3,%edx
81001b23:	74 10                	je     81001b35 <memmove+0x75>
81001b25:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b2a:	29 d1                	sub    %edx,%ecx
81001b2c:	83 e1 03             	and    $0x3,%ecx
81001b2f:	29 cb                	sub    %ecx,%ebx
81001b31:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b33:	89 d9                	mov    %ebx,%ecx
81001b35:	c1 e9 02             	shr    $0x2,%ecx
81001b38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b3a:	89 d9                	mov    %ebx,%ecx
81001b3c:	83 e1 03             	and    $0x3,%ecx
81001b3f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b41:	8b 45 08             	mov    0x8(%ebp),%eax
81001b44:	fc                   	cld    
81001b45:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b48:	5b                   	pop    %ebx
81001b49:	5f                   	pop    %edi
81001b4a:	5e                   	pop    %esi
81001b4b:	c9                   	leave  
81001b4c:	c3                   	ret    

81001b4d <memset>:
81001b4d:	55                   	push   %ebp
81001b4e:	89 e5                	mov    %esp,%ebp
81001b50:	57                   	push   %edi
81001b51:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b54:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b58:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b5b:	fc                   	cld    
81001b5c:	83 f9 10             	cmp    $0x10,%ecx
81001b5f:	76 69                	jbe    81001bca <memset+0x7d>
81001b61:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b67:	74 4c                	je     81001bb5 <memset+0x68>
81001b69:	88 07                	mov    %al,(%edi)
81001b6b:	47                   	inc    %edi
81001b6c:	49                   	dec    %ecx
81001b6d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b73:	74 40                	je     81001bb5 <memset+0x68>
81001b75:	88 07                	mov    %al,(%edi)
81001b77:	47                   	inc    %edi
81001b78:	49                   	dec    %ecx
81001b79:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b7f:	74 34                	je     81001bb5 <memset+0x68>
81001b81:	88 07                	mov    %al,(%edi)
81001b83:	47                   	inc    %edi
81001b84:	49                   	dec    %ecx
81001b85:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b8b:	74 28                	je     81001bb5 <memset+0x68>
81001b8d:	88 07                	mov    %al,(%edi)
81001b8f:	47                   	inc    %edi
81001b90:	49                   	dec    %ecx
81001b91:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b97:	74 1c                	je     81001bb5 <memset+0x68>
81001b99:	88 07                	mov    %al,(%edi)
81001b9b:	47                   	inc    %edi
81001b9c:	49                   	dec    %ecx
81001b9d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ba3:	74 10                	je     81001bb5 <memset+0x68>
81001ba5:	88 07                	mov    %al,(%edi)
81001ba7:	47                   	inc    %edi
81001ba8:	49                   	dec    %ecx
81001ba9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001baf:	74 04                	je     81001bb5 <memset+0x68>
81001bb1:	88 07                	mov    %al,(%edi)
81001bb3:	47                   	inc    %edi
81001bb4:	49                   	dec    %ecx
81001bb5:	88 c4                	mov    %al,%ah
81001bb7:	89 c2                	mov    %eax,%edx
81001bb9:	c1 e2 10             	shl    $0x10,%edx
81001bbc:	09 d0                	or     %edx,%eax
81001bbe:	89 ca                	mov    %ecx,%edx
81001bc0:	c1 e9 02             	shr    $0x2,%ecx
81001bc3:	83 e2 03             	and    $0x3,%edx
81001bc6:	f3 ab                	rep stos %eax,%es:(%edi)
81001bc8:	89 d1                	mov    %edx,%ecx
81001bca:	f3 aa                	rep stos %al,%es:(%edi)
81001bcc:	8b 45 08             	mov    0x8(%ebp),%eax
81001bcf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001bd2:	5f                   	pop    %edi
81001bd3:	c9                   	leave  
81001bd4:	c3                   	ret    

81001bd5 <__malloc_lock>:
81001bd5:	55                   	push   %ebp
81001bd6:	89 e5                	mov    %esp,%ebp
81001bd8:	90                   	nop
81001bd9:	5d                   	pop    %ebp
81001bda:	c3                   	ret    

81001bdb <__malloc_unlock>:
81001bdb:	55                   	push   %ebp
81001bdc:	89 e5                	mov    %esp,%ebp
81001bde:	90                   	nop
81001bdf:	5d                   	pop    %ebp
81001be0:	c3                   	ret    

81001be1 <_realloc_r>:
81001be1:	55                   	push   %ebp
81001be2:	89 e5                	mov    %esp,%ebp
81001be4:	83 ec 78             	sub    $0x78,%esp
81001be7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001beb:	75 16                	jne    81001c03 <_realloc_r+0x22>
81001bed:	83 ec 08             	sub    $0x8,%esp
81001bf0:	ff 75 10             	pushl  0x10(%ebp)
81001bf3:	ff 75 08             	pushl  0x8(%ebp)
81001bf6:	e8 b4 f5 ff ff       	call   810011af <_malloc_r>
81001bfb:	83 c4 10             	add    $0x10,%esp
81001bfe:	e9 b6 08 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001c03:	83 ec 0c             	sub    $0xc,%esp
81001c06:	ff 75 08             	pushl  0x8(%ebp)
81001c09:	e8 c7 ff ff ff       	call   81001bd5 <__malloc_lock>
81001c0e:	83 c4 10             	add    $0x10,%esp
81001c11:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c14:	83 e8 08             	sub    $0x8,%eax
81001c17:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001c1a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c1d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c20:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c23:	8b 40 04             	mov    0x4(%eax),%eax
81001c26:	83 e0 fc             	and    $0xfffffffc,%eax
81001c29:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001c2c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c2f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c32:	8b 45 10             	mov    0x10(%ebp),%eax
81001c35:	83 c0 0b             	add    $0xb,%eax
81001c38:	83 f8 16             	cmp    $0x16,%eax
81001c3b:	76 0b                	jbe    81001c48 <_realloc_r+0x67>
81001c3d:	8b 45 10             	mov    0x10(%ebp),%eax
81001c40:	83 c0 0b             	add    $0xb,%eax
81001c43:	83 e0 f8             	and    $0xfffffff8,%eax
81001c46:	eb 05                	jmp    81001c4d <_realloc_r+0x6c>
81001c48:	b8 10 00 00 00       	mov    $0x10,%eax
81001c4d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001c50:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c53:	85 c0                	test   %eax,%eax
81001c55:	78 08                	js     81001c5f <_realloc_r+0x7e>
81001c57:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c5a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001c5d:	73 13                	jae    81001c72 <_realloc_r+0x91>
81001c5f:	8b 45 08             	mov    0x8(%ebp),%eax
81001c62:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001c68:	b8 00 00 00 00       	mov    $0x0,%eax
81001c6d:	e9 47 08 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001c72:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001c75:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c78:	39 c2                	cmp    %eax,%edx
81001c7a:	0f 8d 8b 07 00 00    	jge    8100240b <_realloc_r+0x82a>
81001c80:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001c83:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c86:	01 d0                	add    %edx,%eax
81001c88:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c8b:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001c90:	8b 40 08             	mov    0x8(%eax),%eax
81001c93:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c96:	74 1e                	je     81001cb6 <_realloc_r+0xd5>
81001c98:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c9b:	8b 40 04             	mov    0x4(%eax),%eax
81001c9e:	83 e0 fe             	and    $0xfffffffe,%eax
81001ca1:	89 c2                	mov    %eax,%edx
81001ca3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ca6:	01 d0                	add    %edx,%eax
81001ca8:	8b 40 04             	mov    0x4(%eax),%eax
81001cab:	83 e0 01             	and    $0x1,%eax
81001cae:	85 c0                	test   %eax,%eax
81001cb0:	0f 85 ca 00 00 00    	jne    81001d80 <_realloc_r+0x19f>
81001cb6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001cb9:	8b 40 04             	mov    0x4(%eax),%eax
81001cbc:	83 e0 fc             	and    $0xfffffffc,%eax
81001cbf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cc2:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001cc7:	8b 40 08             	mov    0x8(%eax),%eax
81001cca:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001ccd:	75 71                	jne    81001d40 <_realloc_r+0x15f>
81001ccf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cd5:	01 d0                	add    %edx,%eax
81001cd7:	89 c2                	mov    %eax,%edx
81001cd9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cdc:	83 c0 10             	add    $0x10,%eax
81001cdf:	39 c2                	cmp    %eax,%edx
81001ce1:	0f 8c a9 00 00 00    	jl     81001d90 <_realloc_r+0x1af>
81001ce7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cea:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ced:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001cf2:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001cf5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cf8:	01 c8                	add    %ecx,%eax
81001cfa:	89 42 08             	mov    %eax,0x8(%edx)
81001cfd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d00:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001d03:	89 c2                	mov    %eax,%edx
81001d05:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001d0a:	8b 40 08             	mov    0x8(%eax),%eax
81001d0d:	83 ca 01             	or     $0x1,%edx
81001d10:	89 50 04             	mov    %edx,0x4(%eax)
81001d13:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d16:	8b 40 04             	mov    0x4(%eax),%eax
81001d19:	83 e0 01             	and    $0x1,%eax
81001d1c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001d1f:	89 c2                	mov    %eax,%edx
81001d21:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d24:	89 50 04             	mov    %edx,0x4(%eax)
81001d27:	83 ec 0c             	sub    $0xc,%esp
81001d2a:	ff 75 08             	pushl  0x8(%ebp)
81001d2d:	e8 a9 fe ff ff       	call   81001bdb <__malloc_unlock>
81001d32:	83 c4 10             	add    $0x10,%esp
81001d35:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d38:	83 c0 08             	add    $0x8,%eax
81001d3b:	e9 79 07 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001d40:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d43:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d46:	01 d0                	add    %edx,%eax
81001d48:	89 c2                	mov    %eax,%edx
81001d4a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d4d:	39 c2                	cmp    %eax,%edx
81001d4f:	7c 3f                	jl     81001d90 <_realloc_r+0x1af>
81001d51:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d54:	8b 40 0c             	mov    0xc(%eax),%eax
81001d57:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d5d:	8b 40 08             	mov    0x8(%eax),%eax
81001d60:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001d63:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001d66:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001d69:	89 50 0c             	mov    %edx,0xc(%eax)
81001d6c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001d6f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001d72:	89 50 08             	mov    %edx,0x8(%eax)
81001d75:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d78:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d7b:	e9 8c 06 00 00       	jmp    8100240c <_realloc_r+0x82b>
81001d80:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001d87:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001d8e:	eb 01                	jmp    81001d91 <_realloc_r+0x1b0>
81001d90:	90                   	nop
81001d91:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d94:	8b 40 04             	mov    0x4(%eax),%eax
81001d97:	83 e0 01             	and    $0x1,%eax
81001d9a:	85 c0                	test   %eax,%eax
81001d9c:	0f 85 d6 04 00 00    	jne    81002278 <_realloc_r+0x697>
81001da2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001da5:	8b 00                	mov    (%eax),%eax
81001da7:	f7 d8                	neg    %eax
81001da9:	89 c2                	mov    %eax,%edx
81001dab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001dae:	01 d0                	add    %edx,%eax
81001db0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001db3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001db6:	8b 40 04             	mov    0x4(%eax),%eax
81001db9:	83 e0 fc             	and    $0xfffffffc,%eax
81001dbc:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001dbf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001dc3:	0f 84 4a 03 00 00    	je     81002113 <_realloc_r+0x532>
81001dc9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001dce:	8b 40 08             	mov    0x8(%eax),%eax
81001dd1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dd4:	0f 85 b0 01 00 00    	jne    81001f8a <_realloc_r+0x3a9>
81001dda:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ddd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001de0:	01 c2                	add    %eax,%edx
81001de2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001de5:	01 d0                	add    %edx,%eax
81001de7:	89 c2                	mov    %eax,%edx
81001de9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001dec:	83 c0 10             	add    $0x10,%eax
81001def:	39 c2                	cmp    %eax,%edx
81001df1:	0f 8c 1c 03 00 00    	jl     81002113 <_realloc_r+0x532>
81001df7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001dfa:	8b 40 0c             	mov    0xc(%eax),%eax
81001dfd:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001e00:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e03:	8b 40 08             	mov    0x8(%eax),%eax
81001e06:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001e09:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001e0c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001e0f:	89 50 0c             	mov    %edx,0xc(%eax)
81001e12:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001e15:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001e18:	89 50 08             	mov    %edx,0x8(%eax)
81001e1b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e21:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001e24:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e27:	01 d0                	add    %edx,%eax
81001e29:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e2f:	83 c0 08             	add    $0x8,%eax
81001e32:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001e35:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001e38:	83 e8 04             	sub    $0x4,%eax
81001e3b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001e3e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001e42:	0f 87 de 00 00 00    	ja     81001f26 <_realloc_r+0x345>
81001e48:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e4e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001e51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e54:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001e58:	0f 86 90 00 00 00    	jbe    81001eee <_realloc_r+0x30d>
81001e5e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e61:	8d 42 04             	lea    0x4(%edx),%eax
81001e64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e67:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e6a:	8d 48 04             	lea    0x4(%eax),%ecx
81001e6d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e70:	8b 12                	mov    (%edx),%edx
81001e72:	89 10                	mov    %edx,(%eax)
81001e74:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e77:	8d 42 04             	lea    0x4(%edx),%eax
81001e7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e7d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e80:	8d 48 04             	lea    0x4(%eax),%ecx
81001e83:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e86:	8b 12                	mov    (%edx),%edx
81001e88:	89 10                	mov    %edx,(%eax)
81001e8a:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001e8e:	76 5e                	jbe    81001eee <_realloc_r+0x30d>
81001e90:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e93:	8d 42 04             	lea    0x4(%edx),%eax
81001e96:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e99:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e9c:	8d 48 04             	lea    0x4(%eax),%ecx
81001e9f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ea2:	8b 12                	mov    (%edx),%edx
81001ea4:	89 10                	mov    %edx,(%eax)
81001ea6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ea9:	8d 42 04             	lea    0x4(%edx),%eax
81001eac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001eaf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eb2:	8d 48 04             	lea    0x4(%eax),%ecx
81001eb5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eb8:	8b 12                	mov    (%edx),%edx
81001eba:	89 10                	mov    %edx,(%eax)
81001ebc:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001ec0:	76 2c                	jbe    81001eee <_realloc_r+0x30d>
81001ec2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ec5:	8d 42 04             	lea    0x4(%edx),%eax
81001ec8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ecb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ece:	8d 48 04             	lea    0x4(%eax),%ecx
81001ed1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ed4:	8b 12                	mov    (%edx),%edx
81001ed6:	89 10                	mov    %edx,(%eax)
81001ed8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001edb:	8d 42 04             	lea    0x4(%edx),%eax
81001ede:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ee1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ee4:	8d 48 04             	lea    0x4(%eax),%ecx
81001ee7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eea:	8b 12                	mov    (%edx),%edx
81001eec:	89 10                	mov    %edx,(%eax)
81001eee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ef1:	8d 42 04             	lea    0x4(%edx),%eax
81001ef4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001efa:	8d 48 04             	lea    0x4(%eax),%ecx
81001efd:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f00:	8b 12                	mov    (%edx),%edx
81001f02:	89 10                	mov    %edx,(%eax)
81001f04:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f07:	8d 42 04             	lea    0x4(%edx),%eax
81001f0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f0d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f10:	8d 48 04             	lea    0x4(%eax),%ecx
81001f13:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f16:	8b 12                	mov    (%edx),%edx
81001f18:	89 10                	mov    %edx,(%eax)
81001f1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f1d:	8b 10                	mov    (%eax),%edx
81001f1f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f22:	89 10                	mov    %edx,(%eax)
81001f24:	eb 14                	jmp    81001f3a <_realloc_r+0x359>
81001f26:	83 ec 04             	sub    $0x4,%esp
81001f29:	ff 75 a0             	pushl  -0x60(%ebp)
81001f2c:	ff 75 0c             	pushl  0xc(%ebp)
81001f2f:	ff 75 a8             	pushl  -0x58(%ebp)
81001f32:	e8 89 fb ff ff       	call   81001ac0 <memmove>
81001f37:	83 c4 10             	add    $0x10,%esp
81001f3a:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001f3f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001f42:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f45:	01 c8                	add    %ecx,%eax
81001f47:	89 42 08             	mov    %eax,0x8(%edx)
81001f4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f4d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001f50:	89 c2                	mov    %eax,%edx
81001f52:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001f57:	8b 40 08             	mov    0x8(%eax),%eax
81001f5a:	83 ca 01             	or     $0x1,%edx
81001f5d:	89 50 04             	mov    %edx,0x4(%eax)
81001f60:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f63:	8b 40 04             	mov    0x4(%eax),%eax
81001f66:	83 e0 01             	and    $0x1,%eax
81001f69:	0b 45 bc             	or     -0x44(%ebp),%eax
81001f6c:	89 c2                	mov    %eax,%edx
81001f6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f71:	89 50 04             	mov    %edx,0x4(%eax)
81001f74:	83 ec 0c             	sub    $0xc,%esp
81001f77:	ff 75 08             	pushl  0x8(%ebp)
81001f7a:	e8 5c fc ff ff       	call   81001bdb <__malloc_unlock>
81001f7f:	83 c4 10             	add    $0x10,%esp
81001f82:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f85:	e9 2f 05 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001f8a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f8d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f90:	01 c2                	add    %eax,%edx
81001f92:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f95:	01 d0                	add    %edx,%eax
81001f97:	89 c2                	mov    %eax,%edx
81001f99:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f9c:	39 c2                	cmp    %eax,%edx
81001f9e:	0f 8c 6f 01 00 00    	jl     81002113 <_realloc_r+0x532>
81001fa4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fa7:	8b 40 0c             	mov    0xc(%eax),%eax
81001faa:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fad:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fb0:	8b 40 08             	mov    0x8(%eax),%eax
81001fb3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fb6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fb9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fbc:	89 50 0c             	mov    %edx,0xc(%eax)
81001fbf:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fc2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fc5:	89 50 08             	mov    %edx,0x8(%eax)
81001fc8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fcb:	8b 40 0c             	mov    0xc(%eax),%eax
81001fce:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fd4:	8b 40 08             	mov    0x8(%eax),%eax
81001fd7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fda:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fdd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fe0:	89 50 0c             	mov    %edx,0xc(%eax)
81001fe3:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fe6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fe9:	89 50 08             	mov    %edx,0x8(%eax)
81001fec:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fef:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ff2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ff5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001ff8:	01 d0                	add    %edx,%eax
81001ffa:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ffd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002000:	83 c0 08             	add    $0x8,%eax
81002003:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002006:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002009:	83 e8 04             	sub    $0x4,%eax
8100200c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
8100200f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002013:	0f 87 e1 00 00 00    	ja     810020fa <_realloc_r+0x519>
81002019:	8b 45 0c             	mov    0xc(%ebp),%eax
8100201c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100201f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002022:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002025:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002029:	0f 86 90 00 00 00    	jbe    810020bf <_realloc_r+0x4de>
8100202f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002032:	8d 42 04             	lea    0x4(%edx),%eax
81002035:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002038:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100203b:	8d 48 04             	lea    0x4(%eax),%ecx
8100203e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002041:	8b 12                	mov    (%edx),%edx
81002043:	89 10                	mov    %edx,(%eax)
81002045:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002048:	8d 42 04             	lea    0x4(%edx),%eax
8100204b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100204e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002051:	8d 48 04             	lea    0x4(%eax),%ecx
81002054:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002057:	8b 12                	mov    (%edx),%edx
81002059:	89 10                	mov    %edx,(%eax)
8100205b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100205f:	76 5e                	jbe    810020bf <_realloc_r+0x4de>
81002061:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002064:	8d 42 04             	lea    0x4(%edx),%eax
81002067:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100206a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100206d:	8d 48 04             	lea    0x4(%eax),%ecx
81002070:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002073:	8b 12                	mov    (%edx),%edx
81002075:	89 10                	mov    %edx,(%eax)
81002077:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100207a:	8d 42 04             	lea    0x4(%edx),%eax
8100207d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002080:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002083:	8d 48 04             	lea    0x4(%eax),%ecx
81002086:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002089:	8b 12                	mov    (%edx),%edx
8100208b:	89 10                	mov    %edx,(%eax)
8100208d:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002091:	76 2c                	jbe    810020bf <_realloc_r+0x4de>
81002093:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002096:	8d 42 04             	lea    0x4(%edx),%eax
81002099:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100209c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100209f:	8d 48 04             	lea    0x4(%eax),%ecx
810020a2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020a5:	8b 12                	mov    (%edx),%edx
810020a7:	89 10                	mov    %edx,(%eax)
810020a9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020ac:	8d 42 04             	lea    0x4(%edx),%eax
810020af:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020b5:	8d 48 04             	lea    0x4(%eax),%ecx
810020b8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020bb:	8b 12                	mov    (%edx),%edx
810020bd:	89 10                	mov    %edx,(%eax)
810020bf:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020c2:	8d 42 04             	lea    0x4(%edx),%eax
810020c5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020c8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020cb:	8d 48 04             	lea    0x4(%eax),%ecx
810020ce:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020d1:	8b 12                	mov    (%edx),%edx
810020d3:	89 10                	mov    %edx,(%eax)
810020d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020d8:	8d 42 04             	lea    0x4(%edx),%eax
810020db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020e1:	8d 48 04             	lea    0x4(%eax),%ecx
810020e4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020e7:	8b 12                	mov    (%edx),%edx
810020e9:	89 10                	mov    %edx,(%eax)
810020eb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810020ee:	8b 10                	mov    (%eax),%edx
810020f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020f3:	89 10                	mov    %edx,(%eax)
810020f5:	e9 12 03 00 00       	jmp    8100240c <_realloc_r+0x82b>
810020fa:	83 ec 04             	sub    $0x4,%esp
810020fd:	ff 75 a4             	pushl  -0x5c(%ebp)
81002100:	ff 75 0c             	pushl  0xc(%ebp)
81002103:	ff 75 a8             	pushl  -0x58(%ebp)
81002106:	e8 b5 f9 ff ff       	call   81001ac0 <memmove>
8100210b:	83 c4 10             	add    $0x10,%esp
8100210e:	e9 f9 02 00 00       	jmp    8100240c <_realloc_r+0x82b>
81002113:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002117:	0f 84 5b 01 00 00    	je     81002278 <_realloc_r+0x697>
8100211d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002120:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002123:	01 d0                	add    %edx,%eax
81002125:	89 c2                	mov    %eax,%edx
81002127:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100212a:	39 c2                	cmp    %eax,%edx
8100212c:	0f 8c 46 01 00 00    	jl     81002278 <_realloc_r+0x697>
81002132:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002135:	8b 40 0c             	mov    0xc(%eax),%eax
81002138:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100213b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100213e:	8b 40 08             	mov    0x8(%eax),%eax
81002141:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002144:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002147:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100214a:	89 50 0c             	mov    %edx,0xc(%eax)
8100214d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002150:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002153:	89 50 08             	mov    %edx,0x8(%eax)
81002156:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002159:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100215c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100215f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002162:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002165:	83 c0 08             	add    $0x8,%eax
81002168:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100216b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100216e:	83 e8 04             	sub    $0x4,%eax
81002171:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002174:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002178:	0f 87 e1 00 00 00    	ja     8100225f <_realloc_r+0x67e>
8100217e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002181:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002184:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002187:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100218a:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
8100218e:	0f 86 90 00 00 00    	jbe    81002224 <_realloc_r+0x643>
81002194:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002197:	8d 42 04             	lea    0x4(%edx),%eax
8100219a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100219d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021a0:	8d 48 04             	lea    0x4(%eax),%ecx
810021a3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021a6:	8b 12                	mov    (%edx),%edx
810021a8:	89 10                	mov    %edx,(%eax)
810021aa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021ad:	8d 42 04             	lea    0x4(%edx),%eax
810021b0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021b6:	8d 48 04             	lea    0x4(%eax),%ecx
810021b9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021bc:	8b 12                	mov    (%edx),%edx
810021be:	89 10                	mov    %edx,(%eax)
810021c0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810021c4:	76 5e                	jbe    81002224 <_realloc_r+0x643>
810021c6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021c9:	8d 42 04             	lea    0x4(%edx),%eax
810021cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021cf:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021d2:	8d 48 04             	lea    0x4(%eax),%ecx
810021d5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021d8:	8b 12                	mov    (%edx),%edx
810021da:	89 10                	mov    %edx,(%eax)
810021dc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021df:	8d 42 04             	lea    0x4(%edx),%eax
810021e2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021e5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021e8:	8d 48 04             	lea    0x4(%eax),%ecx
810021eb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021ee:	8b 12                	mov    (%edx),%edx
810021f0:	89 10                	mov    %edx,(%eax)
810021f2:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810021f6:	76 2c                	jbe    81002224 <_realloc_r+0x643>
810021f8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021fb:	8d 42 04             	lea    0x4(%edx),%eax
810021fe:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002201:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002204:	8d 48 04             	lea    0x4(%eax),%ecx
81002207:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100220a:	8b 12                	mov    (%edx),%edx
8100220c:	89 10                	mov    %edx,(%eax)
8100220e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002211:	8d 42 04             	lea    0x4(%edx),%eax
81002214:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002217:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100221a:	8d 48 04             	lea    0x4(%eax),%ecx
8100221d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002220:	8b 12                	mov    (%edx),%edx
81002222:	89 10                	mov    %edx,(%eax)
81002224:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002227:	8d 42 04             	lea    0x4(%edx),%eax
8100222a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100222d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002230:	8d 48 04             	lea    0x4(%eax),%ecx
81002233:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002236:	8b 12                	mov    (%edx),%edx
81002238:	89 10                	mov    %edx,(%eax)
8100223a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100223d:	8d 42 04             	lea    0x4(%edx),%eax
81002240:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002243:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002246:	8d 48 04             	lea    0x4(%eax),%ecx
81002249:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100224c:	8b 12                	mov    (%edx),%edx
8100224e:	89 10                	mov    %edx,(%eax)
81002250:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002253:	8b 10                	mov    (%eax),%edx
81002255:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002258:	89 10                	mov    %edx,(%eax)
8100225a:	e9 ad 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
8100225f:	83 ec 04             	sub    $0x4,%esp
81002262:	ff 75 9c             	pushl  -0x64(%ebp)
81002265:	ff 75 0c             	pushl  0xc(%ebp)
81002268:	ff 75 a8             	pushl  -0x58(%ebp)
8100226b:	e8 50 f8 ff ff       	call   81001ac0 <memmove>
81002270:	83 c4 10             	add    $0x10,%esp
81002273:	e9 94 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
81002278:	83 ec 08             	sub    $0x8,%esp
8100227b:	ff 75 10             	pushl  0x10(%ebp)
8100227e:	ff 75 08             	pushl  0x8(%ebp)
81002281:	e8 29 ef ff ff       	call   810011af <_malloc_r>
81002286:	83 c4 10             	add    $0x10,%esp
81002289:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100228c:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002290:	75 18                	jne    810022aa <_realloc_r+0x6c9>
81002292:	83 ec 0c             	sub    $0xc,%esp
81002295:	ff 75 08             	pushl  0x8(%ebp)
81002298:	e8 3e f9 ff ff       	call   81001bdb <__malloc_unlock>
8100229d:	83 c4 10             	add    $0x10,%esp
810022a0:	b8 00 00 00 00       	mov    $0x0,%eax
810022a5:	e9 0f 02 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
810022aa:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022ad:	83 e8 08             	sub    $0x8,%eax
810022b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022b6:	8b 40 04             	mov    0x4(%eax),%eax
810022b9:	83 e0 fe             	and    $0xfffffffe,%eax
810022bc:	89 c2                	mov    %eax,%edx
810022be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022c1:	01 d0                	add    %edx,%eax
810022c3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810022c6:	75 17                	jne    810022df <_realloc_r+0x6fe>
810022c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022cb:	8b 40 04             	mov    0x4(%eax),%eax
810022ce:	83 e0 fc             	and    $0xfffffffc,%eax
810022d1:	01 45 f0             	add    %eax,-0x10(%ebp)
810022d4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022da:	e9 2d 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
810022df:	8b 45 c0             	mov    -0x40(%ebp),%eax
810022e2:	83 e8 04             	sub    $0x4,%eax
810022e5:	89 45 98             	mov    %eax,-0x68(%ebp)
810022e8:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810022ec:	0f 87 de 00 00 00    	ja     810023d0 <_realloc_r+0x7ef>
810022f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022f8:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022fb:	89 45 c8             	mov    %eax,-0x38(%ebp)
810022fe:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002302:	0f 86 90 00 00 00    	jbe    81002398 <_realloc_r+0x7b7>
81002308:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100230b:	8d 42 04             	lea    0x4(%edx),%eax
8100230e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002311:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002314:	8d 48 04             	lea    0x4(%eax),%ecx
81002317:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100231a:	8b 12                	mov    (%edx),%edx
8100231c:	89 10                	mov    %edx,(%eax)
8100231e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002321:	8d 42 04             	lea    0x4(%edx),%eax
81002324:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002327:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100232a:	8d 48 04             	lea    0x4(%eax),%ecx
8100232d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002330:	8b 12                	mov    (%edx),%edx
81002332:	89 10                	mov    %edx,(%eax)
81002334:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002338:	76 5e                	jbe    81002398 <_realloc_r+0x7b7>
8100233a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100233d:	8d 42 04             	lea    0x4(%edx),%eax
81002340:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002343:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002346:	8d 48 04             	lea    0x4(%eax),%ecx
81002349:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100234c:	8b 12                	mov    (%edx),%edx
8100234e:	89 10                	mov    %edx,(%eax)
81002350:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002353:	8d 42 04             	lea    0x4(%edx),%eax
81002356:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002359:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100235c:	8d 48 04             	lea    0x4(%eax),%ecx
8100235f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002362:	8b 12                	mov    (%edx),%edx
81002364:	89 10                	mov    %edx,(%eax)
81002366:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100236a:	76 2c                	jbe    81002398 <_realloc_r+0x7b7>
8100236c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100236f:	8d 42 04             	lea    0x4(%edx),%eax
81002372:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002375:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002378:	8d 48 04             	lea    0x4(%eax),%ecx
8100237b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100237e:	8b 12                	mov    (%edx),%edx
81002380:	89 10                	mov    %edx,(%eax)
81002382:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002385:	8d 42 04             	lea    0x4(%edx),%eax
81002388:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100238b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100238e:	8d 48 04             	lea    0x4(%eax),%ecx
81002391:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002394:	8b 12                	mov    (%edx),%edx
81002396:	89 10                	mov    %edx,(%eax)
81002398:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100239b:	8d 42 04             	lea    0x4(%edx),%eax
8100239e:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023a1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023a4:	8d 48 04             	lea    0x4(%eax),%ecx
810023a7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023aa:	8b 12                	mov    (%edx),%edx
810023ac:	89 10                	mov    %edx,(%eax)
810023ae:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023b1:	8d 42 04             	lea    0x4(%edx),%eax
810023b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023b7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023ba:	8d 48 04             	lea    0x4(%eax),%ecx
810023bd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023c0:	8b 12                	mov    (%edx),%edx
810023c2:	89 10                	mov    %edx,(%eax)
810023c4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810023c7:	8b 10                	mov    (%eax),%edx
810023c9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023cc:	89 10                	mov    %edx,(%eax)
810023ce:	eb 14                	jmp    810023e4 <_realloc_r+0x803>
810023d0:	83 ec 04             	sub    $0x4,%esp
810023d3:	ff 75 98             	pushl  -0x68(%ebp)
810023d6:	ff 75 0c             	pushl  0xc(%ebp)
810023d9:	ff 75 a8             	pushl  -0x58(%ebp)
810023dc:	e8 df f6 ff ff       	call   81001ac0 <memmove>
810023e1:	83 c4 10             	add    $0x10,%esp
810023e4:	83 ec 08             	sub    $0x8,%esp
810023e7:	ff 75 0c             	pushl  0xc(%ebp)
810023ea:	ff 75 08             	pushl  0x8(%ebp)
810023ed:	e8 0b 0a 00 00       	call   81002dfd <_free_r>
810023f2:	83 c4 10             	add    $0x10,%esp
810023f5:	83 ec 0c             	sub    $0xc,%esp
810023f8:	ff 75 08             	pushl  0x8(%ebp)
810023fb:	e8 db f7 ff ff       	call   81001bdb <__malloc_unlock>
81002400:	83 c4 10             	add    $0x10,%esp
81002403:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002406:	e9 ae 00 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
8100240b:	90                   	nop
8100240c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100240f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002412:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002415:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002419:	76 5d                	jbe    81002478 <_realloc_r+0x897>
8100241b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100241e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002421:	01 d0                	add    %edx,%eax
81002423:	89 45 90             	mov    %eax,-0x70(%ebp)
81002426:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002429:	8b 40 04             	mov    0x4(%eax),%eax
8100242c:	83 e0 01             	and    $0x1,%eax
8100242f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002432:	89 c2                	mov    %eax,%edx
81002434:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002437:	89 50 04             	mov    %edx,0x4(%eax)
8100243a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100243d:	83 c8 01             	or     $0x1,%eax
81002440:	89 c2                	mov    %eax,%edx
81002442:	8b 45 90             	mov    -0x70(%ebp),%eax
81002445:	89 50 04             	mov    %edx,0x4(%eax)
81002448:	8b 55 90             	mov    -0x70(%ebp),%edx
8100244b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100244e:	01 d0                	add    %edx,%eax
81002450:	8b 50 04             	mov    0x4(%eax),%edx
81002453:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002456:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002459:	01 c8                	add    %ecx,%eax
8100245b:	83 ca 01             	or     $0x1,%edx
8100245e:	89 50 04             	mov    %edx,0x4(%eax)
81002461:	8b 45 90             	mov    -0x70(%ebp),%eax
81002464:	83 c0 08             	add    $0x8,%eax
81002467:	83 ec 08             	sub    $0x8,%esp
8100246a:	50                   	push   %eax
8100246b:	ff 75 08             	pushl  0x8(%ebp)
8100246e:	e8 8a 09 00 00       	call   81002dfd <_free_r>
81002473:	83 c4 10             	add    $0x10,%esp
81002476:	eb 2d                	jmp    810024a5 <_realloc_r+0x8c4>
81002478:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100247b:	8b 40 04             	mov    0x4(%eax),%eax
8100247e:	83 e0 01             	and    $0x1,%eax
81002481:	0b 45 f0             	or     -0x10(%ebp),%eax
81002484:	89 c2                	mov    %eax,%edx
81002486:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002489:	89 50 04             	mov    %edx,0x4(%eax)
8100248c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100248f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002492:	01 d0                	add    %edx,%eax
81002494:	8b 50 04             	mov    0x4(%eax),%edx
81002497:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100249a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100249d:	01 c8                	add    %ecx,%eax
8100249f:	83 ca 01             	or     $0x1,%edx
810024a2:	89 50 04             	mov    %edx,0x4(%eax)
810024a5:	83 ec 0c             	sub    $0xc,%esp
810024a8:	ff 75 08             	pushl  0x8(%ebp)
810024ab:	e8 2b f7 ff ff       	call   81001bdb <__malloc_unlock>
810024b0:	83 c4 10             	add    $0x10,%esp
810024b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024b6:	83 c0 08             	add    $0x8,%eax
810024b9:	c9                   	leave  
810024ba:	c3                   	ret    

810024bb <lflush>:
810024bb:	55                   	push   %ebp
810024bc:	89 e5                	mov    %esp,%ebp
810024be:	83 ec 08             	sub    $0x8,%esp
810024c1:	8b 45 08             	mov    0x8(%ebp),%eax
810024c4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810024c8:	98                   	cwtl   
810024c9:	83 e0 09             	and    $0x9,%eax
810024cc:	83 f8 09             	cmp    $0x9,%eax
810024cf:	75 10                	jne    810024e1 <lflush+0x26>
810024d1:	83 ec 0c             	sub    $0xc,%esp
810024d4:	ff 75 08             	pushl  0x8(%ebp)
810024d7:	e8 e8 08 00 00       	call   81002dc4 <fflush>
810024dc:	83 c4 10             	add    $0x10,%esp
810024df:	eb 05                	jmp    810024e6 <lflush+0x2b>
810024e1:	b8 00 00 00 00       	mov    $0x0,%eax
810024e6:	c9                   	leave  
810024e7:	c3                   	ret    

810024e8 <__srefill_r>:
810024e8:	55                   	push   %ebp
810024e9:	89 e5                	mov    %esp,%ebp
810024eb:	56                   	push   %esi
810024ec:	53                   	push   %ebx
810024ed:	83 ec 10             	sub    $0x10,%esp
810024f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810024f3:	8b 45 08             	mov    0x8(%ebp),%eax
810024f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024fd:	74 18                	je     81002517 <__srefill_r+0x2f>
810024ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002502:	8b 40 38             	mov    0x38(%eax),%eax
81002505:	85 c0                	test   %eax,%eax
81002507:	75 0e                	jne    81002517 <__srefill_r+0x2f>
81002509:	83 ec 0c             	sub    $0xc,%esp
8100250c:	ff 75 f4             	pushl  -0xc(%ebp)
8100250f:	e8 8a e3 ff ff       	call   8100089e <__sinit>
81002514:	83 c4 10             	add    $0x10,%esp
81002517:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100251b:	98                   	cwtl   
8100251c:	25 00 20 00 00       	and    $0x2000,%eax
81002521:	85 c0                	test   %eax,%eax
81002523:	75 14                	jne    81002539 <__srefill_r+0x51>
81002525:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002529:	80 cc 20             	or     $0x20,%ah
8100252c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002530:	8b 43 64             	mov    0x64(%ebx),%eax
81002533:	80 e4 df             	and    $0xdf,%ah
81002536:	89 43 64             	mov    %eax,0x64(%ebx)
81002539:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002540:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002544:	98                   	cwtl   
81002545:	83 e0 20             	and    $0x20,%eax
81002548:	85 c0                	test   %eax,%eax
8100254a:	74 0a                	je     81002556 <__srefill_r+0x6e>
8100254c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002551:	e9 8c 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
81002556:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100255a:	98                   	cwtl   
8100255b:	83 e0 04             	and    $0x4,%eax
8100255e:	85 c0                	test   %eax,%eax
81002560:	75 79                	jne    810025db <__srefill_r+0xf3>
81002562:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002566:	98                   	cwtl   
81002567:	83 e0 10             	and    $0x10,%eax
8100256a:	85 c0                	test   %eax,%eax
8100256c:	75 1e                	jne    8100258c <__srefill_r+0xa4>
8100256e:	8b 45 08             	mov    0x8(%ebp),%eax
81002571:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002577:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257b:	83 c8 40             	or     $0x40,%eax
8100257e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002582:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002587:	e9 56 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
8100258c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002590:	98                   	cwtl   
81002591:	83 e0 08             	and    $0x8,%eax
81002594:	85 c0                	test   %eax,%eax
81002596:	74 36                	je     810025ce <__srefill_r+0xe6>
81002598:	83 ec 08             	sub    $0x8,%esp
8100259b:	53                   	push   %ebx
8100259c:	ff 75 08             	pushl  0x8(%ebp)
8100259f:	e8 c8 07 00 00       	call   81002d6c <_fflush_r>
810025a4:	83 c4 10             	add    $0x10,%esp
810025a7:	85 c0                	test   %eax,%eax
810025a9:	74 0a                	je     810025b5 <__srefill_r+0xcd>
810025ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025b0:	e9 2d 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
810025b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025b9:	83 e0 f7             	and    $0xfffffff7,%eax
810025bc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025c0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810025c7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810025ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025d2:	83 c8 04             	or     $0x4,%eax
810025d5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025d9:	eb 46                	jmp    81002621 <__srefill_r+0x139>
810025db:	8b 43 30             	mov    0x30(%ebx),%eax
810025de:	85 c0                	test   %eax,%eax
810025e0:	74 3f                	je     81002621 <__srefill_r+0x139>
810025e2:	8b 53 30             	mov    0x30(%ebx),%edx
810025e5:	8d 43 40             	lea    0x40(%ebx),%eax
810025e8:	39 c2                	cmp    %eax,%edx
810025ea:	74 12                	je     810025fe <__srefill_r+0x116>
810025ec:	8b 43 30             	mov    0x30(%ebx),%eax
810025ef:	83 ec 08             	sub    $0x8,%esp
810025f2:	50                   	push   %eax
810025f3:	ff 75 08             	pushl  0x8(%ebp)
810025f6:	e8 02 08 00 00       	call   81002dfd <_free_r>
810025fb:	83 c4 10             	add    $0x10,%esp
810025fe:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002605:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002608:	89 43 04             	mov    %eax,0x4(%ebx)
8100260b:	8b 43 04             	mov    0x4(%ebx),%eax
8100260e:	85 c0                	test   %eax,%eax
81002610:	74 0f                	je     81002621 <__srefill_r+0x139>
81002612:	8b 43 38             	mov    0x38(%ebx),%eax
81002615:	89 03                	mov    %eax,(%ebx)
81002617:	b8 00 00 00 00       	mov    $0x0,%eax
8100261c:	e9 c1 00 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
81002621:	8b 43 10             	mov    0x10(%ebx),%eax
81002624:	85 c0                	test   %eax,%eax
81002626:	75 0f                	jne    81002637 <__srefill_r+0x14f>
81002628:	83 ec 08             	sub    $0x8,%esp
8100262b:	53                   	push   %ebx
8100262c:	ff 75 08             	pushl  0x8(%ebp)
8100262f:	e8 4b 0d 00 00       	call   8100337f <__smakebuf_r>
81002634:	83 c4 10             	add    $0x10,%esp
81002637:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100263b:	98                   	cwtl   
8100263c:	83 e0 03             	and    $0x3,%eax
8100263f:	85 c0                	test   %eax,%eax
81002641:	74 48                	je     8100268b <__srefill_r+0x1a3>
81002643:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002647:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100264b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002651:	a1 78 37 00 81       	mov    0x81003778,%eax
81002656:	83 ec 08             	sub    $0x8,%esp
81002659:	68 bb 24 00 81       	push   $0x810024bb
8100265e:	50                   	push   %eax
8100265f:	e8 e5 e7 ff ff       	call   81000e49 <_fwalk>
81002664:	83 c4 10             	add    $0x10,%esp
81002667:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100266b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100266f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002673:	98                   	cwtl   
81002674:	83 e0 09             	and    $0x9,%eax
81002677:	83 f8 09             	cmp    $0x9,%eax
8100267a:	75 0f                	jne    8100268b <__srefill_r+0x1a3>
8100267c:	83 ec 08             	sub    $0x8,%esp
8100267f:	53                   	push   %ebx
81002680:	ff 75 08             	pushl  0x8(%ebp)
81002683:	e8 be 04 00 00       	call   81002b46 <__sflush_r>
81002688:	83 c4 10             	add    $0x10,%esp
8100268b:	8b 43 10             	mov    0x10(%ebx),%eax
8100268e:	89 03                	mov    %eax,(%ebx)
81002690:	8b 43 20             	mov    0x20(%ebx),%eax
81002693:	8b 73 14             	mov    0x14(%ebx),%esi
81002696:	8b 0b                	mov    (%ebx),%ecx
81002698:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100269b:	56                   	push   %esi
8100269c:	51                   	push   %ecx
8100269d:	52                   	push   %edx
8100269e:	ff 75 08             	pushl  0x8(%ebp)
810026a1:	ff d0                	call   *%eax
810026a3:	83 c4 10             	add    $0x10,%esp
810026a6:	89 43 04             	mov    %eax,0x4(%ebx)
810026a9:	8b 43 04             	mov    0x4(%ebx),%eax
810026ac:	85 c0                	test   %eax,%eax
810026ae:	7f 2d                	jg     810026dd <__srefill_r+0x1f5>
810026b0:	8b 43 04             	mov    0x4(%ebx),%eax
810026b3:	85 c0                	test   %eax,%eax
810026b5:	75 0d                	jne    810026c4 <__srefill_r+0x1dc>
810026b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026bb:	83 c8 20             	or     $0x20,%eax
810026be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026c2:	eb 12                	jmp    810026d6 <__srefill_r+0x1ee>
810026c4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810026cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026cf:	83 c8 40             	or     $0x40,%eax
810026d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026db:	eb 05                	jmp    810026e2 <__srefill_r+0x1fa>
810026dd:	b8 00 00 00 00       	mov    $0x0,%eax
810026e2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810026e5:	5b                   	pop    %ebx
810026e6:	5e                   	pop    %esi
810026e7:	5d                   	pop    %ebp
810026e8:	c3                   	ret    

810026e9 <_sbrk_r>:
810026e9:	55                   	push   %ebp
810026ea:	89 e5                	mov    %esp,%ebp
810026ec:	83 ec 18             	sub    $0x18,%esp
810026ef:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
810026f6:	00 00 00 
810026f9:	83 ec 0c             	sub    $0xc,%esp
810026fc:	ff 75 0c             	pushl  0xc(%ebp)
810026ff:	e8 ca db ff ff       	call   810002ce <sbrk>
81002704:	83 c4 10             	add    $0x10,%esp
81002707:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100270a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100270e:	75 14                	jne    81002724 <_sbrk_r+0x3b>
81002710:	a1 4c 40 00 81       	mov    0x8100404c,%eax
81002715:	85 c0                	test   %eax,%eax
81002717:	74 0b                	je     81002724 <_sbrk_r+0x3b>
81002719:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
8100271f:	8b 45 08             	mov    0x8(%ebp),%eax
81002722:	89 10                	mov    %edx,(%eax)
81002724:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002727:	c9                   	leave  
81002728:	c3                   	ret    

81002729 <__sread>:
81002729:	55                   	push   %ebp
8100272a:	89 e5                	mov    %esp,%ebp
8100272c:	56                   	push   %esi
8100272d:	53                   	push   %ebx
8100272e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002731:	8b 55 14             	mov    0x14(%ebp),%edx
81002734:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002738:	98                   	cwtl   
81002739:	52                   	push   %edx
8100273a:	ff 75 10             	pushl  0x10(%ebp)
8100273d:	50                   	push   %eax
8100273e:	ff 75 08             	pushl  0x8(%ebp)
81002741:	e8 b9 0d 00 00       	call   810034ff <_read_r>
81002746:	83 c4 10             	add    $0x10,%esp
81002749:	89 c6                	mov    %eax,%esi
8100274b:	85 f6                	test   %esi,%esi
8100274d:	78 0a                	js     81002759 <__sread+0x30>
8100274f:	8b 43 50             	mov    0x50(%ebx),%eax
81002752:	01 f0                	add    %esi,%eax
81002754:	89 43 50             	mov    %eax,0x50(%ebx)
81002757:	eb 0b                	jmp    81002764 <__sread+0x3b>
81002759:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100275d:	80 e4 ef             	and    $0xef,%ah
81002760:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002764:	89 f0                	mov    %esi,%eax
81002766:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002769:	5b                   	pop    %ebx
8100276a:	5e                   	pop    %esi
8100276b:	5d                   	pop    %ebp
8100276c:	c3                   	ret    

8100276d <__seofread>:
8100276d:	55                   	push   %ebp
8100276e:	89 e5                	mov    %esp,%ebp
81002770:	b8 00 00 00 00       	mov    $0x0,%eax
81002775:	5d                   	pop    %ebp
81002776:	c3                   	ret    

81002777 <__swrite>:
81002777:	55                   	push   %ebp
81002778:	89 e5                	mov    %esp,%ebp
8100277a:	53                   	push   %ebx
8100277b:	83 ec 14             	sub    $0x14,%esp
8100277e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002781:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002785:	98                   	cwtl   
81002786:	25 00 01 00 00       	and    $0x100,%eax
8100278b:	85 c0                	test   %eax,%eax
8100278d:	74 15                	je     810027a4 <__swrite+0x2d>
8100278f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002793:	98                   	cwtl   
81002794:	6a 02                	push   $0x2
81002796:	6a 00                	push   $0x0
81002798:	50                   	push   %eax
81002799:	ff 75 08             	pushl  0x8(%ebp)
8100279c:	e8 98 0b 00 00       	call   81003339 <_lseek_r>
810027a1:	83 c4 10             	add    $0x10,%esp
810027a4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a8:	80 e4 ef             	and    $0xef,%ah
810027ab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027af:	8b 55 14             	mov    0x14(%ebp),%edx
810027b2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027b6:	98                   	cwtl   
810027b7:	52                   	push   %edx
810027b8:	ff 75 10             	pushl  0x10(%ebp)
810027bb:	50                   	push   %eax
810027bc:	ff 75 08             	pushl  0x8(%ebp)
810027bf:	e8 7d 00 00 00       	call   81002841 <_write_r>
810027c4:	83 c4 10             	add    $0x10,%esp
810027c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810027d0:	c9                   	leave  
810027d1:	c3                   	ret    

810027d2 <__sseek>:
810027d2:	55                   	push   %ebp
810027d3:	89 e5                	mov    %esp,%ebp
810027d5:	56                   	push   %esi
810027d6:	53                   	push   %ebx
810027d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810027da:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027de:	98                   	cwtl   
810027df:	ff 75 14             	pushl  0x14(%ebp)
810027e2:	ff 75 10             	pushl  0x10(%ebp)
810027e5:	50                   	push   %eax
810027e6:	ff 75 08             	pushl  0x8(%ebp)
810027e9:	e8 4b 0b 00 00       	call   81003339 <_lseek_r>
810027ee:	83 c4 10             	add    $0x10,%esp
810027f1:	89 c6                	mov    %eax,%esi
810027f3:	83 fe ff             	cmp    $0xffffffff,%esi
810027f6:	75 0d                	jne    81002805 <__sseek+0x33>
810027f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027fc:	80 e4 ef             	and    $0xef,%ah
810027ff:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002803:	eb 0e                	jmp    81002813 <__sseek+0x41>
81002805:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002809:	80 cc 10             	or     $0x10,%ah
8100280c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002810:	89 73 50             	mov    %esi,0x50(%ebx)
81002813:	89 f0                	mov    %esi,%eax
81002815:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002818:	5b                   	pop    %ebx
81002819:	5e                   	pop    %esi
8100281a:	5d                   	pop    %ebp
8100281b:	c3                   	ret    

8100281c <__sclose>:
8100281c:	55                   	push   %ebp
8100281d:	89 e5                	mov    %esp,%ebp
8100281f:	83 ec 18             	sub    $0x18,%esp
81002822:	8b 45 0c             	mov    0xc(%ebp),%eax
81002825:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002828:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100282b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100282f:	98                   	cwtl   
81002830:	83 ec 08             	sub    $0x8,%esp
81002833:	50                   	push   %eax
81002834:	ff 75 08             	pushl  0x8(%ebp)
81002837:	e8 a6 01 00 00       	call   810029e2 <_close_r>
8100283c:	83 c4 10             	add    $0x10,%esp
8100283f:	c9                   	leave  
81002840:	c3                   	ret    

81002841 <_write_r>:
81002841:	55                   	push   %ebp
81002842:	89 e5                	mov    %esp,%ebp
81002844:	83 ec 18             	sub    $0x18,%esp
81002847:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
8100284e:	00 00 00 
81002851:	83 ec 04             	sub    $0x4,%esp
81002854:	ff 75 14             	pushl  0x14(%ebp)
81002857:	ff 75 10             	pushl  0x10(%ebp)
8100285a:	ff 75 0c             	pushl  0xc(%ebp)
8100285d:	e8 a9 d9 ff ff       	call   8100020b <write>
81002862:	83 c4 10             	add    $0x10,%esp
81002865:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002868:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100286c:	75 14                	jne    81002882 <_write_r+0x41>
8100286e:	a1 4c 40 00 81       	mov    0x8100404c,%eax
81002873:	85 c0                	test   %eax,%eax
81002875:	74 0b                	je     81002882 <_write_r+0x41>
81002877:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
8100287d:	8b 45 08             	mov    0x8(%ebp),%eax
81002880:	89 10                	mov    %edx,(%eax)
81002882:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002885:	c9                   	leave  
81002886:	c3                   	ret    

81002887 <__swsetup_r>:
81002887:	55                   	push   %ebp
81002888:	89 e5                	mov    %esp,%ebp
8100288a:	53                   	push   %ebx
8100288b:	83 ec 14             	sub    $0x14,%esp
8100288e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002891:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002896:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002899:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100289d:	74 18                	je     810028b7 <__swsetup_r+0x30>
8100289f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028a2:	8b 40 38             	mov    0x38(%eax),%eax
810028a5:	85 c0                	test   %eax,%eax
810028a7:	75 0e                	jne    810028b7 <__swsetup_r+0x30>
810028a9:	83 ec 0c             	sub    $0xc,%esp
810028ac:	ff 75 f4             	pushl  -0xc(%ebp)
810028af:	e8 ea df ff ff       	call   8100089e <__sinit>
810028b4:	83 c4 10             	add    $0x10,%esp
810028b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028bb:	98                   	cwtl   
810028bc:	83 e0 08             	and    $0x8,%eax
810028bf:	85 c0                	test   %eax,%eax
810028c1:	0f 85 82 00 00 00    	jne    81002949 <__swsetup_r+0xc2>
810028c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028cb:	98                   	cwtl   
810028cc:	83 e0 10             	and    $0x10,%eax
810028cf:	85 c0                	test   %eax,%eax
810028d1:	75 1e                	jne    810028f1 <__swsetup_r+0x6a>
810028d3:	8b 45 08             	mov    0x8(%ebp),%eax
810028d6:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810028dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028e0:	83 c8 40             	or     $0x40,%eax
810028e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028ec:	e9 ec 00 00 00       	jmp    810029dd <__swsetup_r+0x156>
810028f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028f5:	98                   	cwtl   
810028f6:	83 e0 04             	and    $0x4,%eax
810028f9:	85 c0                	test   %eax,%eax
810028fb:	74 41                	je     8100293e <__swsetup_r+0xb7>
810028fd:	8b 43 30             	mov    0x30(%ebx),%eax
81002900:	85 c0                	test   %eax,%eax
81002902:	74 23                	je     81002927 <__swsetup_r+0xa0>
81002904:	8b 53 30             	mov    0x30(%ebx),%edx
81002907:	8d 43 40             	lea    0x40(%ebx),%eax
8100290a:	39 c2                	cmp    %eax,%edx
8100290c:	74 12                	je     81002920 <__swsetup_r+0x99>
8100290e:	8b 43 30             	mov    0x30(%ebx),%eax
81002911:	83 ec 08             	sub    $0x8,%esp
81002914:	50                   	push   %eax
81002915:	ff 75 08             	pushl  0x8(%ebp)
81002918:	e8 e0 04 00 00       	call   81002dfd <_free_r>
8100291d:	83 c4 10             	add    $0x10,%esp
81002920:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002927:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100292b:	83 e0 db             	and    $0xffffffdb,%eax
8100292e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002932:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002939:	8b 43 10             	mov    0x10(%ebx),%eax
8100293c:	89 03                	mov    %eax,(%ebx)
8100293e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002942:	83 c8 08             	or     $0x8,%eax
81002945:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002949:	8b 43 10             	mov    0x10(%ebx),%eax
8100294c:	85 c0                	test   %eax,%eax
8100294e:	75 2b                	jne    8100297b <__swsetup_r+0xf4>
81002950:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002954:	98                   	cwtl   
81002955:	25 00 02 00 00       	and    $0x200,%eax
8100295a:	85 c0                	test   %eax,%eax
8100295c:	74 0e                	je     8100296c <__swsetup_r+0xe5>
8100295e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002962:	98                   	cwtl   
81002963:	25 80 00 00 00       	and    $0x80,%eax
81002968:	85 c0                	test   %eax,%eax
8100296a:	74 0f                	je     8100297b <__swsetup_r+0xf4>
8100296c:	83 ec 08             	sub    $0x8,%esp
8100296f:	53                   	push   %ebx
81002970:	ff 75 08             	pushl  0x8(%ebp)
81002973:	e8 07 0a 00 00       	call   8100337f <__smakebuf_r>
81002978:	83 c4 10             	add    $0x10,%esp
8100297b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100297f:	98                   	cwtl   
81002980:	83 e0 01             	and    $0x1,%eax
81002983:	85 c0                	test   %eax,%eax
81002985:	74 11                	je     81002998 <__swsetup_r+0x111>
81002987:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100298e:	8b 43 14             	mov    0x14(%ebx),%eax
81002991:	f7 d8                	neg    %eax
81002993:	89 43 18             	mov    %eax,0x18(%ebx)
81002996:	eb 19                	jmp    810029b1 <__swsetup_r+0x12a>
81002998:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100299c:	98                   	cwtl   
8100299d:	83 e0 02             	and    $0x2,%eax
810029a0:	85 c0                	test   %eax,%eax
810029a2:	75 05                	jne    810029a9 <__swsetup_r+0x122>
810029a4:	8b 43 14             	mov    0x14(%ebx),%eax
810029a7:	eb 05                	jmp    810029ae <__swsetup_r+0x127>
810029a9:	b8 00 00 00 00       	mov    $0x0,%eax
810029ae:	89 43 08             	mov    %eax,0x8(%ebx)
810029b1:	8b 43 10             	mov    0x10(%ebx),%eax
810029b4:	85 c0                	test   %eax,%eax
810029b6:	75 20                	jne    810029d8 <__swsetup_r+0x151>
810029b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029bc:	98                   	cwtl   
810029bd:	25 80 00 00 00       	and    $0x80,%eax
810029c2:	85 c0                	test   %eax,%eax
810029c4:	74 12                	je     810029d8 <__swsetup_r+0x151>
810029c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ca:	83 c8 40             	or     $0x40,%eax
810029cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029d6:	eb 05                	jmp    810029dd <__swsetup_r+0x156>
810029d8:	b8 00 00 00 00       	mov    $0x0,%eax
810029dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810029e0:	c9                   	leave  
810029e1:	c3                   	ret    

810029e2 <_close_r>:
810029e2:	55                   	push   %ebp
810029e3:	89 e5                	mov    %esp,%ebp
810029e5:	83 ec 18             	sub    $0x18,%esp
810029e8:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
810029ef:	00 00 00 
810029f2:	83 ec 0c             	sub    $0xc,%esp
810029f5:	ff 75 0c             	pushl  0xc(%ebp)
810029f8:	e8 3b d8 ff ff       	call   81000238 <close>
810029fd:	83 c4 10             	add    $0x10,%esp
81002a00:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a03:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002a07:	75 14                	jne    81002a1d <_close_r+0x3b>
81002a09:	a1 4c 40 00 81       	mov    0x8100404c,%eax
81002a0e:	85 c0                	test   %eax,%eax
81002a10:	74 0b                	je     81002a1d <_close_r+0x3b>
81002a12:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
81002a18:	8b 45 08             	mov    0x8(%ebp),%eax
81002a1b:	89 10                	mov    %edx,(%eax)
81002a1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a20:	c9                   	leave  
81002a21:	c3                   	ret    

81002a22 <_fclose_r>:
81002a22:	55                   	push   %ebp
81002a23:	89 e5                	mov    %esp,%ebp
81002a25:	53                   	push   %ebx
81002a26:	83 ec 14             	sub    $0x14,%esp
81002a29:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a2c:	85 db                	test   %ebx,%ebx
81002a2e:	75 0a                	jne    81002a3a <_fclose_r+0x18>
81002a30:	b8 00 00 00 00       	mov    $0x0,%eax
81002a35:	e9 ea 00 00 00       	jmp    81002b24 <_fclose_r+0x102>
81002a3a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a3d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a40:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002a44:	74 18                	je     81002a5e <_fclose_r+0x3c>
81002a46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a49:	8b 40 38             	mov    0x38(%eax),%eax
81002a4c:	85 c0                	test   %eax,%eax
81002a4e:	75 0e                	jne    81002a5e <_fclose_r+0x3c>
81002a50:	83 ec 0c             	sub    $0xc,%esp
81002a53:	ff 75 f0             	pushl  -0x10(%ebp)
81002a56:	e8 43 de ff ff       	call   8100089e <__sinit>
81002a5b:	83 c4 10             	add    $0x10,%esp
81002a5e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a62:	66 85 c0             	test   %ax,%ax
81002a65:	75 0a                	jne    81002a71 <_fclose_r+0x4f>
81002a67:	b8 00 00 00 00       	mov    $0x0,%eax
81002a6c:	e9 b3 00 00 00       	jmp    81002b24 <_fclose_r+0x102>
81002a71:	83 ec 08             	sub    $0x8,%esp
81002a74:	53                   	push   %ebx
81002a75:	ff 75 08             	pushl  0x8(%ebp)
81002a78:	e8 c9 00 00 00       	call   81002b46 <__sflush_r>
81002a7d:	83 c4 10             	add    $0x10,%esp
81002a80:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a83:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a86:	85 c0                	test   %eax,%eax
81002a88:	74 1d                	je     81002aa7 <_fclose_r+0x85>
81002a8a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a8d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002a90:	83 ec 08             	sub    $0x8,%esp
81002a93:	52                   	push   %edx
81002a94:	ff 75 08             	pushl  0x8(%ebp)
81002a97:	ff d0                	call   *%eax
81002a99:	83 c4 10             	add    $0x10,%esp
81002a9c:	85 c0                	test   %eax,%eax
81002a9e:	79 07                	jns    81002aa7 <_fclose_r+0x85>
81002aa0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002aa7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aab:	98                   	cwtl   
81002aac:	25 80 00 00 00       	and    $0x80,%eax
81002ab1:	85 c0                	test   %eax,%eax
81002ab3:	74 12                	je     81002ac7 <_fclose_r+0xa5>
81002ab5:	8b 43 10             	mov    0x10(%ebx),%eax
81002ab8:	83 ec 08             	sub    $0x8,%esp
81002abb:	50                   	push   %eax
81002abc:	ff 75 08             	pushl  0x8(%ebp)
81002abf:	e8 39 03 00 00       	call   81002dfd <_free_r>
81002ac4:	83 c4 10             	add    $0x10,%esp
81002ac7:	8b 43 30             	mov    0x30(%ebx),%eax
81002aca:	85 c0                	test   %eax,%eax
81002acc:	74 23                	je     81002af1 <_fclose_r+0xcf>
81002ace:	8b 53 30             	mov    0x30(%ebx),%edx
81002ad1:	8d 43 40             	lea    0x40(%ebx),%eax
81002ad4:	39 c2                	cmp    %eax,%edx
81002ad6:	74 12                	je     81002aea <_fclose_r+0xc8>
81002ad8:	8b 43 30             	mov    0x30(%ebx),%eax
81002adb:	83 ec 08             	sub    $0x8,%esp
81002ade:	50                   	push   %eax
81002adf:	ff 75 08             	pushl  0x8(%ebp)
81002ae2:	e8 16 03 00 00       	call   81002dfd <_free_r>
81002ae7:	83 c4 10             	add    $0x10,%esp
81002aea:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002af1:	8b 43 44             	mov    0x44(%ebx),%eax
81002af4:	85 c0                	test   %eax,%eax
81002af6:	74 19                	je     81002b11 <_fclose_r+0xef>
81002af8:	8b 43 44             	mov    0x44(%ebx),%eax
81002afb:	83 ec 08             	sub    $0x8,%esp
81002afe:	50                   	push   %eax
81002aff:	ff 75 08             	pushl  0x8(%ebp)
81002b02:	e8 f6 02 00 00       	call   81002dfd <_free_r>
81002b07:	83 c4 10             	add    $0x10,%esp
81002b0a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002b11:	e8 21 de ff ff       	call   81000937 <__sfp_lock_acquire>
81002b16:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002b1c:	e8 1c de ff ff       	call   8100093d <__sfp_lock_release>
81002b21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b27:	c9                   	leave  
81002b28:	c3                   	ret    

81002b29 <fclose>:
81002b29:	55                   	push   %ebp
81002b2a:	89 e5                	mov    %esp,%ebp
81002b2c:	83 ec 08             	sub    $0x8,%esp
81002b2f:	8b 55 08             	mov    0x8(%ebp),%edx
81002b32:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002b37:	83 ec 08             	sub    $0x8,%esp
81002b3a:	52                   	push   %edx
81002b3b:	50                   	push   %eax
81002b3c:	e8 e1 fe ff ff       	call   81002a22 <_fclose_r>
81002b41:	83 c4 10             	add    $0x10,%esp
81002b44:	c9                   	leave  
81002b45:	c3                   	ret    

81002b46 <__sflush_r>:
81002b46:	55                   	push   %ebp
81002b47:	89 e5                	mov    %esp,%ebp
81002b49:	57                   	push   %edi
81002b4a:	56                   	push   %esi
81002b4b:	53                   	push   %ebx
81002b4c:	83 ec 1c             	sub    $0x1c,%esp
81002b4f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002b52:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b56:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81002b5a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002b5e:	83 e0 08             	and    $0x8,%eax
81002b61:	85 c0                	test   %eax,%eax
81002b63:	0f 85 93 01 00 00    	jne    81002cfc <__sflush_r+0x1b6>
81002b69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b6d:	80 cc 08             	or     $0x8,%ah
81002b70:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b74:	8b 43 04             	mov    0x4(%ebx),%eax
81002b77:	85 c0                	test   %eax,%eax
81002b79:	7f 0b                	jg     81002b86 <__sflush_r+0x40>
81002b7b:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002b7e:	85 c0                	test   %eax,%eax
81002b80:	0f 8e 6f 01 00 00    	jle    81002cf5 <__sflush_r+0x1af>
81002b86:	8b 43 28             	mov    0x28(%ebx),%eax
81002b89:	85 c0                	test   %eax,%eax
81002b8b:	0f 84 64 01 00 00    	je     81002cf5 <__sflush_r+0x1af>
81002b91:	8b 45 08             	mov    0x8(%ebp),%eax
81002b94:	8b 00                	mov    (%eax),%eax
81002b96:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b99:	8b 45 08             	mov    0x8(%ebp),%eax
81002b9c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002ba2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ba6:	98                   	cwtl   
81002ba7:	25 00 10 00 00       	and    $0x1000,%eax
81002bac:	85 c0                	test   %eax,%eax
81002bae:	74 08                	je     81002bb8 <__sflush_r+0x72>
81002bb0:	8b 43 50             	mov    0x50(%ebx),%eax
81002bb3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bb6:	eb 64                	jmp    81002c1c <__sflush_r+0xd6>
81002bb8:	8b 43 28             	mov    0x28(%ebx),%eax
81002bbb:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002bbe:	6a 01                	push   $0x1
81002bc0:	6a 00                	push   $0x0
81002bc2:	52                   	push   %edx
81002bc3:	ff 75 08             	pushl  0x8(%ebp)
81002bc6:	ff d0                	call   *%eax
81002bc8:	83 c4 10             	add    $0x10,%esp
81002bcb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bce:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002bd2:	75 48                	jne    81002c1c <__sflush_r+0xd6>
81002bd4:	8b 45 08             	mov    0x8(%ebp),%eax
81002bd7:	8b 00                	mov    (%eax),%eax
81002bd9:	85 c0                	test   %eax,%eax
81002bdb:	74 3f                	je     81002c1c <__sflush_r+0xd6>
81002bdd:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002be4:	8b 45 08             	mov    0x8(%ebp),%eax
81002be7:	8b 00                	mov    (%eax),%eax
81002be9:	83 f8 1d             	cmp    $0x1d,%eax
81002bec:	74 0a                	je     81002bf8 <__sflush_r+0xb2>
81002bee:	8b 45 08             	mov    0x8(%ebp),%eax
81002bf1:	8b 00                	mov    (%eax),%eax
81002bf3:	83 f8 16             	cmp    $0x16,%eax
81002bf6:	75 11                	jne    81002c09 <__sflush_r+0xc3>
81002bf8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002bff:	8b 45 08             	mov    0x8(%ebp),%eax
81002c02:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002c05:	89 10                	mov    %edx,(%eax)
81002c07:	eb 0b                	jmp    81002c14 <__sflush_r+0xce>
81002c09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c0d:	83 c8 40             	or     $0x40,%eax
81002c10:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c14:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c17:	e9 48 01 00 00       	jmp    81002d64 <__sflush_r+0x21e>
81002c1c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c20:	98                   	cwtl   
81002c21:	83 e0 04             	and    $0x4,%eax
81002c24:	85 c0                	test   %eax,%eax
81002c26:	74 13                	je     81002c3b <__sflush_r+0xf5>
81002c28:	8b 43 04             	mov    0x4(%ebx),%eax
81002c2b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c2e:	8b 43 30             	mov    0x30(%ebx),%eax
81002c31:	85 c0                	test   %eax,%eax
81002c33:	74 06                	je     81002c3b <__sflush_r+0xf5>
81002c35:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002c38:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c3b:	8b 43 28             	mov    0x28(%ebx),%eax
81002c3e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002c41:	6a 00                	push   $0x0
81002c43:	ff 75 e4             	pushl  -0x1c(%ebp)
81002c46:	52                   	push   %edx
81002c47:	ff 75 08             	pushl  0x8(%ebp)
81002c4a:	ff d0                	call   *%eax
81002c4c:	83 c4 10             	add    $0x10,%esp
81002c4f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c52:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c56:	75 1d                	jne    81002c75 <__sflush_r+0x12f>
81002c58:	8b 45 08             	mov    0x8(%ebp),%eax
81002c5b:	8b 00                	mov    (%eax),%eax
81002c5d:	85 c0                	test   %eax,%eax
81002c5f:	74 14                	je     81002c75 <__sflush_r+0x12f>
81002c61:	8b 45 08             	mov    0x8(%ebp),%eax
81002c64:	8b 00                	mov    (%eax),%eax
81002c66:	83 f8 1d             	cmp    $0x1d,%eax
81002c69:	74 0a                	je     81002c75 <__sflush_r+0x12f>
81002c6b:	8b 45 08             	mov    0x8(%ebp),%eax
81002c6e:	8b 00                	mov    (%eax),%eax
81002c70:	83 f8 16             	cmp    $0x16,%eax
81002c73:	75 6e                	jne    81002ce3 <__sflush_r+0x19d>
81002c75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c79:	80 e4 f7             	and    $0xf7,%ah
81002c7c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c80:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002c87:	8b 43 10             	mov    0x10(%ebx),%eax
81002c8a:	89 03                	mov    %eax,(%ebx)
81002c8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c90:	98                   	cwtl   
81002c91:	25 00 10 00 00       	and    $0x1000,%eax
81002c96:	85 c0                	test   %eax,%eax
81002c98:	74 15                	je     81002caf <__sflush_r+0x169>
81002c9a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c9e:	75 09                	jne    81002ca9 <__sflush_r+0x163>
81002ca0:	8b 45 08             	mov    0x8(%ebp),%eax
81002ca3:	8b 00                	mov    (%eax),%eax
81002ca5:	85 c0                	test   %eax,%eax
81002ca7:	75 06                	jne    81002caf <__sflush_r+0x169>
81002ca9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002cac:	89 43 50             	mov    %eax,0x50(%ebx)
81002caf:	8b 45 08             	mov    0x8(%ebp),%eax
81002cb2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cb5:	89 10                	mov    %edx,(%eax)
81002cb7:	8b 43 30             	mov    0x30(%ebx),%eax
81002cba:	85 c0                	test   %eax,%eax
81002cbc:	74 37                	je     81002cf5 <__sflush_r+0x1af>
81002cbe:	8b 53 30             	mov    0x30(%ebx),%edx
81002cc1:	8d 43 40             	lea    0x40(%ebx),%eax
81002cc4:	39 c2                	cmp    %eax,%edx
81002cc6:	74 12                	je     81002cda <__sflush_r+0x194>
81002cc8:	8b 43 30             	mov    0x30(%ebx),%eax
81002ccb:	83 ec 08             	sub    $0x8,%esp
81002cce:	50                   	push   %eax
81002ccf:	ff 75 08             	pushl  0x8(%ebp)
81002cd2:	e8 26 01 00 00       	call   81002dfd <_free_r>
81002cd7:	83 c4 10             	add    $0x10,%esp
81002cda:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002ce1:	eb 12                	jmp    81002cf5 <__sflush_r+0x1af>
81002ce3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ce7:	83 c8 40             	or     $0x40,%eax
81002cea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002cee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002cf3:	eb 6f                	jmp    81002d64 <__sflush_r+0x21e>
81002cf5:	b8 00 00 00 00       	mov    $0x0,%eax
81002cfa:	eb 68                	jmp    81002d64 <__sflush_r+0x21e>
81002cfc:	8b 73 10             	mov    0x10(%ebx),%esi
81002cff:	85 f6                	test   %esi,%esi
81002d01:	75 07                	jne    81002d0a <__sflush_r+0x1c4>
81002d03:	b8 00 00 00 00       	mov    $0x0,%eax
81002d08:	eb 5a                	jmp    81002d64 <__sflush_r+0x21e>
81002d0a:	8b 03                	mov    (%ebx),%eax
81002d0c:	29 f0                	sub    %esi,%eax
81002d0e:	89 c7                	mov    %eax,%edi
81002d10:	89 33                	mov    %esi,(%ebx)
81002d12:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002d16:	83 e0 03             	and    $0x3,%eax
81002d19:	85 c0                	test   %eax,%eax
81002d1b:	75 05                	jne    81002d22 <__sflush_r+0x1dc>
81002d1d:	8b 43 14             	mov    0x14(%ebx),%eax
81002d20:	eb 05                	jmp    81002d27 <__sflush_r+0x1e1>
81002d22:	b8 00 00 00 00       	mov    $0x0,%eax
81002d27:	89 43 08             	mov    %eax,0x8(%ebx)
81002d2a:	eb 2f                	jmp    81002d5b <__sflush_r+0x215>
81002d2c:	8b 43 24             	mov    0x24(%ebx),%eax
81002d2f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002d32:	57                   	push   %edi
81002d33:	56                   	push   %esi
81002d34:	52                   	push   %edx
81002d35:	ff 75 08             	pushl  0x8(%ebp)
81002d38:	ff d0                	call   *%eax
81002d3a:	83 c4 10             	add    $0x10,%esp
81002d3d:	85 c0                	test   %eax,%eax
81002d3f:	7f 12                	jg     81002d53 <__sflush_r+0x20d>
81002d41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d45:	83 c8 40             	or     $0x40,%eax
81002d48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d51:	eb 11                	jmp    81002d64 <__sflush_r+0x21e>
81002d53:	89 c1                	mov    %eax,%ecx
81002d55:	89 c8                	mov    %ecx,%eax
81002d57:	01 c6                	add    %eax,%esi
81002d59:	29 cf                	sub    %ecx,%edi
81002d5b:	85 ff                	test   %edi,%edi
81002d5d:	7f cd                	jg     81002d2c <__sflush_r+0x1e6>
81002d5f:	b8 00 00 00 00       	mov    $0x0,%eax
81002d64:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d67:	5b                   	pop    %ebx
81002d68:	5e                   	pop    %esi
81002d69:	5f                   	pop    %edi
81002d6a:	5d                   	pop    %ebp
81002d6b:	c3                   	ret    

81002d6c <_fflush_r>:
81002d6c:	55                   	push   %ebp
81002d6d:	89 e5                	mov    %esp,%ebp
81002d6f:	53                   	push   %ebx
81002d70:	83 ec 14             	sub    $0x14,%esp
81002d73:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002d76:	8b 45 08             	mov    0x8(%ebp),%eax
81002d79:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002d80:	74 18                	je     81002d9a <_fflush_r+0x2e>
81002d82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d85:	8b 40 38             	mov    0x38(%eax),%eax
81002d88:	85 c0                	test   %eax,%eax
81002d8a:	75 0e                	jne    81002d9a <_fflush_r+0x2e>
81002d8c:	83 ec 0c             	sub    $0xc,%esp
81002d8f:	ff 75 f4             	pushl  -0xc(%ebp)
81002d92:	e8 07 db ff ff       	call   8100089e <__sinit>
81002d97:	83 c4 10             	add    $0x10,%esp
81002d9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d9e:	66 85 c0             	test   %ax,%ax
81002da1:	75 07                	jne    81002daa <_fflush_r+0x3e>
81002da3:	b8 00 00 00 00       	mov    $0x0,%eax
81002da8:	eb 15                	jmp    81002dbf <_fflush_r+0x53>
81002daa:	83 ec 08             	sub    $0x8,%esp
81002dad:	53                   	push   %ebx
81002dae:	ff 75 08             	pushl  0x8(%ebp)
81002db1:	e8 90 fd ff ff       	call   81002b46 <__sflush_r>
81002db6:	83 c4 10             	add    $0x10,%esp
81002db9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002dbc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dbf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002dc2:	c9                   	leave  
81002dc3:	c3                   	ret    

81002dc4 <fflush>:
81002dc4:	55                   	push   %ebp
81002dc5:	89 e5                	mov    %esp,%ebp
81002dc7:	83 ec 08             	sub    $0x8,%esp
81002dca:	8b 55 08             	mov    0x8(%ebp),%edx
81002dcd:	85 d2                	test   %edx,%edx
81002dcf:	75 18                	jne    81002de9 <fflush+0x25>
81002dd1:	a1 78 37 00 81       	mov    0x81003778,%eax
81002dd6:	83 ec 08             	sub    $0x8,%esp
81002dd9:	68 6c 2d 00 81       	push   $0x81002d6c
81002dde:	50                   	push   %eax
81002ddf:	e8 cd e0 ff ff       	call   81000eb1 <_fwalk_reent>
81002de4:	83 c4 10             	add    $0x10,%esp
81002de7:	eb 12                	jmp    81002dfb <fflush+0x37>
81002de9:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002dee:	83 ec 08             	sub    $0x8,%esp
81002df1:	52                   	push   %edx
81002df2:	50                   	push   %eax
81002df3:	e8 74 ff ff ff       	call   81002d6c <_fflush_r>
81002df8:	83 c4 10             	add    $0x10,%esp
81002dfb:	c9                   	leave  
81002dfc:	c3                   	ret    

81002dfd <_free_r>:
81002dfd:	55                   	push   %ebp
81002dfe:	89 e5                	mov    %esp,%ebp
81002e00:	53                   	push   %ebx
81002e01:	83 ec 34             	sub    $0x34,%esp
81002e04:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002e08:	0f 84 c4 03 00 00    	je     810031d2 <_free_r+0x3d5>
81002e0e:	83 ec 0c             	sub    $0xc,%esp
81002e11:	ff 75 08             	pushl  0x8(%ebp)
81002e14:	e8 bc ed ff ff       	call   81001bd5 <__malloc_lock>
81002e19:	83 c4 10             	add    $0x10,%esp
81002e1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e1f:	83 e8 08             	sub    $0x8,%eax
81002e22:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e28:	8b 40 04             	mov    0x4(%eax),%eax
81002e2b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e2e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e31:	83 e0 fe             	and    $0xfffffffe,%eax
81002e34:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e37:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e3d:	01 d0                	add    %edx,%eax
81002e3f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e42:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e45:	8b 40 04             	mov    0x4(%eax),%eax
81002e48:	83 e0 fc             	and    $0xfffffffc,%eax
81002e4b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e4e:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81002e53:	8b 40 08             	mov    0x8(%eax),%eax
81002e56:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002e59:	0f 85 94 00 00 00    	jne    81002ef3 <_free_r+0xf6>
81002e5f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e62:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e65:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e68:	83 e0 01             	and    $0x1,%eax
81002e6b:	85 c0                	test   %eax,%eax
81002e6d:	75 3a                	jne    81002ea9 <_free_r+0xac>
81002e6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e72:	8b 00                	mov    (%eax),%eax
81002e74:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e77:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e7a:	f7 d8                	neg    %eax
81002e7c:	01 45 f4             	add    %eax,-0xc(%ebp)
81002e7f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e82:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e88:	8b 40 0c             	mov    0xc(%eax),%eax
81002e8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e91:	8b 40 08             	mov    0x8(%eax),%eax
81002e94:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e97:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e9a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002e9d:	89 50 0c             	mov    %edx,0xc(%eax)
81002ea0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ea3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002ea6:	89 50 08             	mov    %edx,0x8(%eax)
81002ea9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eac:	83 c8 01             	or     $0x1,%eax
81002eaf:	89 c2                	mov    %eax,%edx
81002eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eb4:	89 50 04             	mov    %edx,0x4(%eax)
81002eb7:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81002ebc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ebf:	89 42 08             	mov    %eax,0x8(%edx)
81002ec2:	a1 c8 3f 00 81       	mov    0x81003fc8,%eax
81002ec7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002eca:	72 14                	jb     81002ee0 <_free_r+0xe3>
81002ecc:	a1 00 40 00 81       	mov    0x81004000,%eax
81002ed1:	83 ec 08             	sub    $0x8,%esp
81002ed4:	50                   	push   %eax
81002ed5:	ff 75 08             	pushl  0x8(%ebp)
81002ed8:	e8 fb 02 00 00       	call   810031d8 <_malloc_trim_r>
81002edd:	83 c4 10             	add    $0x10,%esp
81002ee0:	83 ec 0c             	sub    $0xc,%esp
81002ee3:	ff 75 08             	pushl  0x8(%ebp)
81002ee6:	e8 f0 ec ff ff       	call   81001bdb <__malloc_unlock>
81002eeb:	83 c4 10             	add    $0x10,%esp
81002eee:	e9 e0 02 00 00       	jmp    810031d3 <_free_r+0x3d6>
81002ef3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ef6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ef9:	89 50 04             	mov    %edx,0x4(%eax)
81002efc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002f03:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f06:	83 e0 01             	and    $0x1,%eax
81002f09:	85 c0                	test   %eax,%eax
81002f0b:	75 52                	jne    81002f5f <_free_r+0x162>
81002f0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f10:	8b 00                	mov    (%eax),%eax
81002f12:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002f15:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f18:	f7 d8                	neg    %eax
81002f1a:	01 45 f4             	add    %eax,-0xc(%ebp)
81002f1d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f20:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f23:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f26:	8b 40 08             	mov    0x8(%eax),%eax
81002f29:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002f2e:	39 d0                	cmp    %edx,%eax
81002f30:	75 09                	jne    81002f3b <_free_r+0x13e>
81002f32:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f39:	eb 24                	jmp    81002f5f <_free_r+0x162>
81002f3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f3e:	8b 40 0c             	mov    0xc(%eax),%eax
81002f41:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f47:	8b 40 08             	mov    0x8(%eax),%eax
81002f4a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f4d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f50:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f53:	89 50 0c             	mov    %edx,0xc(%eax)
81002f56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f59:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f5c:	89 50 08             	mov    %edx,0x8(%eax)
81002f5f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f62:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f65:	01 d0                	add    %edx,%eax
81002f67:	8b 40 04             	mov    0x4(%eax),%eax
81002f6a:	83 e0 01             	and    $0x1,%eax
81002f6d:	85 c0                	test   %eax,%eax
81002f6f:	75 75                	jne    81002fe6 <_free_r+0x1e9>
81002f71:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f74:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f77:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f7b:	75 45                	jne    81002fc2 <_free_r+0x1c5>
81002f7d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f80:	8b 40 08             	mov    0x8(%eax),%eax
81002f83:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002f88:	39 d0                	cmp    %edx,%eax
81002f8a:	75 36                	jne    81002fc2 <_free_r+0x1c5>
81002f8c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f93:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81002f98:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f9b:	89 50 0c             	mov    %edx,0xc(%eax)
81002f9e:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002fa3:	8b 40 0c             	mov    0xc(%eax),%eax
81002fa6:	89 42 08             	mov    %eax,0x8(%edx)
81002fa9:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002fae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb1:	89 50 0c             	mov    %edx,0xc(%eax)
81002fb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb7:	8b 50 0c             	mov    0xc(%eax),%edx
81002fba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fbd:	89 50 08             	mov    %edx,0x8(%eax)
81002fc0:	eb 24                	jmp    81002fe6 <_free_r+0x1e9>
81002fc2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fc5:	8b 40 0c             	mov    0xc(%eax),%eax
81002fc8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002fcb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fce:	8b 40 08             	mov    0x8(%eax),%eax
81002fd1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fd4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fd7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002fda:	89 50 0c             	mov    %edx,0xc(%eax)
81002fdd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fe0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002fe3:	89 50 08             	mov    %edx,0x8(%eax)
81002fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fe9:	83 c8 01             	or     $0x1,%eax
81002fec:	89 c2                	mov    %eax,%edx
81002fee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff1:	89 50 04             	mov    %edx,0x4(%eax)
81002ff4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ff7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ffa:	01 c2                	add    %eax,%edx
81002ffc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fff:	89 02                	mov    %eax,(%edx)
81003001:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003005:	0f 85 b7 01 00 00    	jne    810031c2 <_free_r+0x3c5>
8100300b:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003012:	77 7f                	ja     81003093 <_free_r+0x296>
81003014:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003017:	c1 e8 03             	shr    $0x3,%eax
8100301a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100301d:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81003022:	8b 58 04             	mov    0x4(%eax),%ebx
81003025:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003028:	8d 50 03             	lea    0x3(%eax),%edx
8100302b:	85 c0                	test   %eax,%eax
8100302d:	0f 48 c2             	cmovs  %edx,%eax
81003030:	c1 f8 02             	sar    $0x2,%eax
81003033:	ba 01 00 00 00       	mov    $0x1,%edx
81003038:	89 c1                	mov    %eax,%ecx
8100303a:	d3 e2                	shl    %cl,%edx
8100303c:	89 d0                	mov    %edx,%eax
8100303e:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81003043:	09 d8                	or     %ebx,%eax
81003045:	89 42 04             	mov    %eax,0x4(%edx)
81003048:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100304b:	83 c0 01             	add    $0x1,%eax
8100304e:	01 c0                	add    %eax,%eax
81003050:	c1 e0 02             	shl    $0x2,%eax
81003053:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81003058:	83 e8 08             	sub    $0x8,%eax
8100305b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100305e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003061:	8b 40 08             	mov    0x8(%eax),%eax
81003064:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003067:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100306a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100306d:	89 50 0c             	mov    %edx,0xc(%eax)
81003070:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003073:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003076:	89 50 08             	mov    %edx,0x8(%eax)
81003079:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100307c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100307f:	89 50 08             	mov    %edx,0x8(%eax)
81003082:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003085:	8b 50 08             	mov    0x8(%eax),%edx
81003088:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100308b:	89 50 0c             	mov    %edx,0xc(%eax)
8100308e:	e9 2f 01 00 00       	jmp    810031c2 <_free_r+0x3c5>
81003093:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003096:	c1 e8 09             	shr    $0x9,%eax
81003099:	85 c0                	test   %eax,%eax
8100309b:	75 08                	jne    810030a5 <_free_r+0x2a8>
8100309d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a0:	c1 e8 03             	shr    $0x3,%eax
810030a3:	eb 77                	jmp    8100311c <_free_r+0x31f>
810030a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a8:	c1 e8 09             	shr    $0x9,%eax
810030ab:	83 f8 04             	cmp    $0x4,%eax
810030ae:	77 0b                	ja     810030bb <_free_r+0x2be>
810030b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030b3:	c1 e8 06             	shr    $0x6,%eax
810030b6:	83 c0 38             	add    $0x38,%eax
810030b9:	eb 61                	jmp    8100311c <_free_r+0x31f>
810030bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030be:	c1 e8 09             	shr    $0x9,%eax
810030c1:	83 f8 14             	cmp    $0x14,%eax
810030c4:	77 0b                	ja     810030d1 <_free_r+0x2d4>
810030c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030c9:	c1 e8 09             	shr    $0x9,%eax
810030cc:	83 c0 5b             	add    $0x5b,%eax
810030cf:	eb 4b                	jmp    8100311c <_free_r+0x31f>
810030d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030d4:	c1 e8 09             	shr    $0x9,%eax
810030d7:	83 f8 54             	cmp    $0x54,%eax
810030da:	77 0b                	ja     810030e7 <_free_r+0x2ea>
810030dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030df:	c1 e8 0c             	shr    $0xc,%eax
810030e2:	83 c0 6e             	add    $0x6e,%eax
810030e5:	eb 35                	jmp    8100311c <_free_r+0x31f>
810030e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030ea:	c1 e8 09             	shr    $0x9,%eax
810030ed:	3d 54 01 00 00       	cmp    $0x154,%eax
810030f2:	77 0b                	ja     810030ff <_free_r+0x302>
810030f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030f7:	c1 e8 0f             	shr    $0xf,%eax
810030fa:	83 c0 77             	add    $0x77,%eax
810030fd:	eb 1d                	jmp    8100311c <_free_r+0x31f>
810030ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003102:	c1 e8 09             	shr    $0x9,%eax
81003105:	3d 54 05 00 00       	cmp    $0x554,%eax
8100310a:	77 0b                	ja     81003117 <_free_r+0x31a>
8100310c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100310f:	c1 e8 12             	shr    $0x12,%eax
81003112:	83 c0 7c             	add    $0x7c,%eax
81003115:	eb 05                	jmp    8100311c <_free_r+0x31f>
81003117:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100311c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100311f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003122:	83 c0 01             	add    $0x1,%eax
81003125:	01 c0                	add    %eax,%eax
81003127:	c1 e0 02             	shl    $0x2,%eax
8100312a:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100312f:	83 e8 08             	sub    $0x8,%eax
81003132:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003135:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003138:	8b 40 08             	mov    0x8(%eax),%eax
8100313b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100313e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003141:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003144:	75 36                	jne    8100317c <_free_r+0x37f>
81003146:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100314b:	8b 58 04             	mov    0x4(%eax),%ebx
8100314e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003151:	8d 50 03             	lea    0x3(%eax),%edx
81003154:	85 c0                	test   %eax,%eax
81003156:	0f 48 c2             	cmovs  %edx,%eax
81003159:	c1 f8 02             	sar    $0x2,%eax
8100315c:	ba 01 00 00 00       	mov    $0x1,%edx
81003161:	89 c1                	mov    %eax,%ecx
81003163:	d3 e2                	shl    %cl,%edx
81003165:	89 d0                	mov    %edx,%eax
81003167:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100316c:	09 d8                	or     %ebx,%eax
8100316e:	89 42 04             	mov    %eax,0x4(%edx)
81003171:	eb 28                	jmp    8100319b <_free_r+0x39e>
81003173:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003176:	8b 40 08             	mov    0x8(%eax),%eax
81003179:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100317c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100317f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003182:	74 0e                	je     81003192 <_free_r+0x395>
81003184:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003187:	8b 40 04             	mov    0x4(%eax),%eax
8100318a:	83 e0 fc             	and    $0xfffffffc,%eax
8100318d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003190:	72 e1                	jb     81003173 <_free_r+0x376>
81003192:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003195:	8b 40 0c             	mov    0xc(%eax),%eax
81003198:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100319b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100319e:	8b 55 ec             	mov    -0x14(%ebp),%edx
810031a1:	89 50 0c             	mov    %edx,0xc(%eax)
810031a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031a7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810031aa:	89 50 08             	mov    %edx,0x8(%eax)
810031ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810031b3:	89 50 08             	mov    %edx,0x8(%eax)
810031b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031b9:	8b 50 08             	mov    0x8(%eax),%edx
810031bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031bf:	89 50 0c             	mov    %edx,0xc(%eax)
810031c2:	83 ec 0c             	sub    $0xc,%esp
810031c5:	ff 75 08             	pushl  0x8(%ebp)
810031c8:	e8 0e ea ff ff       	call   81001bdb <__malloc_unlock>
810031cd:	83 c4 10             	add    $0x10,%esp
810031d0:	eb 01                	jmp    810031d3 <_free_r+0x3d6>
810031d2:	90                   	nop
810031d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810031d6:	c9                   	leave  
810031d7:	c3                   	ret    

810031d8 <_malloc_trim_r>:
810031d8:	55                   	push   %ebp
810031d9:	89 e5                	mov    %esp,%ebp
810031db:	83 ec 28             	sub    $0x28,%esp
810031de:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810031e5:	83 ec 0c             	sub    $0xc,%esp
810031e8:	ff 75 08             	pushl  0x8(%ebp)
810031eb:	e8 e5 e9 ff ff       	call   81001bd5 <__malloc_lock>
810031f0:	83 c4 10             	add    $0x10,%esp
810031f3:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810031f8:	8b 40 08             	mov    0x8(%eax),%eax
810031fb:	8b 40 04             	mov    0x4(%eax),%eax
810031fe:	83 e0 fc             	and    $0xfffffffc,%eax
81003201:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003204:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003207:	2b 45 0c             	sub    0xc(%ebp),%eax
8100320a:	89 c2                	mov    %eax,%edx
8100320c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100320f:	01 d0                	add    %edx,%eax
81003211:	83 e8 11             	sub    $0x11,%eax
81003214:	ba 00 00 00 00       	mov    $0x0,%edx
81003219:	f7 75 f4             	divl   -0xc(%ebp)
8100321c:	83 e8 01             	sub    $0x1,%eax
8100321f:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003223:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003226:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003229:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100322c:	7d 18                	jge    81003246 <_malloc_trim_r+0x6e>
8100322e:	83 ec 0c             	sub    $0xc,%esp
81003231:	ff 75 08             	pushl  0x8(%ebp)
81003234:	e8 a2 e9 ff ff       	call   81001bdb <__malloc_unlock>
81003239:	83 c4 10             	add    $0x10,%esp
8100323c:	b8 00 00 00 00       	mov    $0x0,%eax
81003241:	e9 f1 00 00 00       	jmp    81003337 <_malloc_trim_r+0x15f>
81003246:	83 ec 08             	sub    $0x8,%esp
81003249:	6a 00                	push   $0x0
8100324b:	ff 75 08             	pushl  0x8(%ebp)
8100324e:	e8 96 f4 ff ff       	call   810026e9 <_sbrk_r>
81003253:	83 c4 10             	add    $0x10,%esp
81003256:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003259:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100325e:	8b 50 08             	mov    0x8(%eax),%edx
81003261:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003264:	01 d0                	add    %edx,%eax
81003266:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003269:	74 18                	je     81003283 <_malloc_trim_r+0xab>
8100326b:	83 ec 0c             	sub    $0xc,%esp
8100326e:	ff 75 08             	pushl  0x8(%ebp)
81003271:	e8 65 e9 ff ff       	call   81001bdb <__malloc_unlock>
81003276:	83 c4 10             	add    $0x10,%esp
81003279:	b8 00 00 00 00       	mov    $0x0,%eax
8100327e:	e9 b4 00 00 00       	jmp    81003337 <_malloc_trim_r+0x15f>
81003283:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003286:	f7 d8                	neg    %eax
81003288:	83 ec 08             	sub    $0x8,%esp
8100328b:	50                   	push   %eax
8100328c:	ff 75 08             	pushl  0x8(%ebp)
8100328f:	e8 55 f4 ff ff       	call   810026e9 <_sbrk_r>
81003294:	83 c4 10             	add    $0x10,%esp
81003297:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100329a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100329e:	75 61                	jne    81003301 <_malloc_trim_r+0x129>
810032a0:	83 ec 08             	sub    $0x8,%esp
810032a3:	6a 00                	push   $0x0
810032a5:	ff 75 08             	pushl  0x8(%ebp)
810032a8:	e8 3c f4 ff ff       	call   810026e9 <_sbrk_r>
810032ad:	83 c4 10             	add    $0x10,%esp
810032b0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032b3:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810032b8:	8b 50 08             	mov    0x8(%eax),%edx
810032bb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032be:	29 d0                	sub    %edx,%eax
810032c0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032c3:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810032c7:	7e 23                	jle    810032ec <_malloc_trim_r+0x114>
810032c9:	8b 15 cc 3f 00 81    	mov    0x81003fcc,%edx
810032cf:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032d2:	29 d0                	sub    %edx,%eax
810032d4:	a3 20 40 00 81       	mov    %eax,0x81004020
810032d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032dc:	83 c8 01             	or     $0x1,%eax
810032df:	89 c2                	mov    %eax,%edx
810032e1:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810032e6:	8b 40 08             	mov    0x8(%eax),%eax
810032e9:	89 50 04             	mov    %edx,0x4(%eax)
810032ec:	83 ec 0c             	sub    $0xc,%esp
810032ef:	ff 75 08             	pushl  0x8(%ebp)
810032f2:	e8 e4 e8 ff ff       	call   81001bdb <__malloc_unlock>
810032f7:	83 c4 10             	add    $0x10,%esp
810032fa:	b8 00 00 00 00       	mov    $0x0,%eax
810032ff:	eb 36                	jmp    81003337 <_malloc_trim_r+0x15f>
81003301:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003304:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003307:	83 c8 01             	or     $0x1,%eax
8100330a:	89 c2                	mov    %eax,%edx
8100330c:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81003311:	8b 40 08             	mov    0x8(%eax),%eax
81003314:	89 50 04             	mov    %edx,0x4(%eax)
81003317:	a1 20 40 00 81       	mov    0x81004020,%eax
8100331c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100331f:	a3 20 40 00 81       	mov    %eax,0x81004020
81003324:	83 ec 0c             	sub    $0xc,%esp
81003327:	ff 75 08             	pushl  0x8(%ebp)
8100332a:	e8 ac e8 ff ff       	call   81001bdb <__malloc_unlock>
8100332f:	83 c4 10             	add    $0x10,%esp
81003332:	b8 01 00 00 00       	mov    $0x1,%eax
81003337:	c9                   	leave  
81003338:	c3                   	ret    

81003339 <_lseek_r>:
81003339:	55                   	push   %ebp
8100333a:	89 e5                	mov    %esp,%ebp
8100333c:	83 ec 18             	sub    $0x18,%esp
8100333f:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
81003346:	00 00 00 
81003349:	83 ec 04             	sub    $0x4,%esp
8100334c:	ff 75 14             	pushl  0x14(%ebp)
8100334f:	ff 75 10             	pushl  0x10(%ebp)
81003352:	ff 75 0c             	pushl  0xc(%ebp)
81003355:	e8 ff ce ff ff       	call   81000259 <lseek>
8100335a:	83 c4 10             	add    $0x10,%esp
8100335d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003360:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003364:	75 14                	jne    8100337a <_lseek_r+0x41>
81003366:	a1 4c 40 00 81       	mov    0x8100404c,%eax
8100336b:	85 c0                	test   %eax,%eax
8100336d:	74 0b                	je     8100337a <_lseek_r+0x41>
8100336f:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
81003375:	8b 45 08             	mov    0x8(%ebp),%eax
81003378:	89 10                	mov    %edx,(%eax)
8100337a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100337d:	c9                   	leave  
8100337e:	c3                   	ret    

8100337f <__smakebuf_r>:
8100337f:	55                   	push   %ebp
81003380:	89 e5                	mov    %esp,%ebp
81003382:	56                   	push   %esi
81003383:	53                   	push   %ebx
81003384:	83 ec 10             	sub    $0x10,%esp
81003387:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100338a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100338e:	98                   	cwtl   
8100338f:	83 e0 02             	and    $0x2,%eax
81003392:	85 c0                	test   %eax,%eax
81003394:	74 16                	je     810033ac <__smakebuf_r+0x2d>
81003396:	8d 43 43             	lea    0x43(%ebx),%eax
81003399:	89 03                	mov    %eax,(%ebx)
8100339b:	8b 03                	mov    (%ebx),%eax
8100339d:	89 43 10             	mov    %eax,0x10(%ebx)
810033a0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810033a7:	e9 b9 00 00 00       	jmp    81003465 <__smakebuf_r+0xe6>
810033ac:	8d 45 ec             	lea    -0x14(%ebp),%eax
810033af:	50                   	push   %eax
810033b0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810033b3:	50                   	push   %eax
810033b4:	53                   	push   %ebx
810033b5:	ff 75 08             	pushl  0x8(%ebp)
810033b8:	e8 af 00 00 00       	call   8100346c <__swhatbuf_r>
810033bd:	83 c4 10             	add    $0x10,%esp
810033c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033c6:	83 ec 08             	sub    $0x8,%esp
810033c9:	50                   	push   %eax
810033ca:	ff 75 08             	pushl  0x8(%ebp)
810033cd:	e8 dd dd ff ff       	call   810011af <_malloc_r>
810033d2:	83 c4 10             	add    $0x10,%esp
810033d5:	89 c6                	mov    %eax,%esi
810033d7:	85 f6                	test   %esi,%esi
810033d9:	75 2f                	jne    8100340a <__smakebuf_r+0x8b>
810033db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033df:	98                   	cwtl   
810033e0:	25 00 02 00 00       	and    $0x200,%eax
810033e5:	85 c0                	test   %eax,%eax
810033e7:	75 7c                	jne    81003465 <__smakebuf_r+0xe6>
810033e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033ed:	83 e0 fc             	and    $0xfffffffc,%eax
810033f0:	83 c8 02             	or     $0x2,%eax
810033f3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033f7:	8d 43 43             	lea    0x43(%ebx),%eax
810033fa:	89 03                	mov    %eax,(%ebx)
810033fc:	8b 03                	mov    (%ebx),%eax
810033fe:	89 43 10             	mov    %eax,0x10(%ebx)
81003401:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003408:	eb 5b                	jmp    81003465 <__smakebuf_r+0xe6>
8100340a:	8b 45 08             	mov    0x8(%ebp),%eax
8100340d:	c7 40 3c 63 08 00 81 	movl   $0x81000863,0x3c(%eax)
81003414:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003418:	0c 80                	or     $0x80,%al
8100341a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100341e:	89 33                	mov    %esi,(%ebx)
81003420:	8b 03                	mov    (%ebx),%eax
81003422:	89 43 10             	mov    %eax,0x10(%ebx)
81003425:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003428:	89 43 14             	mov    %eax,0x14(%ebx)
8100342b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100342e:	85 c0                	test   %eax,%eax
81003430:	74 26                	je     81003458 <__smakebuf_r+0xd9>
81003432:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003436:	98                   	cwtl   
81003437:	83 ec 08             	sub    $0x8,%esp
8100343a:	50                   	push   %eax
8100343b:	ff 75 08             	pushl  0x8(%ebp)
8100343e:	e8 dc 02 00 00       	call   8100371f <_isatty_r>
81003443:	83 c4 10             	add    $0x10,%esp
81003446:	85 c0                	test   %eax,%eax
81003448:	74 0e                	je     81003458 <__smakebuf_r+0xd9>
8100344a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100344e:	83 e0 fc             	and    $0xfffffffc,%eax
81003451:	83 c8 01             	or     $0x1,%eax
81003454:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003458:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100345c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100345f:	09 d0                	or     %edx,%eax
81003461:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003465:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003468:	5b                   	pop    %ebx
81003469:	5e                   	pop    %esi
8100346a:	5d                   	pop    %ebp
8100346b:	c3                   	ret    

8100346c <__swhatbuf_r>:
8100346c:	55                   	push   %ebp
8100346d:	89 e5                	mov    %esp,%ebp
8100346f:	83 ec 58             	sub    $0x58,%esp
81003472:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003479:	8b 45 0c             	mov    0xc(%ebp),%eax
8100347c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003480:	66 85 c0             	test   %ax,%ax
81003483:	78 1f                	js     810034a4 <__swhatbuf_r+0x38>
81003485:	8b 45 0c             	mov    0xc(%ebp),%eax
81003488:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100348c:	98                   	cwtl   
8100348d:	83 ec 04             	sub    $0x4,%esp
81003490:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003493:	52                   	push   %edx
81003494:	50                   	push   %eax
81003495:	ff 75 08             	pushl  0x8(%ebp)
81003498:	e8 3f 02 00 00       	call   810036dc <_fstat_r>
8100349d:	83 c4 10             	add    $0x10,%esp
810034a0:	85 c0                	test   %eax,%eax
810034a2:	79 35                	jns    810034d9 <__swhatbuf_r+0x6d>
810034a4:	8b 45 14             	mov    0x14(%ebp),%eax
810034a7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810034ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810034b0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810034b4:	98                   	cwtl   
810034b5:	25 80 00 00 00       	and    $0x80,%eax
810034ba:	85 c0                	test   %eax,%eax
810034bc:	74 0b                	je     810034c9 <__swhatbuf_r+0x5d>
810034be:	8b 45 10             	mov    0x10(%ebp),%eax
810034c1:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810034c7:	eb 09                	jmp    810034d2 <__swhatbuf_r+0x66>
810034c9:	8b 45 10             	mov    0x10(%ebp),%eax
810034cc:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034d2:	b8 00 00 00 00       	mov    $0x0,%eax
810034d7:	eb 24                	jmp    810034fd <__swhatbuf_r+0x91>
810034d9:	8b 45 b0             	mov    -0x50(%ebp),%eax
810034dc:	25 00 f0 00 00       	and    $0xf000,%eax
810034e1:	3d 00 20 00 00       	cmp    $0x2000,%eax
810034e6:	0f 94 c0             	sete   %al
810034e9:	0f b6 d0             	movzbl %al,%edx
810034ec:	8b 45 14             	mov    0x14(%ebp),%eax
810034ef:	89 10                	mov    %edx,(%eax)
810034f1:	8b 45 10             	mov    0x10(%ebp),%eax
810034f4:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034fd:	c9                   	leave  
810034fe:	c3                   	ret    

810034ff <_read_r>:
810034ff:	55                   	push   %ebp
81003500:	89 e5                	mov    %esp,%ebp
81003502:	83 ec 18             	sub    $0x18,%esp
81003505:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
8100350c:	00 00 00 
8100350f:	83 ec 04             	sub    $0x4,%esp
81003512:	ff 75 14             	pushl  0x14(%ebp)
81003515:	ff 75 10             	pushl  0x10(%ebp)
81003518:	ff 75 0c             	pushl  0xc(%ebp)
8100351b:	e8 be cc ff ff       	call   810001de <read>
81003520:	83 c4 10             	add    $0x10,%esp
81003523:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003526:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100352a:	75 14                	jne    81003540 <_read_r+0x41>
8100352c:	a1 4c 40 00 81       	mov    0x8100404c,%eax
81003531:	85 c0                	test   %eax,%eax
81003533:	74 0b                	je     81003540 <_read_r+0x41>
81003535:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
8100353b:	8b 45 08             	mov    0x8(%ebp),%eax
8100353e:	89 10                	mov    %edx,(%eax)
81003540:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003543:	c9                   	leave  
81003544:	c3                   	ret    

81003545 <cleanup_glue>:
81003545:	55                   	push   %ebp
81003546:	89 e5                	mov    %esp,%ebp
81003548:	83 ec 08             	sub    $0x8,%esp
8100354b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100354e:	8b 00                	mov    (%eax),%eax
81003550:	85 c0                	test   %eax,%eax
81003552:	74 14                	je     81003568 <cleanup_glue+0x23>
81003554:	8b 45 0c             	mov    0xc(%ebp),%eax
81003557:	8b 00                	mov    (%eax),%eax
81003559:	83 ec 08             	sub    $0x8,%esp
8100355c:	50                   	push   %eax
8100355d:	ff 75 08             	pushl  0x8(%ebp)
81003560:	e8 e0 ff ff ff       	call   81003545 <cleanup_glue>
81003565:	83 c4 10             	add    $0x10,%esp
81003568:	83 ec 08             	sub    $0x8,%esp
8100356b:	ff 75 0c             	pushl  0xc(%ebp)
8100356e:	ff 75 08             	pushl  0x8(%ebp)
81003571:	e8 87 f8 ff ff       	call   81002dfd <_free_r>
81003576:	83 c4 10             	add    $0x10,%esp
81003579:	90                   	nop
8100357a:	c9                   	leave  
8100357b:	c3                   	ret    

8100357c <_reclaim_reent>:
8100357c:	55                   	push   %ebp
8100357d:	89 e5                	mov    %esp,%ebp
8100357f:	83 ec 28             	sub    $0x28,%esp
81003582:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81003587:	39 45 08             	cmp    %eax,0x8(%ebp)
8100358a:	0f 84 49 01 00 00    	je     810036d9 <_reclaim_reent+0x15d>
81003590:	8b 45 08             	mov    0x8(%ebp),%eax
81003593:	8b 40 4c             	mov    0x4c(%eax),%eax
81003596:	85 c0                	test   %eax,%eax
81003598:	74 64                	je     810035fe <_reclaim_reent+0x82>
8100359a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810035a1:	eb 3e                	jmp    810035e1 <_reclaim_reent+0x65>
810035a3:	8b 45 08             	mov    0x8(%ebp),%eax
810035a6:	8b 50 4c             	mov    0x4c(%eax),%edx
810035a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ac:	c1 e0 02             	shl    $0x2,%eax
810035af:	01 d0                	add    %edx,%eax
810035b1:	8b 00                	mov    (%eax),%eax
810035b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035b6:	eb 1f                	jmp    810035d7 <_reclaim_reent+0x5b>
810035b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035bb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810035be:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035c1:	8b 00                	mov    (%eax),%eax
810035c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035c6:	83 ec 08             	sub    $0x8,%esp
810035c9:	ff 75 e8             	pushl  -0x18(%ebp)
810035cc:	ff 75 08             	pushl  0x8(%ebp)
810035cf:	e8 29 f8 ff ff       	call   81002dfd <_free_r>
810035d4:	83 c4 10             	add    $0x10,%esp
810035d7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810035db:	75 db                	jne    810035b8 <_reclaim_reent+0x3c>
810035dd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810035e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035e4:	83 f8 1f             	cmp    $0x1f,%eax
810035e7:	76 ba                	jbe    810035a3 <_reclaim_reent+0x27>
810035e9:	8b 45 08             	mov    0x8(%ebp),%eax
810035ec:	8b 40 4c             	mov    0x4c(%eax),%eax
810035ef:	83 ec 08             	sub    $0x8,%esp
810035f2:	50                   	push   %eax
810035f3:	ff 75 08             	pushl  0x8(%ebp)
810035f6:	e8 02 f8 ff ff       	call   81002dfd <_free_r>
810035fb:	83 c4 10             	add    $0x10,%esp
810035fe:	8b 45 08             	mov    0x8(%ebp),%eax
81003601:	8b 40 40             	mov    0x40(%eax),%eax
81003604:	85 c0                	test   %eax,%eax
81003606:	74 15                	je     8100361d <_reclaim_reent+0xa1>
81003608:	8b 45 08             	mov    0x8(%ebp),%eax
8100360b:	8b 40 40             	mov    0x40(%eax),%eax
8100360e:	83 ec 08             	sub    $0x8,%esp
81003611:	50                   	push   %eax
81003612:	ff 75 08             	pushl  0x8(%ebp)
81003615:	e8 e3 f7 ff ff       	call   81002dfd <_free_r>
8100361a:	83 c4 10             	add    $0x10,%esp
8100361d:	8b 45 08             	mov    0x8(%ebp),%eax
81003620:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003626:	85 c0                	test   %eax,%eax
81003628:	74 50                	je     8100367a <_reclaim_reent+0xfe>
8100362a:	8b 45 08             	mov    0x8(%ebp),%eax
8100362d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003633:	8b 55 08             	mov    0x8(%ebp),%edx
81003636:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100363c:	39 d0                	cmp    %edx,%eax
8100363e:	74 3a                	je     8100367a <_reclaim_reent+0xfe>
81003640:	8b 45 08             	mov    0x8(%ebp),%eax
81003643:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003649:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100364c:	eb 1f                	jmp    8100366d <_reclaim_reent+0xf1>
8100364e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003651:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003654:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003657:	8b 00                	mov    (%eax),%eax
81003659:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100365c:	83 ec 08             	sub    $0x8,%esp
8100365f:	ff 75 e4             	pushl  -0x1c(%ebp)
81003662:	ff 75 08             	pushl  0x8(%ebp)
81003665:	e8 93 f7 ff ff       	call   81002dfd <_free_r>
8100366a:	83 c4 10             	add    $0x10,%esp
8100366d:	8b 45 08             	mov    0x8(%ebp),%eax
81003670:	05 4c 01 00 00       	add    $0x14c,%eax
81003675:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003678:	75 d4                	jne    8100364e <_reclaim_reent+0xd2>
8100367a:	8b 45 08             	mov    0x8(%ebp),%eax
8100367d:	8b 40 54             	mov    0x54(%eax),%eax
81003680:	85 c0                	test   %eax,%eax
81003682:	74 15                	je     81003699 <_reclaim_reent+0x11d>
81003684:	8b 45 08             	mov    0x8(%ebp),%eax
81003687:	8b 40 54             	mov    0x54(%eax),%eax
8100368a:	83 ec 08             	sub    $0x8,%esp
8100368d:	50                   	push   %eax
8100368e:	ff 75 08             	pushl  0x8(%ebp)
81003691:	e8 67 f7 ff ff       	call   81002dfd <_free_r>
81003696:	83 c4 10             	add    $0x10,%esp
81003699:	8b 45 08             	mov    0x8(%ebp),%eax
8100369c:	8b 40 38             	mov    0x38(%eax),%eax
8100369f:	85 c0                	test   %eax,%eax
810036a1:	74 36                	je     810036d9 <_reclaim_reent+0x15d>
810036a3:	8b 45 08             	mov    0x8(%ebp),%eax
810036a6:	8b 40 3c             	mov    0x3c(%eax),%eax
810036a9:	83 ec 0c             	sub    $0xc,%esp
810036ac:	ff 75 08             	pushl  0x8(%ebp)
810036af:	ff d0                	call   *%eax
810036b1:	83 c4 10             	add    $0x10,%esp
810036b4:	8b 45 08             	mov    0x8(%ebp),%eax
810036b7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036bd:	85 c0                	test   %eax,%eax
810036bf:	74 18                	je     810036d9 <_reclaim_reent+0x15d>
810036c1:	8b 45 08             	mov    0x8(%ebp),%eax
810036c4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036ca:	83 ec 08             	sub    $0x8,%esp
810036cd:	50                   	push   %eax
810036ce:	ff 75 08             	pushl  0x8(%ebp)
810036d1:	e8 6f fe ff ff       	call   81003545 <cleanup_glue>
810036d6:	83 c4 10             	add    $0x10,%esp
810036d9:	90                   	nop
810036da:	c9                   	leave  
810036db:	c3                   	ret    

810036dc <_fstat_r>:
810036dc:	55                   	push   %ebp
810036dd:	89 e5                	mov    %esp,%ebp
810036df:	83 ec 18             	sub    $0x18,%esp
810036e2:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
810036e9:	00 00 00 
810036ec:	83 ec 08             	sub    $0x8,%esp
810036ef:	ff 75 10             	pushl  0x10(%ebp)
810036f2:	ff 75 0c             	pushl  0xc(%ebp)
810036f5:	e8 ad cb ff ff       	call   810002a7 <fstat>
810036fa:	83 c4 10             	add    $0x10,%esp
810036fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003700:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003704:	75 14                	jne    8100371a <_fstat_r+0x3e>
81003706:	a1 4c 40 00 81       	mov    0x8100404c,%eax
8100370b:	85 c0                	test   %eax,%eax
8100370d:	74 0b                	je     8100371a <_fstat_r+0x3e>
8100370f:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
81003715:	8b 45 08             	mov    0x8(%ebp),%eax
81003718:	89 10                	mov    %edx,(%eax)
8100371a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100371d:	c9                   	leave  
8100371e:	c3                   	ret    

8100371f <_isatty_r>:
8100371f:	55                   	push   %ebp
81003720:	89 e5                	mov    %esp,%ebp
81003722:	83 ec 18             	sub    $0x18,%esp
81003725:	c7 05 4c 40 00 81 00 	movl   $0x0,0x8100404c
8100372c:	00 00 00 
8100372f:	83 ec 0c             	sub    $0xc,%esp
81003732:	ff 75 0c             	pushl  0xc(%ebp)
81003735:	e8 4c cb ff ff       	call   81000286 <isatty>
8100373a:	83 c4 10             	add    $0x10,%esp
8100373d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003740:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003744:	75 14                	jne    8100375a <_isatty_r+0x3b>
81003746:	a1 4c 40 00 81       	mov    0x8100404c,%eax
8100374b:	85 c0                	test   %eax,%eax
8100374d:	74 0b                	je     8100375a <_isatty_r+0x3b>
8100374f:	8b 15 4c 40 00 81    	mov    0x8100404c,%edx
81003755:	8b 45 08             	mov    0x8(%ebp),%eax
81003758:	89 10                	mov    %edx,(%eax)
8100375a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100375d:	c9                   	leave  
8100375e:	c3                   	ret    
=======
81000223:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0=ms;
8100022a:	8b 45 08             	mov    0x8(%ebp),%eax
8100022d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000230:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000233:	50                   	push   %eax
81000234:	e8 92 ff ff ff       	call   810001cb <sys_call>
81000239:	83 c4 04             	add    $0x4,%esp
8100023c:	eb 01                	jmp    8100023f <msleep+0x28>
        return;
8100023e:	90                   	nop
}
8100023f:	c9                   	leave  
81000240:	c3                   	ret    

81000241 <getpid>:

int getpid(void){
81000241:	55                   	push   %ebp
81000242:	89 e5                	mov    %esp,%ebp
81000244:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_GETPID;
81000247:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
8100024e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000251:	50                   	push   %eax
81000252:	e8 74 ff ff ff       	call   810001cb <sys_call>
81000257:	83 c4 04             	add    $0x4,%esp
}
8100025a:	c9                   	leave  
8100025b:	c3                   	ret    

8100025c <print_msg>:

void print_msg(const char* fmt,int arg){
8100025c:	55                   	push   %ebp
8100025d:	89 e5                	mov    %esp,%ebp
8100025f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_PRINT_MSG;
81000262:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0=(uint32_t)fmt;
81000269:	8b 45 08             	mov    0x8(%ebp),%eax
8100026c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=arg;
8100026f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000272:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000275:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000278:	50                   	push   %eax
81000279:	e8 4d ff ff ff       	call   810001cb <sys_call>
8100027e:	83 c4 04             	add    $0x4,%esp
}
81000281:	90                   	nop
81000282:	c9                   	leave  
81000283:	c3                   	ret    

81000284 <fork>:

int fork(void){
81000284:	55                   	push   %ebp
81000285:	89 e5                	mov    %esp,%ebp
81000287:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FORK;
8100028a:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000291:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000294:	50                   	push   %eax
81000295:	e8 31 ff ff ff       	call   810001cb <sys_call>
8100029a:	83 c4 04             	add    $0x4,%esp
}
8100029d:	c9                   	leave  
8100029e:	c3                   	ret    

8100029f <execve>:

int execve(const char* name,char* const* argv,char* const* env){
8100029f:	55                   	push   %ebp
810002a0:	89 e5                	mov    %esp,%ebp
810002a2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXECVE;
810002a5:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0=(int)name;
810002ac:	8b 45 08             	mov    0x8(%ebp),%eax
810002af:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)argv;
810002b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810002b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)env;
810002b8:	8b 45 10             	mov    0x10(%ebp),%eax
810002bb:	89 45 f8             	mov    %eax,-0x8(%ebp)

    sys_call(&args);
810002be:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c1:	50                   	push   %eax
810002c2:	e8 04 ff ff ff       	call   810001cb <sys_call>
810002c7:	83 c4 04             	add    $0x4,%esp
}
810002ca:	90                   	nop
810002cb:	c9                   	leave  
810002cc:	c3                   	ret    

810002cd <yield>:

int yield(void){
810002cd:	55                   	push   %ebp
810002ce:	89 e5                	mov    %esp,%ebp
810002d0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_YIELD;
810002d3:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810002da:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002dd:	50                   	push   %eax
810002de:	e8 e8 fe ff ff       	call   810001cb <sys_call>
810002e3:	83 c4 04             	add    $0x4,%esp
}
810002e6:	c9                   	leave  
810002e7:	c3                   	ret    

810002e8 <open>:

int open(const char*name,int flags, ...){
810002e8:	55                   	push   %ebp
810002e9:	89 e5                	mov    %esp,%ebp
810002eb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_OPEN;
810002ee:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0=(int)name;
810002f5:	8b 45 08             	mov    0x8(%ebp),%eax
810002f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)flags;
810002fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810002fe:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000301:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000304:	50                   	push   %eax
81000305:	e8 c1 fe ff ff       	call   810001cb <sys_call>
8100030a:	83 c4 04             	add    $0x4,%esp
}
8100030d:	c9                   	leave  
8100030e:	c3                   	ret    

8100030f <read>:

int read(int file,char* ptr,int len){
8100030f:	55                   	push   %ebp
81000310:	89 e5                	mov    %esp,%ebp
81000312:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_READ;
81000315:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0=(int)file;
8100031c:	8b 45 08             	mov    0x8(%ebp),%eax
8100031f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000322:	8b 45 0c             	mov    0xc(%ebp),%eax
81000325:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000328:	8b 45 10             	mov    0x10(%ebp),%eax
8100032b:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100032e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000331:	50                   	push   %eax
81000332:	e8 94 fe ff ff       	call   810001cb <sys_call>
81000337:	83 c4 04             	add    $0x4,%esp
}
8100033a:	c9                   	leave  
8100033b:	c3                   	ret    

8100033c <write>:

int write(int file,char*ptr,int len){
8100033c:	55                   	push   %ebp
8100033d:	89 e5                	mov    %esp,%ebp
8100033f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WRITE;
81000342:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0=(int)file;
81000349:	8b 45 08             	mov    0x8(%ebp),%eax
8100034c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
8100034f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000352:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000355:	8b 45 10             	mov    0x10(%ebp),%eax
81000358:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100035b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100035e:	50                   	push   %eax
8100035f:	e8 67 fe ff ff       	call   810001cb <sys_call>
81000364:	83 c4 04             	add    $0x4,%esp
}
81000367:	c9                   	leave  
81000368:	c3                   	ret    

81000369 <close>:

int close(int file){
81000369:	55                   	push   %ebp
8100036a:	89 e5                	mov    %esp,%ebp
8100036c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_CLOSE;
8100036f:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0=(int)file;
81000376:	8b 45 08             	mov    0x8(%ebp),%eax
81000379:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100037c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100037f:	50                   	push   %eax
81000380:	e8 46 fe ff ff       	call   810001cb <sys_call>
81000385:	83 c4 04             	add    $0x4,%esp
}
81000388:	c9                   	leave  
81000389:	c3                   	ret    

8100038a <lseek>:

int lseek(int file,int ptr,int dir){
8100038a:	55                   	push   %ebp
8100038b:	89 e5                	mov    %esp,%ebp
8100038d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_LSEEK;
81000390:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0=(int)file;
81000397:	8b 45 08             	mov    0x8(%ebp),%eax
8100039a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
8100039d:	8b 45 0c             	mov    0xc(%ebp),%eax
810003a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)dir;
810003a3:	8b 45 10             	mov    0x10(%ebp),%eax
810003a6:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810003a9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003ac:	50                   	push   %eax
810003ad:	e8 19 fe ff ff       	call   810001cb <sys_call>
810003b2:	83 c4 04             	add    $0x4,%esp
}
810003b5:	c9                   	leave  
810003b6:	c3                   	ret    

810003b7 <isatty>:

int isatty(int file){
810003b7:	55                   	push   %ebp
810003b8:	89 e5                	mov    %esp,%ebp
810003ba:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_ISATTY;
810003bd:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0=(int)file;
810003c4:	8b 45 08             	mov    0x8(%ebp),%eax
810003c7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003ca:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003cd:	50                   	push   %eax
810003ce:	e8 f8 fd ff ff       	call   810001cb <sys_call>
810003d3:	83 c4 04             	add    $0x4,%esp
}
810003d6:	c9                   	leave  
810003d7:	c3                   	ret    

810003d8 <fstat>:

int fstat(int file,struct stat* st){
810003d8:	55                   	push   %ebp
810003d9:	89 e5                	mov    %esp,%ebp
810003db:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FSTAT;
810003de:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0=(int)file;
810003e5:	8b 45 08             	mov    0x8(%ebp),%eax
810003e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)st;
810003eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810003ee:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810003f1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003f4:	50                   	push   %eax
810003f5:	e8 d1 fd ff ff       	call   810001cb <sys_call>
810003fa:	83 c4 04             	add    $0x4,%esp
}
810003fd:	c9                   	leave  
810003fe:	c3                   	ret    

810003ff <sbrk>:

void* sbrk(ptrdiff_t incr){
810003ff:	55                   	push   %ebp
81000400:	89 e5                	mov    %esp,%ebp
81000402:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_SBRK;
81000405:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0=(int)incr;
8100040c:	8b 45 08             	mov    0x8(%ebp),%eax
8100040f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (void*)sys_call(&args);
81000412:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000415:	50                   	push   %eax
81000416:	e8 b0 fd ff ff       	call   810001cb <sys_call>
8100041b:	83 c4 04             	add    $0x4,%esp
8100041e:	c9                   	leave  
8100041f:	c3                   	ret    

81000420 <_iprintf_r>:
81000420:	55                   	push   %ebp
81000421:	89 e5                	mov    %esp,%ebp
81000423:	83 ec 18             	sub    $0x18,%esp
81000426:	8d 45 10             	lea    0x10(%ebp),%eax
81000429:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100042c:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100042f:	8b 45 08             	mov    0x8(%ebp),%eax
81000432:	8b 40 08             	mov    0x8(%eax),%eax
81000435:	52                   	push   %edx
81000436:	ff 75 0c             	pushl  0xc(%ebp)
81000439:	50                   	push   %eax
8100043a:	ff 75 08             	pushl  0x8(%ebp)
8100043d:	e8 fe 19 00 00       	call   81001e40 <_vfiprintf_r>
81000442:	83 c4 10             	add    $0x10,%esp
81000445:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000448:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100044b:	c9                   	leave  
8100044c:	c3                   	ret    

8100044d <iprintf>:
8100044d:	55                   	push   %ebp
8100044e:	89 e5                	mov    %esp,%ebp
81000450:	83 ec 18             	sub    $0x18,%esp
81000453:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81000458:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100045b:	8d 45 0c             	lea    0xc(%ebp),%eax
8100045e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000461:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000464:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000467:	8b 40 08             	mov    0x8(%eax),%eax
8100046a:	52                   	push   %edx
8100046b:	ff 75 08             	pushl  0x8(%ebp)
8100046e:	50                   	push   %eax
8100046f:	ff 75 f4             	pushl  -0xc(%ebp)
81000472:	e8 c9 19 00 00       	call   81001e40 <_vfiprintf_r>
81000477:	83 c4 10             	add    $0x10,%esp
8100047a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100047d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000480:	c9                   	leave  
81000481:	c3                   	ret    

81000482 <_puts_r>:
81000482:	55                   	push   %ebp
81000483:	89 e5                	mov    %esp,%ebp
81000485:	83 ec 38             	sub    $0x38,%esp
81000488:	83 ec 0c             	sub    $0xc,%esp
8100048b:	ff 75 0c             	pushl  0xc(%ebp)
8100048e:	e8 ed 00 00 00       	call   81000580 <strlen>
81000493:	83 c4 10             	add    $0x10,%esp
81000496:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000499:	8b 45 0c             	mov    0xc(%ebp),%eax
8100049c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100049f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004a2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810004a5:	c7 45 d4 ec 47 00 81 	movl   $0x810047ec,-0x2c(%ebp)
810004ac:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810004b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004b6:	83 c0 01             	add    $0x1,%eax
810004b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810004bc:	8d 45 cc             	lea    -0x34(%ebp),%eax
810004bf:	89 45 dc             	mov    %eax,-0x24(%ebp)
810004c2:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810004c9:	8b 45 08             	mov    0x8(%ebp),%eax
810004cc:	8b 40 08             	mov    0x8(%eax),%eax
810004cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810004d2:	8b 45 08             	mov    0x8(%ebp),%eax
810004d5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810004d8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810004dc:	74 18                	je     810004f6 <_puts_r+0x74>
810004de:	8b 45 ec             	mov    -0x14(%ebp),%eax
810004e1:	8b 40 38             	mov    0x38(%eax),%eax
810004e4:	85 c0                	test   %eax,%eax
810004e6:	75 0e                	jne    810004f6 <_puts_r+0x74>
810004e8:	83 ec 0c             	sub    $0xc,%esp
810004eb:	ff 75 ec             	pushl  -0x14(%ebp)
810004ee:	e8 fb 03 00 00       	call   810008ee <__sinit>
810004f3:	83 c4 10             	add    $0x10,%esp
810004f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004f9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004fd:	98                   	cwtl   
810004fe:	25 00 20 00 00       	and    $0x2000,%eax
81000503:	85 c0                	test   %eax,%eax
81000505:	75 24                	jne    8100052b <_puts_r+0xa9>
81000507:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100050a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100050e:	80 cc 20             	or     $0x20,%ah
81000511:	89 c2                	mov    %eax,%edx
81000513:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000516:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100051a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100051d:	8b 40 64             	mov    0x64(%eax),%eax
81000520:	80 e4 df             	and    $0xdf,%ah
81000523:	89 c2                	mov    %eax,%edx
81000525:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000528:	89 50 64             	mov    %edx,0x64(%eax)
8100052b:	83 ec 04             	sub    $0x4,%esp
8100052e:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000531:	50                   	push   %eax
81000532:	ff 75 f0             	pushl  -0x10(%ebp)
81000535:	ff 75 08             	pushl  0x8(%ebp)
81000538:	e8 be 04 00 00       	call   810009fb <__sfvwrite_r>
8100053d:	83 c4 10             	add    $0x10,%esp
81000540:	85 c0                	test   %eax,%eax
81000542:	74 07                	je     8100054b <_puts_r+0xc9>
81000544:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000549:	eb 05                	jmp    81000550 <_puts_r+0xce>
8100054b:	b8 0a 00 00 00       	mov    $0xa,%eax
81000550:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000553:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000556:	c9                   	leave  
81000557:	c3                   	ret    

81000558 <puts>:
81000558:	55                   	push   %ebp
81000559:	89 e5                	mov    %esp,%ebp
8100055b:	83 ec 08             	sub    $0x8,%esp
8100055e:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81000563:	83 ec 08             	sub    $0x8,%esp
81000566:	ff 75 08             	pushl  0x8(%ebp)
81000569:	50                   	push   %eax
8100056a:	e8 13 ff ff ff       	call   81000482 <_puts_r>
8100056f:	83 c4 10             	add    $0x10,%esp
81000572:	c9                   	leave  
81000573:	c3                   	ret    
81000574:	66 90                	xchg   %ax,%ax
81000576:	66 90                	xchg   %ax,%ax
81000578:	66 90                	xchg   %ax,%ax
8100057a:	66 90                	xchg   %ax,%ax
8100057c:	66 90                	xchg   %ax,%ax
8100057e:	66 90                	xchg   %ax,%ax

81000580 <strlen>:
81000580:	55                   	push   %ebp
81000581:	89 e5                	mov    %esp,%ebp
81000583:	57                   	push   %edi
81000584:	8b 55 08             	mov    0x8(%ebp),%edx
81000587:	89 d7                	mov    %edx,%edi
81000589:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100058f:	74 25                	je     810005b6 <L5>
81000591:	8a 0f                	mov    (%edi),%cl
81000593:	47                   	inc    %edi
81000594:	84 c9                	test   %cl,%cl
81000596:	74 56                	je     810005ee <L15>
81000598:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100059e:	74 16                	je     810005b6 <L5>
810005a0:	8a 0f                	mov    (%edi),%cl
810005a2:	47                   	inc    %edi
810005a3:	84 c9                	test   %cl,%cl
810005a5:	74 47                	je     810005ee <L15>
810005a7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810005ad:	74 07                	je     810005b6 <L5>
810005af:	8a 0f                	mov    (%edi),%cl
810005b1:	47                   	inc    %edi
810005b2:	84 c9                	test   %cl,%cl
810005b4:	74 38                	je     810005ee <L15>

810005b6 <L5>:
810005b6:	83 ef 04             	sub    $0x4,%edi
810005b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810005c0 <L10>:
810005c0:	83 c7 04             	add    $0x4,%edi
810005c3:	8b 0f                	mov    (%edi),%ecx
810005c5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810005cb:	f7 d1                	not    %ecx
810005cd:	21 c8                	and    %ecx,%eax
810005cf:	a9 80 80 80 80       	test   $0x80808080,%eax
810005d4:	74 ea                	je     810005c0 <L10>
810005d6:	f7 d1                	not    %ecx
810005d8:	47                   	inc    %edi
810005d9:	84 c9                	test   %cl,%cl
810005db:	74 11                	je     810005ee <L15>
810005dd:	47                   	inc    %edi
810005de:	c1 e9 08             	shr    $0x8,%ecx
810005e1:	84 c9                	test   %cl,%cl
810005e3:	74 09                	je     810005ee <L15>
810005e5:	47                   	inc    %edi
810005e6:	c1 e9 08             	shr    $0x8,%ecx
810005e9:	84 c9                	test   %cl,%cl
810005eb:	74 01                	je     810005ee <L15>
810005ed:	47                   	inc    %edi

810005ee <L15>:
810005ee:	29 d7                	sub    %edx,%edi
810005f0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005f3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005f6:	5f                   	pop    %edi
810005f7:	c9                   	leave  
810005f8:	c3                   	ret    

810005f9 <std>:
810005f9:	55                   	push   %ebp
810005fa:	89 e5                	mov    %esp,%ebp
810005fc:	83 ec 08             	sub    $0x8,%esp
810005ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000602:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000608:	8b 45 08             	mov    0x8(%ebp),%eax
8100060b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000612:	8b 45 08             	mov    0x8(%ebp),%eax
81000615:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100061c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100061f:	89 c2                	mov    %eax,%edx
81000621:	8b 45 08             	mov    0x8(%ebp),%eax
81000624:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000628:	8b 45 08             	mov    0x8(%ebp),%eax
8100062b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000632:	8b 45 10             	mov    0x10(%ebp),%eax
81000635:	89 c2                	mov    %eax,%edx
81000637:	8b 45 08             	mov    0x8(%ebp),%eax
8100063a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100063e:	8b 45 08             	mov    0x8(%ebp),%eax
81000641:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000648:	8b 45 08             	mov    0x8(%ebp),%eax
8100064b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000652:	8b 45 08             	mov    0x8(%ebp),%eax
81000655:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100065c:	8b 45 08             	mov    0x8(%ebp),%eax
8100065f:	83 c0 5c             	add    $0x5c,%eax
81000662:	83 ec 04             	sub    $0x4,%esp
81000665:	6a 08                	push   $0x8
81000667:	6a 00                	push   $0x0
81000669:	50                   	push   %eax
8100066a:	e8 2e 15 00 00       	call   81001b9d <memset>
8100066f:	83 c4 10             	add    $0x10,%esp
81000672:	8b 45 08             	mov    0x8(%ebp),%eax
81000675:	8b 55 08             	mov    0x8(%ebp),%edx
81000678:	89 50 1c             	mov    %edx,0x1c(%eax)
8100067b:	8b 45 08             	mov    0x8(%ebp),%eax
8100067e:	c7 40 20 9a 30 00 81 	movl   $0x8100309a,0x20(%eax)
81000685:	8b 45 08             	mov    0x8(%ebp),%eax
81000688:	c7 40 24 e8 30 00 81 	movl   $0x810030e8,0x24(%eax)
8100068f:	8b 45 08             	mov    0x8(%ebp),%eax
81000692:	c7 40 28 43 31 00 81 	movl   $0x81003143,0x28(%eax)
81000699:	8b 45 08             	mov    0x8(%ebp),%eax
8100069c:	c7 40 2c 8d 31 00 81 	movl   $0x8100318d,0x2c(%eax)
810006a3:	90                   	nop
810006a4:	c9                   	leave  
810006a5:	c3                   	ret    

810006a6 <stdin_init>:
810006a6:	55                   	push   %ebp
810006a7:	89 e5                	mov    %esp,%ebp
810006a9:	83 ec 08             	sub    $0x8,%esp
810006ac:	83 ec 04             	sub    $0x4,%esp
810006af:	6a 00                	push   $0x0
810006b1:	6a 04                	push   $0x4
810006b3:	ff 75 08             	pushl  0x8(%ebp)
810006b6:	e8 3e ff ff ff       	call   810005f9 <std>
810006bb:	83 c4 10             	add    $0x10,%esp
810006be:	90                   	nop
810006bf:	c9                   	leave  
810006c0:	c3                   	ret    

810006c1 <stdout_init>:
810006c1:	55                   	push   %ebp
810006c2:	89 e5                	mov    %esp,%ebp
810006c4:	83 ec 08             	sub    $0x8,%esp
810006c7:	83 ec 04             	sub    $0x4,%esp
810006ca:	6a 01                	push   $0x1
810006cc:	6a 09                	push   $0x9
810006ce:	ff 75 08             	pushl  0x8(%ebp)
810006d1:	e8 23 ff ff ff       	call   810005f9 <std>
810006d6:	83 c4 10             	add    $0x10,%esp
810006d9:	90                   	nop
810006da:	c9                   	leave  
810006db:	c3                   	ret    

810006dc <stderr_init>:
810006dc:	55                   	push   %ebp
810006dd:	89 e5                	mov    %esp,%ebp
810006df:	83 ec 08             	sub    $0x8,%esp
810006e2:	83 ec 04             	sub    $0x4,%esp
810006e5:	6a 02                	push   $0x2
810006e7:	6a 12                	push   $0x12
810006e9:	ff 75 08             	pushl  0x8(%ebp)
810006ec:	e8 08 ff ff ff       	call   810005f9 <std>
810006f1:	83 c4 10             	add    $0x10,%esp
810006f4:	90                   	nop
810006f5:	c9                   	leave  
810006f6:	c3                   	ret    

810006f7 <__sfmoreglue>:
810006f7:	55                   	push   %ebp
810006f8:	89 e5                	mov    %esp,%ebp
810006fa:	53                   	push   %ebx
810006fb:	83 ec 14             	sub    $0x14,%esp
810006fe:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000701:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000704:	6b c0 68             	imul   $0x68,%eax,%eax
81000707:	83 c0 74             	add    $0x74,%eax
8100070a:	83 ec 08             	sub    $0x8,%esp
8100070d:	50                   	push   %eax
8100070e:	ff 75 08             	pushl  0x8(%ebp)
81000711:	e8 e9 0a 00 00       	call   810011ff <_malloc_r>
81000716:	83 c4 10             	add    $0x10,%esp
81000719:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100071c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000720:	75 07                	jne    81000729 <__sfmoreglue+0x32>
81000722:	b8 00 00 00 00       	mov    $0x0,%eax
81000727:	eb 38                	jmp    81000761 <__sfmoreglue+0x6a>
81000729:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100072c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000732:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000735:	89 58 04             	mov    %ebx,0x4(%eax)
81000738:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100073b:	8d 50 0c             	lea    0xc(%eax),%edx
8100073e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000741:	89 50 08             	mov    %edx,0x8(%eax)
81000744:	89 d8                	mov    %ebx,%eax
81000746:	6b c0 68             	imul   $0x68,%eax,%eax
81000749:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100074c:	83 c2 0c             	add    $0xc,%edx
8100074f:	83 ec 04             	sub    $0x4,%esp
81000752:	50                   	push   %eax
81000753:	6a 00                	push   $0x0
81000755:	52                   	push   %edx
81000756:	e8 42 14 00 00       	call   81001b9d <memset>
8100075b:	83 c4 10             	add    $0x10,%esp
8100075e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000761:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000764:	c9                   	leave  
81000765:	c3                   	ret    

81000766 <__sfp>:
81000766:	55                   	push   %ebp
81000767:	89 e5                	mov    %esp,%ebp
81000769:	83 ec 18             	sub    $0x18,%esp
8100076c:	e8 16 02 00 00       	call   81000987 <__sfp_lock_acquire>
81000771:	a1 f0 47 00 81       	mov    0x810047f0,%eax
81000776:	8b 40 38             	mov    0x38(%eax),%eax
81000779:	85 c0                	test   %eax,%eax
8100077b:	75 11                	jne    8100078e <__sfp+0x28>
8100077d:	a1 f0 47 00 81       	mov    0x810047f0,%eax
81000782:	83 ec 0c             	sub    $0xc,%esp
81000785:	50                   	push   %eax
81000786:	e8 63 01 00 00       	call   810008ee <__sinit>
8100078b:	83 c4 10             	add    $0x10,%esp
8100078e:	a1 f0 47 00 81       	mov    0x810047f0,%eax
81000793:	05 e0 02 00 00       	add    $0x2e0,%eax
81000798:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100079b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100079e:	8b 40 08             	mov    0x8(%eax),%eax
810007a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007a7:	8b 40 04             	mov    0x4(%eax),%eax
810007aa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810007ad:	eb 10                	jmp    810007bf <__sfp+0x59>
810007af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007b2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810007b6:	66 85 c0             	test   %ax,%ax
810007b9:	74 58                	je     81000813 <__sfp+0xad>
810007bb:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810007bf:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810007c3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810007c7:	79 e6                	jns    810007af <__sfp+0x49>
810007c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007cc:	8b 00                	mov    (%eax),%eax
810007ce:	85 c0                	test   %eax,%eax
810007d0:	75 1e                	jne    810007f0 <__sfp+0x8a>
810007d2:	83 ec 08             	sub    $0x8,%esp
810007d5:	6a 04                	push   $0x4
810007d7:	ff 75 08             	pushl  0x8(%ebp)
810007da:	e8 18 ff ff ff       	call   810006f7 <__sfmoreglue>
810007df:	83 c4 10             	add    $0x10,%esp
810007e2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810007e5:	89 02                	mov    %eax,(%edx)
810007e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007ea:	8b 00                	mov    (%eax),%eax
810007ec:	85 c0                	test   %eax,%eax
810007ee:	74 0a                	je     810007fa <__sfp+0x94>
810007f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007f3:	8b 00                	mov    (%eax),%eax
810007f5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007f8:	eb a1                	jmp    8100079b <__sfp+0x35>
810007fa:	90                   	nop
810007fb:	e8 8d 01 00 00       	call   8100098d <__sfp_lock_release>
81000800:	8b 45 08             	mov    0x8(%ebp),%eax
81000803:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000809:	b8 00 00 00 00       	mov    $0x0,%eax
8100080e:	e9 9e 00 00 00       	jmp    810008b1 <__sfp+0x14b>
81000813:	90                   	nop
81000814:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000817:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100081d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000820:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000829:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000830:	e8 58 01 00 00       	call   8100098d <__sfp_lock_release>
81000835:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000838:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100083e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000841:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000848:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100084b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000852:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000855:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100085c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100085f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000866:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000869:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000870:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000873:	83 c0 5c             	add    $0x5c,%eax
81000876:	83 ec 04             	sub    $0x4,%esp
81000879:	6a 08                	push   $0x8
8100087b:	6a 00                	push   $0x0
8100087d:	50                   	push   %eax
8100087e:	e8 1a 13 00 00       	call   81001b9d <memset>
81000883:	83 c4 10             	add    $0x10,%esp
81000886:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000889:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000890:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000893:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100089a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100089d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810008a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a7:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810008ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008b1:	c9                   	leave  
810008b2:	c3                   	ret    

810008b3 <_cleanup_r>:
810008b3:	55                   	push   %ebp
810008b4:	89 e5                	mov    %esp,%ebp
810008b6:	83 ec 18             	sub    $0x18,%esp
810008b9:	c7 45 f4 c6 34 00 81 	movl   $0x810034c6,-0xc(%ebp)
810008c0:	83 ec 08             	sub    $0x8,%esp
810008c3:	ff 75 f4             	pushl  -0xc(%ebp)
810008c6:	ff 75 08             	pushl  0x8(%ebp)
810008c9:	e8 33 06 00 00       	call   81000f01 <_fwalk_reent>
810008ce:	83 c4 10             	add    $0x10,%esp
810008d1:	90                   	nop
810008d2:	c9                   	leave  
810008d3:	c3                   	ret    

810008d4 <_cleanup>:
810008d4:	55                   	push   %ebp
810008d5:	89 e5                	mov    %esp,%ebp
810008d7:	83 ec 08             	sub    $0x8,%esp
810008da:	a1 f0 47 00 81       	mov    0x810047f0,%eax
810008df:	83 ec 0c             	sub    $0xc,%esp
810008e2:	50                   	push   %eax
810008e3:	e8 cb ff ff ff       	call   810008b3 <_cleanup_r>
810008e8:	83 c4 10             	add    $0x10,%esp
810008eb:	90                   	nop
810008ec:	c9                   	leave  
810008ed:	c3                   	ret    

810008ee <__sinit>:
810008ee:	55                   	push   %ebp
810008ef:	89 e5                	mov    %esp,%ebp
810008f1:	83 ec 08             	sub    $0x8,%esp
810008f4:	e8 9a 00 00 00       	call   81000993 <__sinit_lock_acquire>
810008f9:	8b 45 08             	mov    0x8(%ebp),%eax
810008fc:	8b 40 38             	mov    0x38(%eax),%eax
810008ff:	85 c0                	test   %eax,%eax
81000901:	74 07                	je     8100090a <__sinit+0x1c>
81000903:	e8 91 00 00 00       	call   81000999 <__sinit_lock_release>
81000908:	eb 7b                	jmp    81000985 <__sinit+0x97>
8100090a:	8b 45 08             	mov    0x8(%ebp),%eax
8100090d:	c7 40 3c b3 08 00 81 	movl   $0x810008b3,0x3c(%eax)
81000914:	8b 45 08             	mov    0x8(%ebp),%eax
81000917:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100091e:	00 00 00 
81000921:	8b 45 08             	mov    0x8(%ebp),%eax
81000924:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100092b:	00 00 00 
8100092e:	8b 45 08             	mov    0x8(%ebp),%eax
81000931:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000937:	8b 45 08             	mov    0x8(%ebp),%eax
8100093a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000940:	8b 45 08             	mov    0x8(%ebp),%eax
81000943:	8b 40 04             	mov    0x4(%eax),%eax
81000946:	83 ec 0c             	sub    $0xc,%esp
81000949:	50                   	push   %eax
8100094a:	e8 57 fd ff ff       	call   810006a6 <stdin_init>
8100094f:	83 c4 10             	add    $0x10,%esp
81000952:	8b 45 08             	mov    0x8(%ebp),%eax
81000955:	8b 40 08             	mov    0x8(%eax),%eax
81000958:	83 ec 0c             	sub    $0xc,%esp
8100095b:	50                   	push   %eax
8100095c:	e8 60 fd ff ff       	call   810006c1 <stdout_init>
81000961:	83 c4 10             	add    $0x10,%esp
81000964:	8b 45 08             	mov    0x8(%ebp),%eax
81000967:	8b 40 0c             	mov    0xc(%eax),%eax
8100096a:	83 ec 0c             	sub    $0xc,%esp
8100096d:	50                   	push   %eax
8100096e:	e8 69 fd ff ff       	call   810006dc <stderr_init>
81000973:	83 c4 10             	add    $0x10,%esp
81000976:	8b 45 08             	mov    0x8(%ebp),%eax
81000979:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000980:	e8 14 00 00 00       	call   81000999 <__sinit_lock_release>
81000985:	c9                   	leave  
81000986:	c3                   	ret    

81000987 <__sfp_lock_acquire>:
81000987:	55                   	push   %ebp
81000988:	89 e5                	mov    %esp,%ebp
8100098a:	90                   	nop
8100098b:	5d                   	pop    %ebp
8100098c:	c3                   	ret    

8100098d <__sfp_lock_release>:
8100098d:	55                   	push   %ebp
8100098e:	89 e5                	mov    %esp,%ebp
81000990:	90                   	nop
81000991:	5d                   	pop    %ebp
81000992:	c3                   	ret    

81000993 <__sinit_lock_acquire>:
81000993:	55                   	push   %ebp
81000994:	89 e5                	mov    %esp,%ebp
81000996:	90                   	nop
81000997:	5d                   	pop    %ebp
81000998:	c3                   	ret    

81000999 <__sinit_lock_release>:
81000999:	55                   	push   %ebp
8100099a:	89 e5                	mov    %esp,%ebp
8100099c:	90                   	nop
8100099d:	5d                   	pop    %ebp
8100099e:	c3                   	ret    

8100099f <__fp_lock>:
8100099f:	55                   	push   %ebp
810009a0:	89 e5                	mov    %esp,%ebp
810009a2:	b8 00 00 00 00       	mov    $0x0,%eax
810009a7:	5d                   	pop    %ebp
810009a8:	c3                   	ret    

810009a9 <__fp_unlock>:
810009a9:	55                   	push   %ebp
810009aa:	89 e5                	mov    %esp,%ebp
810009ac:	b8 00 00 00 00       	mov    $0x0,%eax
810009b1:	5d                   	pop    %ebp
810009b2:	c3                   	ret    

810009b3 <__fp_lock_all>:
810009b3:	55                   	push   %ebp
810009b4:	89 e5                	mov    %esp,%ebp
810009b6:	83 ec 08             	sub    $0x8,%esp
810009b9:	e8 c9 ff ff ff       	call   81000987 <__sfp_lock_acquire>
810009be:	a1 84 4f 00 81       	mov    0x81004f84,%eax
810009c3:	83 ec 08             	sub    $0x8,%esp
810009c6:	68 9f 09 00 81       	push   $0x8100099f
810009cb:	50                   	push   %eax
810009cc:	e8 c8 04 00 00       	call   81000e99 <_fwalk>
810009d1:	83 c4 10             	add    $0x10,%esp
810009d4:	90                   	nop
810009d5:	c9                   	leave  
810009d6:	c3                   	ret    

810009d7 <__fp_unlock_all>:
810009d7:	55                   	push   %ebp
810009d8:	89 e5                	mov    %esp,%ebp
810009da:	83 ec 08             	sub    $0x8,%esp
810009dd:	a1 84 4f 00 81       	mov    0x81004f84,%eax
810009e2:	83 ec 08             	sub    $0x8,%esp
810009e5:	68 a9 09 00 81       	push   $0x810009a9
810009ea:	50                   	push   %eax
810009eb:	e8 a9 04 00 00       	call   81000e99 <_fwalk>
810009f0:	83 c4 10             	add    $0x10,%esp
810009f3:	e8 95 ff ff ff       	call   8100098d <__sfp_lock_release>
810009f8:	90                   	nop
810009f9:	c9                   	leave  
810009fa:	c3                   	ret    

810009fb <__sfvwrite_r>:
810009fb:	55                   	push   %ebp
810009fc:	89 e5                	mov    %esp,%ebp
810009fe:	57                   	push   %edi
810009ff:	56                   	push   %esi
81000a00:	53                   	push   %ebx
81000a01:	83 ec 3c             	sub    $0x3c,%esp
81000a04:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a07:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81000a0e:	8b 45 10             	mov    0x10(%ebp),%eax
81000a11:	8b 78 08             	mov    0x8(%eax),%edi
81000a14:	85 ff                	test   %edi,%edi
81000a16:	75 0a                	jne    81000a22 <__sfvwrite_r+0x27>
81000a18:	b8 00 00 00 00       	mov    $0x0,%eax
81000a1d:	e9 6f 04 00 00       	jmp    81000e91 <__sfvwrite_r+0x496>
81000a22:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a26:	98                   	cwtl   
81000a27:	83 e0 08             	and    $0x8,%eax
81000a2a:	85 c0                	test   %eax,%eax
81000a2c:	74 07                	je     81000a35 <__sfvwrite_r+0x3a>
81000a2e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a31:	85 c0                	test   %eax,%eax
81000a33:	75 1d                	jne    81000a52 <__sfvwrite_r+0x57>
81000a35:	83 ec 08             	sub    $0x8,%esp
81000a38:	53                   	push   %ebx
81000a39:	ff 75 08             	pushl  0x8(%ebp)
81000a3c:	e8 ea 28 00 00       	call   8100332b <__swsetup_r>
81000a41:	83 c4 10             	add    $0x10,%esp
81000a44:	85 c0                	test   %eax,%eax
81000a46:	74 0a                	je     81000a52 <__sfvwrite_r+0x57>
81000a48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a4d:	e9 3f 04 00 00       	jmp    81000e91 <__sfvwrite_r+0x496>
81000a52:	8b 45 10             	mov    0x10(%ebp),%eax
81000a55:	8b 00                	mov    (%eax),%eax
81000a57:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a5a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a5f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a63:	98                   	cwtl   
81000a64:	83 e0 02             	and    $0x2,%eax
81000a67:	85 c0                	test   %eax,%eax
81000a69:	74 68                	je     81000ad3 <__sfvwrite_r+0xd8>
81000a6b:	eb 11                	jmp    81000a7e <__sfvwrite_r+0x83>
81000a6d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a70:	8b 08                	mov    (%eax),%ecx
81000a72:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a75:	8b 78 04             	mov    0x4(%eax),%edi
81000a78:	83 c0 08             	add    $0x8,%eax
81000a7b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a7e:	85 ff                	test   %edi,%edi
81000a80:	74 eb                	je     81000a6d <__sfvwrite_r+0x72>
81000a82:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a85:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a8a:	39 c7                	cmp    %eax,%edi
81000a8c:	0f 46 c7             	cmovbe %edi,%eax
81000a8f:	89 c2                	mov    %eax,%edx
81000a91:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a94:	52                   	push   %edx
81000a95:	ff 75 c4             	pushl  -0x3c(%ebp)
81000a98:	50                   	push   %eax
81000a99:	ff 75 08             	pushl  0x8(%ebp)
81000a9c:	ff d1                	call   *%ecx
81000a9e:	83 c4 10             	add    $0x10,%esp
81000aa1:	89 c6                	mov    %eax,%esi
81000aa3:	85 f6                	test   %esi,%esi
81000aa5:	0f 8e cf 03 00 00    	jle    81000e7a <__sfvwrite_r+0x47f>
81000aab:	89 f0                	mov    %esi,%eax
81000aad:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000ab0:	89 f0                	mov    %esi,%eax
81000ab2:	29 c7                	sub    %eax,%edi
81000ab4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ab7:	8b 40 08             	mov    0x8(%eax),%eax
81000aba:	89 f2                	mov    %esi,%edx
81000abc:	29 d0                	sub    %edx,%eax
81000abe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000ac1:	89 41 08             	mov    %eax,0x8(%ecx)
81000ac4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ac7:	8b 40 08             	mov    0x8(%eax),%eax
81000aca:	85 c0                	test   %eax,%eax
81000acc:	75 b0                	jne    81000a7e <__sfvwrite_r+0x83>
81000ace:	e9 a0 03 00 00       	jmp    81000e73 <__sfvwrite_r+0x478>
81000ad3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ad7:	98                   	cwtl   
81000ad8:	83 e0 01             	and    $0x1,%eax
81000adb:	85 c0                	test   %eax,%eax
81000add:	0f 85 44 02 00 00    	jne    81000d27 <__sfvwrite_r+0x32c>
81000ae3:	eb 11                	jmp    81000af6 <__sfvwrite_r+0xfb>
81000ae5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ae8:	8b 08                	mov    (%eax),%ecx
81000aea:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000aed:	8b 78 04             	mov    0x4(%eax),%edi
81000af0:	83 c0 08             	add    $0x8,%eax
81000af3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000af6:	85 ff                	test   %edi,%edi
81000af8:	74 eb                	je     81000ae5 <__sfvwrite_r+0xea>
81000afa:	8b 73 08             	mov    0x8(%ebx),%esi
81000afd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b01:	98                   	cwtl   
81000b02:	25 00 02 00 00       	and    $0x200,%eax
81000b07:	85 c0                	test   %eax,%eax
81000b09:	0f 84 4f 01 00 00    	je     81000c5e <__sfvwrite_r+0x263>
81000b0f:	89 f0                	mov    %esi,%eax
81000b11:	39 c7                	cmp    %eax,%edi
81000b13:	0f 82 12 01 00 00    	jb     81000c2b <__sfvwrite_r+0x230>
81000b19:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b1d:	98                   	cwtl   
81000b1e:	25 80 04 00 00       	and    $0x480,%eax
81000b23:	85 c0                	test   %eax,%eax
81000b25:	0f 84 00 01 00 00    	je     81000c2b <__sfvwrite_r+0x230>
81000b2b:	8b 03                	mov    (%ebx),%eax
81000b2d:	8b 53 10             	mov    0x10(%ebx),%edx
81000b30:	29 d0                	sub    %edx,%eax
81000b32:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000b35:	8b 53 14             	mov    0x14(%ebx),%edx
81000b38:	89 d0                	mov    %edx,%eax
81000b3a:	01 c0                	add    %eax,%eax
81000b3c:	01 d0                	add    %edx,%eax
81000b3e:	89 c2                	mov    %eax,%edx
81000b40:	c1 ea 1f             	shr    $0x1f,%edx
81000b43:	01 d0                	add    %edx,%eax
81000b45:	d1 f8                	sar    %eax
81000b47:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b4a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b4d:	01 f8                	add    %edi,%eax
81000b4f:	8d 50 01             	lea    0x1(%eax),%edx
81000b52:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b55:	39 c2                	cmp    %eax,%edx
81000b57:	76 0b                	jbe    81000b64 <__sfvwrite_r+0x169>
81000b59:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b5c:	01 f8                	add    %edi,%eax
81000b5e:	83 c0 01             	add    $0x1,%eax
81000b61:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b64:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b68:	98                   	cwtl   
81000b69:	25 00 04 00 00       	and    $0x400,%eax
81000b6e:	85 c0                	test   %eax,%eax
81000b70:	74 4f                	je     81000bc1 <__sfvwrite_r+0x1c6>
81000b72:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b75:	83 ec 08             	sub    $0x8,%esp
81000b78:	50                   	push   %eax
81000b79:	ff 75 08             	pushl  0x8(%ebp)
81000b7c:	e8 7e 06 00 00       	call   810011ff <_malloc_r>
81000b81:	83 c4 10             	add    $0x10,%esp
81000b84:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b87:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b8b:	75 0e                	jne    81000b9b <__sfvwrite_r+0x1a0>
81000b8d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b90:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b96:	e9 e6 02 00 00       	jmp    81000e81 <__sfvwrite_r+0x486>
81000b9b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b9e:	8b 43 10             	mov    0x10(%ebx),%eax
81000ba1:	83 ec 04             	sub    $0x4,%esp
81000ba4:	52                   	push   %edx
81000ba5:	50                   	push   %eax
81000ba6:	ff 75 dc             	pushl  -0x24(%ebp)
81000ba9:	e8 1a 0f 00 00       	call   81001ac8 <memcpy>
81000bae:	83 c4 10             	add    $0x10,%esp
81000bb1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bb5:	66 25 7f fb          	and    $0xfb7f,%ax
81000bb9:	0c 80                	or     $0x80,%al
81000bbb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bbf:	eb 49                	jmp    81000c0a <__sfvwrite_r+0x20f>
81000bc1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000bc4:	8b 43 10             	mov    0x10(%ebx),%eax
81000bc7:	83 ec 04             	sub    $0x4,%esp
81000bca:	52                   	push   %edx
81000bcb:	50                   	push   %eax
81000bcc:	ff 75 08             	pushl  0x8(%ebp)
81000bcf:	e8 ac 1b 00 00       	call   81002780 <_realloc_r>
81000bd4:	83 c4 10             	add    $0x10,%esp
81000bd7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000bda:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000bde:	75 2a                	jne    81000c0a <__sfvwrite_r+0x20f>
81000be0:	8b 43 10             	mov    0x10(%ebx),%eax
81000be3:	83 ec 08             	sub    $0x8,%esp
81000be6:	50                   	push   %eax
81000be7:	ff 75 08             	pushl  0x8(%ebp)
81000bea:	e8 67 2e 00 00       	call   81003a56 <_free_r>
81000bef:	83 c4 10             	add    $0x10,%esp
81000bf2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bf6:	24 7f                	and    $0x7f,%al
81000bf8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bfc:	8b 45 08             	mov    0x8(%ebp),%eax
81000bff:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000c05:	e9 77 02 00 00       	jmp    81000e81 <__sfvwrite_r+0x486>
81000c0a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c0d:	89 43 10             	mov    %eax,0x10(%ebx)
81000c10:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000c13:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c16:	01 d0                	add    %edx,%eax
81000c18:	89 03                	mov    %eax,(%ebx)
81000c1a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c1d:	89 43 14             	mov    %eax,0x14(%ebx)
81000c20:	89 fe                	mov    %edi,%esi
81000c22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c25:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000c28:	89 43 08             	mov    %eax,0x8(%ebx)
81000c2b:	89 f0                	mov    %esi,%eax
81000c2d:	39 c7                	cmp    %eax,%edi
81000c2f:	73 02                	jae    81000c33 <__sfvwrite_r+0x238>
81000c31:	89 fe                	mov    %edi,%esi
81000c33:	89 f2                	mov    %esi,%edx
81000c35:	8b 03                	mov    (%ebx),%eax
81000c37:	83 ec 04             	sub    $0x4,%esp
81000c3a:	52                   	push   %edx
81000c3b:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c3e:	50                   	push   %eax
81000c3f:	e8 cc 0e 00 00       	call   81001b10 <memmove>
81000c44:	83 c4 10             	add    $0x10,%esp
81000c47:	8b 43 08             	mov    0x8(%ebx),%eax
81000c4a:	29 f0                	sub    %esi,%eax
81000c4c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c4f:	8b 03                	mov    (%ebx),%eax
81000c51:	89 f2                	mov    %esi,%edx
81000c53:	01 d0                	add    %edx,%eax
81000c55:	89 03                	mov    %eax,(%ebx)
81000c57:	89 fe                	mov    %edi,%esi
81000c59:	e9 9d 00 00 00       	jmp    81000cfb <__sfvwrite_r+0x300>
81000c5e:	8b 13                	mov    (%ebx),%edx
81000c60:	8b 43 10             	mov    0x10(%ebx),%eax
81000c63:	39 c2                	cmp    %eax,%edx
81000c65:	77 07                	ja     81000c6e <__sfvwrite_r+0x273>
81000c67:	8b 43 14             	mov    0x14(%ebx),%eax
81000c6a:	39 c7                	cmp    %eax,%edi
81000c6c:	73 4c                	jae    81000cba <__sfvwrite_r+0x2bf>
81000c6e:	89 f0                	mov    %esi,%eax
81000c70:	39 c7                	cmp    %eax,%edi
81000c72:	0f 46 c7             	cmovbe %edi,%eax
81000c75:	89 c6                	mov    %eax,%esi
81000c77:	89 f2                	mov    %esi,%edx
81000c79:	8b 03                	mov    (%ebx),%eax
81000c7b:	83 ec 04             	sub    $0x4,%esp
81000c7e:	52                   	push   %edx
81000c7f:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c82:	50                   	push   %eax
81000c83:	e8 88 0e 00 00       	call   81001b10 <memmove>
81000c88:	83 c4 10             	add    $0x10,%esp
81000c8b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c8e:	29 f0                	sub    %esi,%eax
81000c90:	89 43 08             	mov    %eax,0x8(%ebx)
81000c93:	8b 03                	mov    (%ebx),%eax
81000c95:	89 f2                	mov    %esi,%edx
81000c97:	01 d0                	add    %edx,%eax
81000c99:	89 03                	mov    %eax,(%ebx)
81000c9b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c9e:	85 c0                	test   %eax,%eax
81000ca0:	75 58                	jne    81000cfa <__sfvwrite_r+0x2ff>
81000ca2:	83 ec 08             	sub    $0x8,%esp
81000ca5:	53                   	push   %ebx
81000ca6:	ff 75 08             	pushl  0x8(%ebp)
81000ca9:	e8 62 2b 00 00       	call   81003810 <_fflush_r>
81000cae:	83 c4 10             	add    $0x10,%esp
81000cb1:	85 c0                	test   %eax,%eax
81000cb3:	74 45                	je     81000cfa <__sfvwrite_r+0x2ff>
81000cb5:	e9 c7 01 00 00       	jmp    81000e81 <__sfvwrite_r+0x486>
81000cba:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000cc0:	77 04                	ja     81000cc6 <__sfvwrite_r+0x2cb>
81000cc2:	89 f8                	mov    %edi,%eax
81000cc4:	eb 05                	jmp    81000ccb <__sfvwrite_r+0x2d0>
81000cc6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000ccb:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000cce:	99                   	cltd   
81000ccf:	f7 f9                	idiv   %ecx
81000cd1:	89 c2                	mov    %eax,%edx
81000cd3:	8b 43 14             	mov    0x14(%ebx),%eax
81000cd6:	89 d6                	mov    %edx,%esi
81000cd8:	0f af f0             	imul   %eax,%esi
81000cdb:	8b 53 24             	mov    0x24(%ebx),%edx
81000cde:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000ce1:	56                   	push   %esi
81000ce2:	ff 75 c4             	pushl  -0x3c(%ebp)
81000ce5:	50                   	push   %eax
81000ce6:	ff 75 08             	pushl  0x8(%ebp)
81000ce9:	ff d2                	call   *%edx
81000ceb:	83 c4 10             	add    $0x10,%esp
81000cee:	89 c6                	mov    %eax,%esi
81000cf0:	85 f6                	test   %esi,%esi
81000cf2:	0f 8e 85 01 00 00    	jle    81000e7d <__sfvwrite_r+0x482>
81000cf8:	eb 01                	jmp    81000cfb <__sfvwrite_r+0x300>
81000cfa:	90                   	nop
81000cfb:	89 f0                	mov    %esi,%eax
81000cfd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000d00:	89 f0                	mov    %esi,%eax
81000d02:	29 c7                	sub    %eax,%edi
81000d04:	8b 45 10             	mov    0x10(%ebp),%eax
81000d07:	8b 40 08             	mov    0x8(%eax),%eax
81000d0a:	89 f2                	mov    %esi,%edx
81000d0c:	29 d0                	sub    %edx,%eax
81000d0e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d11:	89 41 08             	mov    %eax,0x8(%ecx)
81000d14:	8b 45 10             	mov    0x10(%ebp),%eax
81000d17:	8b 40 08             	mov    0x8(%eax),%eax
81000d1a:	85 c0                	test   %eax,%eax
81000d1c:	0f 85 d4 fd ff ff    	jne    81000af6 <__sfvwrite_r+0xfb>
81000d22:	e9 4c 01 00 00       	jmp    81000e73 <__sfvwrite_r+0x478>
81000d27:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d2e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000d35:	eb 18                	jmp    81000d4f <__sfvwrite_r+0x354>
81000d37:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d3e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d41:	8b 08                	mov    (%eax),%ecx
81000d43:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d46:	8b 78 04             	mov    0x4(%eax),%edi
81000d49:	83 c0 08             	add    $0x8,%eax
81000d4c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d4f:	85 ff                	test   %edi,%edi
81000d51:	74 e4                	je     81000d37 <__sfvwrite_r+0x33c>
81000d53:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d57:	75 32                	jne    81000d8b <__sfvwrite_r+0x390>
81000d59:	83 ec 04             	sub    $0x4,%esp
81000d5c:	57                   	push   %edi
81000d5d:	6a 0a                	push   $0xa
81000d5f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d62:	56                   	push   %esi
81000d63:	e8 c8 0c 00 00       	call   81001a30 <memchr>
81000d68:	83 c4 10             	add    $0x10,%esp
81000d6b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d6e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d72:	74 0a                	je     81000d7e <__sfvwrite_r+0x383>
81000d74:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d77:	83 c0 01             	add    $0x1,%eax
81000d7a:	29 f0                	sub    %esi,%eax
81000d7c:	eb 03                	jmp    81000d81 <__sfvwrite_r+0x386>
81000d7e:	8d 47 01             	lea    0x1(%edi),%eax
81000d81:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d84:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d8b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d8e:	39 c7                	cmp    %eax,%edi
81000d90:	0f 46 c7             	cmovbe %edi,%eax
81000d93:	89 c1                	mov    %eax,%ecx
81000d95:	8b 53 08             	mov    0x8(%ebx),%edx
81000d98:	8b 43 14             	mov    0x14(%ebx),%eax
81000d9b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d9e:	8b 13                	mov    (%ebx),%edx
81000da0:	8b 43 10             	mov    0x10(%ebx),%eax
81000da3:	39 c2                	cmp    %eax,%edx
81000da5:	76 38                	jbe    81000ddf <__sfvwrite_r+0x3e4>
81000da7:	39 f1                	cmp    %esi,%ecx
81000da9:	7e 34                	jle    81000ddf <__sfvwrite_r+0x3e4>
81000dab:	89 f2                	mov    %esi,%edx
81000dad:	8b 03                	mov    (%ebx),%eax
81000daf:	83 ec 04             	sub    $0x4,%esp
81000db2:	52                   	push   %edx
81000db3:	ff 75 c4             	pushl  -0x3c(%ebp)
81000db6:	50                   	push   %eax
81000db7:	e8 54 0d 00 00       	call   81001b10 <memmove>
81000dbc:	83 c4 10             	add    $0x10,%esp
81000dbf:	8b 03                	mov    (%ebx),%eax
81000dc1:	89 f2                	mov    %esi,%edx
81000dc3:	01 d0                	add    %edx,%eax
81000dc5:	89 03                	mov    %eax,(%ebx)
81000dc7:	83 ec 08             	sub    $0x8,%esp
81000dca:	53                   	push   %ebx
81000dcb:	ff 75 08             	pushl  0x8(%ebp)
81000dce:	e8 3d 2a 00 00       	call   81003810 <_fflush_r>
81000dd3:	83 c4 10             	add    $0x10,%esp
81000dd6:	85 c0                	test   %eax,%eax
81000dd8:	74 4f                	je     81000e29 <__sfvwrite_r+0x42e>
81000dda:	e9 a2 00 00 00       	jmp    81000e81 <__sfvwrite_r+0x486>
81000ddf:	8b 73 14             	mov    0x14(%ebx),%esi
81000de2:	89 c8                	mov    %ecx,%eax
81000de4:	39 c6                	cmp    %eax,%esi
81000de6:	7f 1b                	jg     81000e03 <__sfvwrite_r+0x408>
81000de8:	8b 53 24             	mov    0x24(%ebx),%edx
81000deb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dee:	56                   	push   %esi
81000def:	ff 75 c4             	pushl  -0x3c(%ebp)
81000df2:	50                   	push   %eax
81000df3:	ff 75 08             	pushl  0x8(%ebp)
81000df6:	ff d2                	call   *%edx
81000df8:	83 c4 10             	add    $0x10,%esp
81000dfb:	89 c6                	mov    %eax,%esi
81000dfd:	85 f6                	test   %esi,%esi
81000dff:	7f 28                	jg     81000e29 <__sfvwrite_r+0x42e>
81000e01:	eb 7e                	jmp    81000e81 <__sfvwrite_r+0x486>
81000e03:	89 ce                	mov    %ecx,%esi
81000e05:	89 f2                	mov    %esi,%edx
81000e07:	8b 03                	mov    (%ebx),%eax
81000e09:	83 ec 04             	sub    $0x4,%esp
81000e0c:	52                   	push   %edx
81000e0d:	ff 75 c4             	pushl  -0x3c(%ebp)
81000e10:	50                   	push   %eax
81000e11:	e8 fa 0c 00 00       	call   81001b10 <memmove>
81000e16:	83 c4 10             	add    $0x10,%esp
81000e19:	8b 43 08             	mov    0x8(%ebx),%eax
81000e1c:	29 f0                	sub    %esi,%eax
81000e1e:	89 43 08             	mov    %eax,0x8(%ebx)
81000e21:	8b 03                	mov    (%ebx),%eax
81000e23:	89 f2                	mov    %esi,%edx
81000e25:	01 d0                	add    %edx,%eax
81000e27:	89 03                	mov    %eax,(%ebx)
81000e29:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000e2c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000e30:	75 1a                	jne    81000e4c <__sfvwrite_r+0x451>
81000e32:	83 ec 08             	sub    $0x8,%esp
81000e35:	53                   	push   %ebx
81000e36:	ff 75 08             	pushl  0x8(%ebp)
81000e39:	e8 d2 29 00 00       	call   81003810 <_fflush_r>
81000e3e:	83 c4 10             	add    $0x10,%esp
81000e41:	85 c0                	test   %eax,%eax
81000e43:	75 3b                	jne    81000e80 <__sfvwrite_r+0x485>
81000e45:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e4c:	89 f0                	mov    %esi,%eax
81000e4e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e51:	89 f0                	mov    %esi,%eax
81000e53:	29 c7                	sub    %eax,%edi
81000e55:	8b 45 10             	mov    0x10(%ebp),%eax
81000e58:	8b 40 08             	mov    0x8(%eax),%eax
81000e5b:	89 f2                	mov    %esi,%edx
81000e5d:	29 d0                	sub    %edx,%eax
81000e5f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e62:	89 41 08             	mov    %eax,0x8(%ecx)
81000e65:	8b 45 10             	mov    0x10(%ebp),%eax
81000e68:	8b 40 08             	mov    0x8(%eax),%eax
81000e6b:	85 c0                	test   %eax,%eax
81000e6d:	0f 85 dc fe ff ff    	jne    81000d4f <__sfvwrite_r+0x354>
81000e73:	b8 00 00 00 00       	mov    $0x0,%eax
81000e78:	eb 17                	jmp    81000e91 <__sfvwrite_r+0x496>
81000e7a:	90                   	nop
81000e7b:	eb 04                	jmp    81000e81 <__sfvwrite_r+0x486>
81000e7d:	90                   	nop
81000e7e:	eb 01                	jmp    81000e81 <__sfvwrite_r+0x486>
81000e80:	90                   	nop
81000e81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e85:	83 c8 40             	or     $0x40,%eax
81000e88:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e91:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e94:	5b                   	pop    %ebx
81000e95:	5e                   	pop    %esi
81000e96:	5f                   	pop    %edi
81000e97:	5d                   	pop    %ebp
81000e98:	c3                   	ret    

81000e99 <_fwalk>:
81000e99:	55                   	push   %ebp
81000e9a:	89 e5                	mov    %esp,%ebp
81000e9c:	57                   	push   %edi
81000e9d:	56                   	push   %esi
81000e9e:	53                   	push   %ebx
81000e9f:	83 ec 1c             	sub    $0x1c,%esp
81000ea2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ea9:	8b 45 08             	mov    0x8(%ebp),%eax
81000eac:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eb2:	eb 3e                	jmp    81000ef2 <_fwalk+0x59>
81000eb4:	8b 5e 08             	mov    0x8(%esi),%ebx
81000eb7:	8b 7e 04             	mov    0x4(%esi),%edi
81000eba:	eb 2d                	jmp    81000ee9 <_fwalk+0x50>
81000ebc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ec0:	66 85 c0             	test   %ax,%ax
81000ec3:	74 21                	je     81000ee6 <_fwalk+0x4d>
81000ec5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ec9:	66 83 f8 01          	cmp    $0x1,%ax
81000ecd:	74 17                	je     81000ee6 <_fwalk+0x4d>
81000ecf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000ed3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000ed7:	74 0d                	je     81000ee6 <_fwalk+0x4d>
81000ed9:	83 ec 0c             	sub    $0xc,%esp
81000edc:	53                   	push   %ebx
81000edd:	ff 55 0c             	call   *0xc(%ebp)
81000ee0:	83 c4 10             	add    $0x10,%esp
81000ee3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ee6:	83 c3 68             	add    $0x68,%ebx
81000ee9:	83 ef 01             	sub    $0x1,%edi
81000eec:	85 ff                	test   %edi,%edi
81000eee:	79 cc                	jns    81000ebc <_fwalk+0x23>
81000ef0:	8b 36                	mov    (%esi),%esi
81000ef2:	85 f6                	test   %esi,%esi
81000ef4:	75 be                	jne    81000eb4 <_fwalk+0x1b>
81000ef6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ef9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000efc:	5b                   	pop    %ebx
81000efd:	5e                   	pop    %esi
81000efe:	5f                   	pop    %edi
81000eff:	5d                   	pop    %ebp
81000f00:	c3                   	ret    

81000f01 <_fwalk_reent>:
81000f01:	55                   	push   %ebp
81000f02:	89 e5                	mov    %esp,%ebp
81000f04:	57                   	push   %edi
81000f05:	56                   	push   %esi
81000f06:	53                   	push   %ebx
81000f07:	83 ec 1c             	sub    $0x1c,%esp
81000f0a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f11:	8b 45 08             	mov    0x8(%ebp),%eax
81000f14:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f1a:	eb 41                	jmp    81000f5d <_fwalk_reent+0x5c>
81000f1c:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f1f:	8b 7e 04             	mov    0x4(%esi),%edi
81000f22:	eb 30                	jmp    81000f54 <_fwalk_reent+0x53>
81000f24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f28:	66 85 c0             	test   %ax,%ax
81000f2b:	74 24                	je     81000f51 <_fwalk_reent+0x50>
81000f2d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f31:	66 83 f8 01          	cmp    $0x1,%ax
81000f35:	74 1a                	je     81000f51 <_fwalk_reent+0x50>
81000f37:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f3b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f3f:	74 10                	je     81000f51 <_fwalk_reent+0x50>
81000f41:	83 ec 08             	sub    $0x8,%esp
81000f44:	53                   	push   %ebx
81000f45:	ff 75 08             	pushl  0x8(%ebp)
81000f48:	ff 55 0c             	call   *0xc(%ebp)
81000f4b:	83 c4 10             	add    $0x10,%esp
81000f4e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f51:	83 c3 68             	add    $0x68,%ebx
81000f54:	83 ef 01             	sub    $0x1,%edi
81000f57:	85 ff                	test   %edi,%edi
81000f59:	79 c9                	jns    81000f24 <_fwalk_reent+0x23>
81000f5b:	8b 36                	mov    (%esi),%esi
81000f5d:	85 f6                	test   %esi,%esi
81000f5f:	75 bb                	jne    81000f1c <_fwalk_reent+0x1b>
81000f61:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f64:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f67:	5b                   	pop    %ebx
81000f68:	5e                   	pop    %esi
81000f69:	5f                   	pop    %edi
81000f6a:	5d                   	pop    %ebp
81000f6b:	c3                   	ret    

81000f6c <malloc_extend_top>:
81000f6c:	55                   	push   %ebp
81000f6d:	89 e5                	mov    %esp,%ebp
81000f6f:	83 ec 38             	sub    $0x38,%esp
81000f72:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f79:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81000f7e:	8b 40 08             	mov    0x8(%eax),%eax
81000f81:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f84:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f87:	8b 40 04             	mov    0x4(%eax),%eax
81000f8a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f8d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f90:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f93:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f96:	01 d0                	add    %edx,%eax
81000f98:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f9b:	8b 15 60 55 00 81    	mov    0x81005560,%edx
81000fa1:	8b 45 0c             	mov    0xc(%ebp),%eax
81000fa4:	01 d0                	add    %edx,%eax
81000fa6:	83 c0 10             	add    $0x10,%eax
81000fa9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fac:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000fb3:	a1 ac 53 00 81       	mov    0x810053ac,%eax
81000fb8:	83 f8 ff             	cmp    $0xffffffff,%eax
81000fbb:	74 15                	je     81000fd2 <malloc_extend_top+0x66>
81000fbd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000fc0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc3:	01 d0                	add    %edx,%eax
81000fc5:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fc8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fcb:	f7 d8                	neg    %eax
81000fcd:	21 d0                	and    %edx,%eax
81000fcf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fd2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fd5:	83 ec 08             	sub    $0x8,%esp
81000fd8:	50                   	push   %eax
81000fd9:	ff 75 08             	pushl  0x8(%ebp)
81000fdc:	e8 79 20 00 00       	call   8100305a <_sbrk_r>
81000fe1:	83 c4 10             	add    $0x10,%esp
81000fe4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fe7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000feb:	0f 84 0b 02 00 00    	je     810011fc <malloc_extend_top+0x290>
81000ff1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000ff7:	73 0e                	jae    81001007 <malloc_extend_top+0x9b>
81000ff9:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81000ffe:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81001001:	0f 85 f5 01 00 00    	jne    810011fc <malloc_extend_top+0x290>
81001007:	a1 80 55 00 81       	mov    0x81005580,%eax
8100100c:	89 c2                	mov    %eax,%edx
8100100e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001011:	01 d0                	add    %edx,%eax
81001013:	a3 80 55 00 81       	mov    %eax,0x81005580
81001018:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100101e:	75 30                	jne    81001050 <malloc_extend_top+0xe4>
81001020:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001023:	8d 50 ff             	lea    -0x1(%eax),%edx
81001026:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001029:	21 d0                	and    %edx,%eax
8100102b:	85 c0                	test   %eax,%eax
8100102d:	75 21                	jne    81001050 <malloc_extend_top+0xe4>
8100102f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001032:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001035:	01 d0                	add    %edx,%eax
81001037:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100103a:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100103f:	8b 40 08             	mov    0x8(%eax),%eax
81001042:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001045:	83 ca 01             	or     $0x1,%edx
81001048:	89 50 04             	mov    %edx,0x4(%eax)
8100104b:	e9 76 01 00 00       	jmp    810011c6 <malloc_extend_top+0x25a>
81001050:	a1 ac 53 00 81       	mov    0x810053ac,%eax
81001055:	83 f8 ff             	cmp    $0xffffffff,%eax
81001058:	75 0a                	jne    81001064 <malloc_extend_top+0xf8>
8100105a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100105d:	a3 ac 53 00 81       	mov    %eax,0x810053ac
81001062:	eb 13                	jmp    81001077 <malloc_extend_top+0x10b>
81001064:	8b 15 80 55 00 81    	mov    0x81005580,%edx
8100106a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001070:	01 d0                	add    %edx,%eax
81001072:	a3 80 55 00 81       	mov    %eax,0x81005580
81001077:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100107a:	83 c0 08             	add    $0x8,%eax
8100107d:	83 e0 07             	and    $0x7,%eax
81001080:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001083:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001087:	74 13                	je     8100109c <malloc_extend_top+0x130>
81001089:	b8 08 00 00 00       	mov    $0x8,%eax
8100108e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001091:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001094:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001097:	01 45 f4             	add    %eax,-0xc(%ebp)
8100109a:	eb 07                	jmp    810010a3 <malloc_extend_top+0x137>
8100109c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010a3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010a9:	01 d0                	add    %edx,%eax
810010ab:	89 c2                	mov    %eax,%edx
810010ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010b0:	83 e8 01             	sub    $0x1,%eax
810010b3:	21 c2                	and    %eax,%edx
810010b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010b8:	29 d0                	sub    %edx,%eax
810010ba:	01 45 f0             	add    %eax,-0x10(%ebp)
810010bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010c0:	83 e8 01             	sub    $0x1,%eax
810010c3:	21 45 f0             	and    %eax,-0x10(%ebp)
810010c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010c9:	83 ec 08             	sub    $0x8,%esp
810010cc:	50                   	push   %eax
810010cd:	ff 75 08             	pushl  0x8(%ebp)
810010d0:	e8 85 1f 00 00       	call   8100305a <_sbrk_r>
810010d5:	83 c4 10             	add    $0x10,%esp
810010d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010db:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810010df:	75 28                	jne    81001109 <malloc_extend_top+0x19d>
810010e1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010e8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810010ef:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010f5:	01 d0                	add    %edx,%eax
810010f7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010fa:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010fe:	74 09                	je     81001109 <malloc_extend_top+0x19d>
81001100:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001103:	83 e8 08             	sub    $0x8,%eax
81001106:	01 45 ec             	add    %eax,-0x14(%ebp)
81001109:	a1 80 55 00 81       	mov    0x81005580,%eax
8100110e:	89 c2                	mov    %eax,%edx
81001110:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001113:	01 d0                	add    %edx,%eax
81001115:	a3 80 55 00 81       	mov    %eax,0x81005580
8100111a:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
8100111f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001122:	89 42 08             	mov    %eax,0x8(%edx)
81001125:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001128:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100112b:	89 c2                	mov    %eax,%edx
8100112d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001130:	01 d0                	add    %edx,%eax
81001132:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001135:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100113a:	8b 40 08             	mov    0x8(%eax),%eax
8100113d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001140:	83 ca 01             	or     $0x1,%edx
81001143:	89 50 04             	mov    %edx,0x4(%eax)
81001146:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100114b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100114e:	74 76                	je     810011c6 <malloc_extend_top+0x25a>
81001150:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001154:	77 14                	ja     8100116a <malloc_extend_top+0x1fe>
81001156:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100115b:	8b 40 08             	mov    0x8(%eax),%eax
8100115e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001165:	e9 93 00 00 00       	jmp    810011fd <malloc_extend_top+0x291>
8100116a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100116d:	83 e8 0c             	sub    $0xc,%eax
81001170:	83 e0 f8             	and    $0xfffffff8,%eax
81001173:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001176:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001179:	8b 40 04             	mov    0x4(%eax),%eax
8100117c:	83 e0 01             	and    $0x1,%eax
8100117f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001182:	89 c2                	mov    %eax,%edx
81001184:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001187:	89 50 04             	mov    %edx,0x4(%eax)
8100118a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100118d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001190:	01 d0                	add    %edx,%eax
81001192:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001199:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100119c:	8d 50 04             	lea    0x4(%eax),%edx
8100119f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011a2:	01 d0                	add    %edx,%eax
810011a4:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810011ab:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810011af:	76 15                	jbe    810011c6 <malloc_extend_top+0x25a>
810011b1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011b4:	83 c0 08             	add    $0x8,%eax
810011b7:	83 ec 08             	sub    $0x8,%esp
810011ba:	50                   	push   %eax
810011bb:	ff 75 08             	pushl  0x8(%ebp)
810011be:	e8 93 28 00 00       	call   81003a56 <_free_r>
810011c3:	83 c4 10             	add    $0x10,%esp
810011c6:	a1 80 55 00 81       	mov    0x81005580,%eax
810011cb:	89 c2                	mov    %eax,%edx
810011cd:	a1 64 55 00 81       	mov    0x81005564,%eax
810011d2:	39 c2                	cmp    %eax,%edx
810011d4:	76 0a                	jbe    810011e0 <malloc_extend_top+0x274>
810011d6:	a1 80 55 00 81       	mov    0x81005580,%eax
810011db:	a3 64 55 00 81       	mov    %eax,0x81005564
810011e0:	a1 80 55 00 81       	mov    0x81005580,%eax
810011e5:	89 c2                	mov    %eax,%edx
810011e7:	a1 68 55 00 81       	mov    0x81005568,%eax
810011ec:	39 c2                	cmp    %eax,%edx
810011ee:	76 0d                	jbe    810011fd <malloc_extend_top+0x291>
810011f0:	a1 80 55 00 81       	mov    0x81005580,%eax
810011f5:	a3 68 55 00 81       	mov    %eax,0x81005568
810011fa:	eb 01                	jmp    810011fd <malloc_extend_top+0x291>
810011fc:	90                   	nop
810011fd:	c9                   	leave  
810011fe:	c3                   	ret    

810011ff <_malloc_r>:
810011ff:	55                   	push   %ebp
81001200:	89 e5                	mov    %esp,%ebp
81001202:	53                   	push   %ebx
81001203:	83 ec 44             	sub    $0x44,%esp
81001206:	8b 45 0c             	mov    0xc(%ebp),%eax
81001209:	83 c0 0b             	add    $0xb,%eax
8100120c:	83 f8 16             	cmp    $0x16,%eax
8100120f:	76 0b                	jbe    8100121c <_malloc_r+0x1d>
81001211:	8b 45 0c             	mov    0xc(%ebp),%eax
81001214:	83 c0 0b             	add    $0xb,%eax
81001217:	83 e0 f8             	and    $0xfffffff8,%eax
8100121a:	eb 05                	jmp    81001221 <_malloc_r+0x22>
8100121c:	b8 10 00 00 00       	mov    $0x10,%eax
81001221:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001224:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001227:	85 c0                	test   %eax,%eax
81001229:	78 08                	js     81001233 <_malloc_r+0x34>
8100122b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100122e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001231:	73 13                	jae    81001246 <_malloc_r+0x47>
81001233:	8b 45 08             	mov    0x8(%ebp),%eax
81001236:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100123c:	b8 00 00 00 00       	mov    $0x0,%eax
81001241:	e9 d6 07 00 00       	jmp    81001a1c <_malloc_r+0x81d>
81001246:	83 ec 0c             	sub    $0xc,%esp
81001249:	ff 75 08             	pushl  0x8(%ebp)
8100124c:	e8 d4 09 00 00       	call   81001c25 <__malloc_lock>
81001251:	83 c4 10             	add    $0x10,%esp
81001254:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100125b:	0f 87 b0 00 00 00    	ja     81001311 <_malloc_r+0x112>
81001261:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001264:	c1 e8 03             	shr    $0x3,%eax
81001267:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100126a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100126d:	83 c0 01             	add    $0x1,%eax
81001270:	01 c0                	add    %eax,%eax
81001272:	c1 e0 02             	shl    $0x2,%eax
81001275:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
8100127a:	83 e8 08             	sub    $0x8,%eax
8100127d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001280:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001283:	8b 40 0c             	mov    0xc(%eax),%eax
81001286:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001289:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100128c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100128f:	75 0d                	jne    8100129e <_malloc_r+0x9f>
81001291:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001295:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001298:	8b 40 0c             	mov    0xc(%eax),%eax
8100129b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100129e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a1:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810012a4:	74 62                	je     81001308 <_malloc_r+0x109>
810012a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a9:	8b 40 04             	mov    0x4(%eax),%eax
810012ac:	83 e0 fc             	and    $0xfffffffc,%eax
810012af:	89 45 cc             	mov    %eax,-0x34(%ebp)
810012b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b5:	8b 40 0c             	mov    0xc(%eax),%eax
810012b8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012be:	8b 40 08             	mov    0x8(%eax),%eax
810012c1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012c4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012c7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012ca:	89 50 0c             	mov    %edx,0xc(%eax)
810012cd:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012d0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012d3:	89 50 08             	mov    %edx,0x8(%eax)
810012d6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012d9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012dc:	01 d0                	add    %edx,%eax
810012de:	8b 50 04             	mov    0x4(%eax),%edx
810012e1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012e4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012e7:	01 c8                	add    %ecx,%eax
810012e9:	83 ca 01             	or     $0x1,%edx
810012ec:	89 50 04             	mov    %edx,0x4(%eax)
810012ef:	83 ec 0c             	sub    $0xc,%esp
810012f2:	ff 75 08             	pushl  0x8(%ebp)
810012f5:	e8 31 09 00 00       	call   81001c2b <__malloc_unlock>
810012fa:	83 c4 10             	add    $0x10,%esp
810012fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001300:	83 c0 08             	add    $0x8,%eax
81001303:	e9 14 07 00 00       	jmp    81001a1c <_malloc_r+0x81d>
81001308:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100130c:	e9 46 01 00 00       	jmp    81001457 <_malloc_r+0x258>
81001311:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001314:	c1 e8 09             	shr    $0x9,%eax
81001317:	85 c0                	test   %eax,%eax
81001319:	75 08                	jne    81001323 <_malloc_r+0x124>
8100131b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100131e:	c1 e8 03             	shr    $0x3,%eax
81001321:	eb 77                	jmp    8100139a <_malloc_r+0x19b>
81001323:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001326:	c1 e8 09             	shr    $0x9,%eax
81001329:	83 f8 04             	cmp    $0x4,%eax
8100132c:	77 0b                	ja     81001339 <_malloc_r+0x13a>
8100132e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001331:	c1 e8 06             	shr    $0x6,%eax
81001334:	83 c0 38             	add    $0x38,%eax
81001337:	eb 61                	jmp    8100139a <_malloc_r+0x19b>
81001339:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100133c:	c1 e8 09             	shr    $0x9,%eax
8100133f:	83 f8 14             	cmp    $0x14,%eax
81001342:	77 0b                	ja     8100134f <_malloc_r+0x150>
81001344:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001347:	c1 e8 09             	shr    $0x9,%eax
8100134a:	83 c0 5b             	add    $0x5b,%eax
8100134d:	eb 4b                	jmp    8100139a <_malloc_r+0x19b>
8100134f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001352:	c1 e8 09             	shr    $0x9,%eax
81001355:	83 f8 54             	cmp    $0x54,%eax
81001358:	77 0b                	ja     81001365 <_malloc_r+0x166>
8100135a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100135d:	c1 e8 0c             	shr    $0xc,%eax
81001360:	83 c0 6e             	add    $0x6e,%eax
81001363:	eb 35                	jmp    8100139a <_malloc_r+0x19b>
81001365:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001368:	c1 e8 09             	shr    $0x9,%eax
8100136b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001370:	77 0b                	ja     8100137d <_malloc_r+0x17e>
81001372:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001375:	c1 e8 0f             	shr    $0xf,%eax
81001378:	83 c0 77             	add    $0x77,%eax
8100137b:	eb 1d                	jmp    8100139a <_malloc_r+0x19b>
8100137d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001380:	c1 e8 09             	shr    $0x9,%eax
81001383:	3d 54 05 00 00       	cmp    $0x554,%eax
81001388:	77 0b                	ja     81001395 <_malloc_r+0x196>
8100138a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100138d:	c1 e8 12             	shr    $0x12,%eax
81001390:	83 c0 7c             	add    $0x7c,%eax
81001393:	eb 05                	jmp    8100139a <_malloc_r+0x19b>
81001395:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100139a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100139d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013a0:	83 c0 01             	add    $0x1,%eax
810013a3:	01 c0                	add    %eax,%eax
810013a5:	c1 e0 02             	shl    $0x2,%eax
810013a8:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
810013ad:	83 e8 08             	sub    $0x8,%eax
810013b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013b3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013b6:	8b 40 0c             	mov    0xc(%eax),%eax
810013b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013bc:	e9 86 00 00 00       	jmp    81001447 <_malloc_r+0x248>
810013c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c4:	8b 40 04             	mov    0x4(%eax),%eax
810013c7:	83 e0 fc             	and    $0xfffffffc,%eax
810013ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
810013cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013d0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810013d3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013d6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810013da:	7e 06                	jle    810013e2 <_malloc_r+0x1e3>
810013dc:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013e0:	eb 71                	jmp    81001453 <_malloc_r+0x254>
810013e2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013e6:	78 56                	js     8100143e <_malloc_r+0x23f>
810013e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013eb:	8b 40 0c             	mov    0xc(%eax),%eax
810013ee:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f4:	8b 40 08             	mov    0x8(%eax),%eax
810013f7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013fa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013fd:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001400:	89 50 0c             	mov    %edx,0xc(%eax)
81001403:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001406:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001409:	89 50 08             	mov    %edx,0x8(%eax)
8100140c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100140f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001412:	01 d0                	add    %edx,%eax
81001414:	8b 50 04             	mov    0x4(%eax),%edx
81001417:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100141a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100141d:	01 c8                	add    %ecx,%eax
8100141f:	83 ca 01             	or     $0x1,%edx
81001422:	89 50 04             	mov    %edx,0x4(%eax)
81001425:	83 ec 0c             	sub    $0xc,%esp
81001428:	ff 75 08             	pushl  0x8(%ebp)
8100142b:	e8 fb 07 00 00       	call   81001c2b <__malloc_unlock>
81001430:	83 c4 10             	add    $0x10,%esp
81001433:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001436:	83 c0 08             	add    $0x8,%eax
81001439:	e9 de 05 00 00       	jmp    81001a1c <_malloc_r+0x81d>
8100143e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001441:	8b 40 0c             	mov    0xc(%eax),%eax
81001444:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001447:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100144a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100144d:	0f 85 6e ff ff ff    	jne    810013c1 <_malloc_r+0x1c2>
81001453:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001457:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
8100145c:	8b 40 08             	mov    0x8(%eax),%eax
8100145f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001462:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
81001467:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100146a:	0f 84 9c 02 00 00    	je     8100170c <_malloc_r+0x50d>
81001470:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001473:	8b 40 04             	mov    0x4(%eax),%eax
81001476:	83 e0 fc             	and    $0xfffffffc,%eax
81001479:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100147c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100147f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001482:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001485:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001489:	7e 7a                	jle    81001505 <_malloc_r+0x306>
8100148b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100148e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001491:	01 d0                	add    %edx,%eax
81001493:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001496:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001499:	83 c8 01             	or     $0x1,%eax
8100149c:	89 c2                	mov    %eax,%edx
8100149e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014a1:	89 50 04             	mov    %edx,0x4(%eax)
810014a4:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
810014a9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810014ac:	89 50 0c             	mov    %edx,0xc(%eax)
810014af:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
810014b4:	8b 40 0c             	mov    0xc(%eax),%eax
810014b7:	89 42 08             	mov    %eax,0x8(%edx)
810014ba:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
810014bf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014c2:	89 50 0c             	mov    %edx,0xc(%eax)
810014c5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014c8:	8b 50 0c             	mov    0xc(%eax),%edx
810014cb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014ce:	89 50 08             	mov    %edx,0x8(%eax)
810014d1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014d4:	83 c8 01             	or     $0x1,%eax
810014d7:	89 c2                	mov    %eax,%edx
810014d9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014dc:	89 50 04             	mov    %edx,0x4(%eax)
810014df:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014e2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014e5:	01 c2                	add    %eax,%edx
810014e7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014ea:	89 02                	mov    %eax,(%edx)
810014ec:	83 ec 0c             	sub    $0xc,%esp
810014ef:	ff 75 08             	pushl  0x8(%ebp)
810014f2:	e8 34 07 00 00       	call   81001c2b <__malloc_unlock>
810014f7:	83 c4 10             	add    $0x10,%esp
810014fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fd:	83 c0 08             	add    $0x8,%eax
81001500:	e9 17 05 00 00       	jmp    81001a1c <_malloc_r+0x81d>
81001505:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
8100150a:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
8100150f:	89 50 0c             	mov    %edx,0xc(%eax)
81001512:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81001517:	8b 40 0c             	mov    0xc(%eax),%eax
8100151a:	89 42 08             	mov    %eax,0x8(%edx)
8100151d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001521:	78 32                	js     81001555 <_malloc_r+0x356>
81001523:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001526:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001529:	01 d0                	add    %edx,%eax
8100152b:	8b 50 04             	mov    0x4(%eax),%edx
8100152e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001531:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001534:	01 c8                	add    %ecx,%eax
81001536:	83 ca 01             	or     $0x1,%edx
81001539:	89 50 04             	mov    %edx,0x4(%eax)
8100153c:	83 ec 0c             	sub    $0xc,%esp
8100153f:	ff 75 08             	pushl  0x8(%ebp)
81001542:	e8 e4 06 00 00       	call   81001c2b <__malloc_unlock>
81001547:	83 c4 10             	add    $0x10,%esp
8100154a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154d:	83 c0 08             	add    $0x8,%eax
81001550:	e9 c7 04 00 00       	jmp    81001a1c <_malloc_r+0x81d>
81001555:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100155c:	77 7f                	ja     810015dd <_malloc_r+0x3de>
8100155e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001561:	c1 e8 03             	shr    $0x3,%eax
81001564:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001567:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100156c:	8b 58 04             	mov    0x4(%eax),%ebx
8100156f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001572:	8d 50 03             	lea    0x3(%eax),%edx
81001575:	85 c0                	test   %eax,%eax
81001577:	0f 48 c2             	cmovs  %edx,%eax
8100157a:	c1 f8 02             	sar    $0x2,%eax
8100157d:	ba 01 00 00 00       	mov    $0x1,%edx
81001582:	89 c1                	mov    %eax,%ecx
81001584:	d3 e2                	shl    %cl,%edx
81001586:	89 d0                	mov    %edx,%eax
81001588:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
8100158d:	09 d8                	or     %ebx,%eax
8100158f:	89 42 04             	mov    %eax,0x4(%edx)
81001592:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001595:	83 c0 01             	add    $0x1,%eax
81001598:	01 c0                	add    %eax,%eax
8100159a:	c1 e0 02             	shl    $0x2,%eax
8100159d:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
810015a2:	83 e8 08             	sub    $0x8,%eax
810015a5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015a8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015ab:	8b 40 08             	mov    0x8(%eax),%eax
810015ae:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015b7:	89 50 0c             	mov    %edx,0xc(%eax)
810015ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015bd:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015c0:	89 50 08             	mov    %edx,0x8(%eax)
810015c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015c6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015c9:	89 50 08             	mov    %edx,0x8(%eax)
810015cc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015cf:	8b 50 08             	mov    0x8(%eax),%edx
810015d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015d5:	89 50 0c             	mov    %edx,0xc(%eax)
810015d8:	e9 2f 01 00 00       	jmp    8100170c <_malloc_r+0x50d>
810015dd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e0:	c1 e8 09             	shr    $0x9,%eax
810015e3:	85 c0                	test   %eax,%eax
810015e5:	75 08                	jne    810015ef <_malloc_r+0x3f0>
810015e7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ea:	c1 e8 03             	shr    $0x3,%eax
810015ed:	eb 77                	jmp    81001666 <_malloc_r+0x467>
810015ef:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f2:	c1 e8 09             	shr    $0x9,%eax
810015f5:	83 f8 04             	cmp    $0x4,%eax
810015f8:	77 0b                	ja     81001605 <_malloc_r+0x406>
810015fa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015fd:	c1 e8 06             	shr    $0x6,%eax
81001600:	83 c0 38             	add    $0x38,%eax
81001603:	eb 61                	jmp    81001666 <_malloc_r+0x467>
81001605:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001608:	c1 e8 09             	shr    $0x9,%eax
8100160b:	83 f8 14             	cmp    $0x14,%eax
8100160e:	77 0b                	ja     8100161b <_malloc_r+0x41c>
81001610:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001613:	c1 e8 09             	shr    $0x9,%eax
81001616:	83 c0 5b             	add    $0x5b,%eax
81001619:	eb 4b                	jmp    81001666 <_malloc_r+0x467>
8100161b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100161e:	c1 e8 09             	shr    $0x9,%eax
81001621:	83 f8 54             	cmp    $0x54,%eax
81001624:	77 0b                	ja     81001631 <_malloc_r+0x432>
81001626:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001629:	c1 e8 0c             	shr    $0xc,%eax
8100162c:	83 c0 6e             	add    $0x6e,%eax
8100162f:	eb 35                	jmp    81001666 <_malloc_r+0x467>
81001631:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001634:	c1 e8 09             	shr    $0x9,%eax
81001637:	3d 54 01 00 00       	cmp    $0x154,%eax
8100163c:	77 0b                	ja     81001649 <_malloc_r+0x44a>
8100163e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001641:	c1 e8 0f             	shr    $0xf,%eax
81001644:	83 c0 77             	add    $0x77,%eax
81001647:	eb 1d                	jmp    81001666 <_malloc_r+0x467>
81001649:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100164c:	c1 e8 09             	shr    $0x9,%eax
8100164f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001654:	77 0b                	ja     81001661 <_malloc_r+0x462>
81001656:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001659:	c1 e8 12             	shr    $0x12,%eax
8100165c:	83 c0 7c             	add    $0x7c,%eax
8100165f:	eb 05                	jmp    81001666 <_malloc_r+0x467>
81001661:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001666:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001669:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100166c:	83 c0 01             	add    $0x1,%eax
8100166f:	01 c0                	add    %eax,%eax
81001671:	c1 e0 02             	shl    $0x2,%eax
81001674:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
81001679:	83 e8 08             	sub    $0x8,%eax
8100167c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100167f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001682:	8b 40 08             	mov    0x8(%eax),%eax
81001685:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001688:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100168b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100168e:	75 36                	jne    810016c6 <_malloc_r+0x4c7>
81001690:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001695:	8b 58 04             	mov    0x4(%eax),%ebx
81001698:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100169b:	8d 50 03             	lea    0x3(%eax),%edx
8100169e:	85 c0                	test   %eax,%eax
810016a0:	0f 48 c2             	cmovs  %edx,%eax
810016a3:	c1 f8 02             	sar    $0x2,%eax
810016a6:	ba 01 00 00 00       	mov    $0x1,%edx
810016ab:	89 c1                	mov    %eax,%ecx
810016ad:	d3 e2                	shl    %cl,%edx
810016af:	89 d0                	mov    %edx,%eax
810016b1:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
810016b6:	09 d8                	or     %ebx,%eax
810016b8:	89 42 04             	mov    %eax,0x4(%edx)
810016bb:	eb 28                	jmp    810016e5 <_malloc_r+0x4e6>
810016bd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016c0:	8b 40 08             	mov    0x8(%eax),%eax
810016c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016c6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016c9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810016cc:	74 0e                	je     810016dc <_malloc_r+0x4dd>
810016ce:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016d1:	8b 40 04             	mov    0x4(%eax),%eax
810016d4:	83 e0 fc             	and    $0xfffffffc,%eax
810016d7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810016da:	72 e1                	jb     810016bd <_malloc_r+0x4be>
810016dc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016df:	8b 40 0c             	mov    0xc(%eax),%eax
810016e2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016e8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016eb:	89 50 0c             	mov    %edx,0xc(%eax)
810016ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016f4:	89 50 08             	mov    %edx,0x8(%eax)
810016f7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016fa:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016fd:	89 50 08             	mov    %edx,0x8(%eax)
81001700:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001703:	8b 50 08             	mov    0x8(%eax),%edx
81001706:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001709:	89 50 0c             	mov    %edx,0xc(%eax)
8100170c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100170f:	8d 50 03             	lea    0x3(%eax),%edx
81001712:	85 c0                	test   %eax,%eax
81001714:	0f 48 c2             	cmovs  %edx,%eax
81001717:	c1 f8 02             	sar    $0x2,%eax
8100171a:	ba 01 00 00 00       	mov    $0x1,%edx
8100171f:	89 c1                	mov    %eax,%ecx
81001721:	d3 e2                	shl    %cl,%edx
81001723:	89 d0                	mov    %edx,%eax
81001725:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001728:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100172d:	8b 40 04             	mov    0x4(%eax),%eax
81001730:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001733:	0f 87 13 02 00 00    	ja     8100194c <_malloc_r+0x74d>
81001739:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100173e:	8b 40 04             	mov    0x4(%eax),%eax
81001741:	23 45 e4             	and    -0x1c(%ebp),%eax
81001744:	85 c0                	test   %eax,%eax
81001746:	75 27                	jne    8100176f <_malloc_r+0x570>
81001748:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100174b:	83 e0 fc             	and    $0xfffffffc,%eax
8100174e:	83 c0 04             	add    $0x4,%eax
81001751:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001754:	d1 65 e4             	shll   -0x1c(%ebp)
81001757:	eb 07                	jmp    81001760 <_malloc_r+0x561>
81001759:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100175d:	d1 65 e4             	shll   -0x1c(%ebp)
81001760:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001765:	8b 40 04             	mov    0x4(%eax),%eax
81001768:	23 45 e4             	and    -0x1c(%ebp),%eax
8100176b:	85 c0                	test   %eax,%eax
8100176d:	74 ea                	je     81001759 <_malloc_r+0x55a>
8100176f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001772:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001775:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001778:	83 c0 01             	add    $0x1,%eax
8100177b:	01 c0                	add    %eax,%eax
8100177d:	c1 e0 02             	shl    $0x2,%eax
81001780:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
81001785:	83 e8 08             	sub    $0x8,%eax
81001788:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100178b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100178e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001791:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001794:	8b 40 0c             	mov    0xc(%eax),%eax
81001797:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100179a:	e9 22 01 00 00       	jmp    810018c1 <_malloc_r+0x6c2>
8100179f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a2:	8b 40 04             	mov    0x4(%eax),%eax
810017a5:	83 e0 fc             	and    $0xfffffffc,%eax
810017a8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810017ab:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017ae:	2b 45 d0             	sub    -0x30(%ebp),%eax
810017b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017b4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810017b8:	0f 8e 9e 00 00 00    	jle    8100185c <_malloc_r+0x65d>
810017be:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017c1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017c4:	01 d0                	add    %edx,%eax
810017c6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810017c9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017cc:	83 c8 01             	or     $0x1,%eax
810017cf:	89 c2                	mov    %eax,%edx
810017d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d4:	89 50 04             	mov    %edx,0x4(%eax)
810017d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017da:	8b 40 0c             	mov    0xc(%eax),%eax
810017dd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017e3:	8b 40 08             	mov    0x8(%eax),%eax
810017e6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017e9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017ec:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017ef:	89 50 0c             	mov    %edx,0xc(%eax)
810017f2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017f5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017f8:	89 50 08             	mov    %edx,0x8(%eax)
810017fb:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
81001800:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001803:	89 50 0c             	mov    %edx,0xc(%eax)
81001806:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
8100180b:	8b 40 0c             	mov    0xc(%eax),%eax
8100180e:	89 42 08             	mov    %eax,0x8(%edx)
81001811:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81001816:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001819:	89 50 0c             	mov    %edx,0xc(%eax)
8100181c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100181f:	8b 50 0c             	mov    0xc(%eax),%edx
81001822:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001825:	89 50 08             	mov    %edx,0x8(%eax)
81001828:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100182b:	83 c8 01             	or     $0x1,%eax
8100182e:	89 c2                	mov    %eax,%edx
81001830:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001833:	89 50 04             	mov    %edx,0x4(%eax)
81001836:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001839:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100183c:	01 c2                	add    %eax,%edx
8100183e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001841:	89 02                	mov    %eax,(%edx)
81001843:	83 ec 0c             	sub    $0xc,%esp
81001846:	ff 75 08             	pushl  0x8(%ebp)
81001849:	e8 dd 03 00 00       	call   81001c2b <__malloc_unlock>
8100184e:	83 c4 10             	add    $0x10,%esp
81001851:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001854:	83 c0 08             	add    $0x8,%eax
81001857:	e9 c0 01 00 00       	jmp    81001a1c <_malloc_r+0x81d>
8100185c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001860:	78 56                	js     810018b8 <_malloc_r+0x6b9>
81001862:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001865:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001868:	01 d0                	add    %edx,%eax
8100186a:	8b 50 04             	mov    0x4(%eax),%edx
8100186d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001870:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001873:	01 c8                	add    %ecx,%eax
81001875:	83 ca 01             	or     $0x1,%edx
81001878:	89 50 04             	mov    %edx,0x4(%eax)
8100187b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187e:	8b 40 0c             	mov    0xc(%eax),%eax
81001881:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001884:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001887:	8b 40 08             	mov    0x8(%eax),%eax
8100188a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100188d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001890:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001893:	89 50 0c             	mov    %edx,0xc(%eax)
81001896:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001899:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100189c:	89 50 08             	mov    %edx,0x8(%eax)
8100189f:	83 ec 0c             	sub    $0xc,%esp
810018a2:	ff 75 08             	pushl  0x8(%ebp)
810018a5:	e8 81 03 00 00       	call   81001c2b <__malloc_unlock>
810018aa:	83 c4 10             	add    $0x10,%esp
810018ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b0:	83 c0 08             	add    $0x8,%eax
810018b3:	e9 64 01 00 00       	jmp    81001a1c <_malloc_r+0x81d>
810018b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018bb:	8b 40 0c             	mov    0xc(%eax),%eax
810018be:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810018c7:	0f 85 d2 fe ff ff    	jne    8100179f <_malloc_r+0x5a0>
810018cd:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810018d1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810018d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018d8:	83 e0 03             	and    $0x3,%eax
810018db:	85 c0                	test   %eax,%eax
810018dd:	0f 85 ae fe ff ff    	jne    81001791 <_malloc_r+0x592>
810018e3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018e6:	83 e0 03             	and    $0x3,%eax
810018e9:	85 c0                	test   %eax,%eax
810018eb:	75 19                	jne    81001906 <_malloc_r+0x707>
810018ed:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
810018f2:	8b 48 04             	mov    0x4(%eax),%ecx
810018f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018f8:	f7 d0                	not    %eax
810018fa:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
810018ff:	21 c8                	and    %ecx,%eax
81001901:	89 42 04             	mov    %eax,0x4(%edx)
81001904:	eb 13                	jmp    81001919 <_malloc_r+0x71a>
81001906:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8100190a:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100190e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001911:	8b 40 08             	mov    0x8(%eax),%eax
81001914:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001917:	74 ca                	je     810018e3 <_malloc_r+0x6e4>
81001919:	d1 65 e4             	shll   -0x1c(%ebp)
8100191c:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001921:	8b 40 04             	mov    0x4(%eax),%eax
81001924:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001927:	77 23                	ja     8100194c <_malloc_r+0x74d>
81001929:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100192d:	74 1d                	je     8100194c <_malloc_r+0x74d>
8100192f:	eb 07                	jmp    81001938 <_malloc_r+0x739>
81001931:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001935:	d1 65 e4             	shll   -0x1c(%ebp)
81001938:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100193d:	8b 40 04             	mov    0x4(%eax),%eax
81001940:	23 45 e4             	and    -0x1c(%ebp),%eax
81001943:	85 c0                	test   %eax,%eax
81001945:	74 ea                	je     81001931 <_malloc_r+0x732>
81001947:	e9 23 fe ff ff       	jmp    8100176f <_malloc_r+0x570>
8100194c:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001951:	8b 40 08             	mov    0x8(%eax),%eax
81001954:	8b 40 04             	mov    0x4(%eax),%eax
81001957:	83 e0 fc             	and    $0xfffffffc,%eax
8100195a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100195d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001960:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001965:	8b 40 08             	mov    0x8(%eax),%eax
81001968:	8b 40 04             	mov    0x4(%eax),%eax
8100196b:	83 e0 fc             	and    $0xfffffffc,%eax
8100196e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001971:	77 06                	ja     81001979 <_malloc_r+0x77a>
81001973:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001977:	7f 53                	jg     810019cc <_malloc_r+0x7cd>
81001979:	83 ec 08             	sub    $0x8,%esp
8100197c:	ff 75 d0             	pushl  -0x30(%ebp)
8100197f:	ff 75 08             	pushl  0x8(%ebp)
81001982:	e8 e5 f5 ff ff       	call   81000f6c <malloc_extend_top>
81001987:	83 c4 10             	add    $0x10,%esp
8100198a:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100198f:	8b 40 08             	mov    0x8(%eax),%eax
81001992:	8b 40 04             	mov    0x4(%eax),%eax
81001995:	83 e0 fc             	and    $0xfffffffc,%eax
81001998:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100199b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100199e:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
810019a3:	8b 40 08             	mov    0x8(%eax),%eax
810019a6:	8b 40 04             	mov    0x4(%eax),%eax
810019a9:	83 e0 fc             	and    $0xfffffffc,%eax
810019ac:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810019af:	77 06                	ja     810019b7 <_malloc_r+0x7b8>
810019b1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810019b5:	7f 15                	jg     810019cc <_malloc_r+0x7cd>
810019b7:	83 ec 0c             	sub    $0xc,%esp
810019ba:	ff 75 08             	pushl  0x8(%ebp)
810019bd:	e8 69 02 00 00       	call   81001c2b <__malloc_unlock>
810019c2:	83 c4 10             	add    $0x10,%esp
810019c5:	b8 00 00 00 00       	mov    $0x0,%eax
810019ca:	eb 50                	jmp    81001a1c <_malloc_r+0x81d>
810019cc:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
810019d1:	8b 40 08             	mov    0x8(%eax),%eax
810019d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019d7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019da:	83 c8 01             	or     $0x1,%eax
810019dd:	89 c2                	mov    %eax,%edx
810019df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019e2:	89 50 04             	mov    %edx,0x4(%eax)
810019e5:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
810019ea:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019ed:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019f0:	01 c8                	add    %ecx,%eax
810019f2:	89 42 08             	mov    %eax,0x8(%edx)
810019f5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019f8:	83 c8 01             	or     $0x1,%eax
810019fb:	89 c2                	mov    %eax,%edx
810019fd:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81001a02:	8b 40 08             	mov    0x8(%eax),%eax
81001a05:	89 50 04             	mov    %edx,0x4(%eax)
81001a08:	83 ec 0c             	sub    $0xc,%esp
81001a0b:	ff 75 08             	pushl  0x8(%ebp)
81001a0e:	e8 18 02 00 00       	call   81001c2b <__malloc_unlock>
81001a13:	83 c4 10             	add    $0x10,%esp
81001a16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a19:	83 c0 08             	add    $0x8,%eax
81001a1c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001a1f:	c9                   	leave  
81001a20:	c3                   	ret    
81001a21:	66 90                	xchg   %ax,%ax
81001a23:	66 90                	xchg   %ax,%ax
81001a25:	66 90                	xchg   %ax,%ax
81001a27:	66 90                	xchg   %ax,%ax
81001a29:	66 90                	xchg   %ax,%ax
81001a2b:	66 90                	xchg   %ax,%ax
81001a2d:	66 90                	xchg   %ax,%ax
81001a2f:	90                   	nop

81001a30 <memchr>:
81001a30:	55                   	push   %ebp
81001a31:	89 e5                	mov    %esp,%ebp
81001a33:	57                   	push   %edi
81001a34:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a38:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a3b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a3e:	31 d2                	xor    %edx,%edx
81001a40:	85 c9                	test   %ecx,%ecx
81001a42:	74 79                	je     81001abd <L20>
81001a44:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a4a:	74 28                	je     81001a74 <L5>
81001a4c:	3a 07                	cmp    (%edi),%al
81001a4e:	74 6a                	je     81001aba <L15>
81001a50:	47                   	inc    %edi
81001a51:	49                   	dec    %ecx
81001a52:	74 69                	je     81001abd <L20>
81001a54:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a5a:	74 18                	je     81001a74 <L5>
81001a5c:	3a 07                	cmp    (%edi),%al
81001a5e:	74 5a                	je     81001aba <L15>
81001a60:	47                   	inc    %edi
81001a61:	49                   	dec    %ecx
81001a62:	74 59                	je     81001abd <L20>
81001a64:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a6a:	74 08                	je     81001a74 <L5>
81001a6c:	3a 07                	cmp    (%edi),%al
81001a6e:	74 4a                	je     81001aba <L15>
81001a70:	47                   	inc    %edi
81001a71:	49                   	dec    %ecx
81001a72:	74 49                	je     81001abd <L20>

81001a74 <L5>:
81001a74:	88 c4                	mov    %al,%ah
81001a76:	89 c2                	mov    %eax,%edx
81001a78:	c1 e2 10             	shl    $0x10,%edx
81001a7b:	09 d0                	or     %edx,%eax
81001a7d:	53                   	push   %ebx
81001a7e:	66 90                	xchg   %ax,%ax

81001a80 <L8>:
81001a80:	83 e9 04             	sub    $0x4,%ecx
81001a83:	72 1c                	jb     81001aa1 <L9>
81001a85:	8b 17                	mov    (%edi),%edx
81001a87:	83 c7 04             	add    $0x4,%edi
81001a8a:	31 c2                	xor    %eax,%edx
81001a8c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a92:	f7 d2                	not    %edx
81001a94:	21 d3                	and    %edx,%ebx
81001a96:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a9c:	74 e2                	je     81001a80 <L8>
81001a9e:	83 ef 04             	sub    $0x4,%edi

81001aa1 <L9>:
81001aa1:	5b                   	pop    %ebx
81001aa2:	31 d2                	xor    %edx,%edx
81001aa4:	83 c1 04             	add    $0x4,%ecx
81001aa7:	74 14                	je     81001abd <L20>
81001aa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001ab0 <L10>:
81001ab0:	3a 07                	cmp    (%edi),%al
81001ab2:	74 06                	je     81001aba <L15>
81001ab4:	47                   	inc    %edi
81001ab5:	49                   	dec    %ecx
81001ab6:	75 f8                	jne    81001ab0 <L10>
81001ab8:	31 ff                	xor    %edi,%edi

81001aba <L15>:
81001aba:	4a                   	dec    %edx
81001abb:	21 fa                	and    %edi,%edx

81001abd <L20>:
81001abd:	89 d0                	mov    %edx,%eax
81001abf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001ac2:	5f                   	pop    %edi
81001ac3:	c9                   	leave  
81001ac4:	c3                   	ret    
81001ac5:	66 90                	xchg   %ax,%ax
81001ac7:	90                   	nop

81001ac8 <memcpy>:
81001ac8:	55                   	push   %ebp
81001ac9:	89 e5                	mov    %esp,%ebp
81001acb:	56                   	push   %esi
81001acc:	57                   	push   %edi
81001acd:	53                   	push   %ebx
81001ace:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ad1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001ad4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001ad7:	fc                   	cld    
81001ad8:	83 f9 08             	cmp    $0x8,%ecx
81001adb:	76 26                	jbe    81001b03 <memcpy+0x3b>
81001add:	89 fa                	mov    %edi,%edx
81001adf:	89 cb                	mov    %ecx,%ebx
81001ae1:	83 e2 03             	and    $0x3,%edx
81001ae4:	74 10                	je     81001af6 <memcpy+0x2e>
81001ae6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001aeb:	29 d1                	sub    %edx,%ecx
81001aed:	83 e1 03             	and    $0x3,%ecx
81001af0:	29 cb                	sub    %ecx,%ebx
81001af2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001af4:	89 d9                	mov    %ebx,%ecx
81001af6:	c1 e9 02             	shr    $0x2,%ecx
81001af9:	8d 76 00             	lea    0x0(%esi),%esi
81001afc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001afe:	89 d9                	mov    %ebx,%ecx
81001b00:	83 e1 03             	and    $0x3,%ecx
81001b03:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b05:	8b 45 08             	mov    0x8(%ebp),%eax
81001b08:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b0b:	5b                   	pop    %ebx
81001b0c:	5f                   	pop    %edi
81001b0d:	5e                   	pop    %esi
81001b0e:	c9                   	leave  
81001b0f:	c3                   	ret    

81001b10 <memmove>:
81001b10:	55                   	push   %ebp
81001b11:	89 e5                	mov    %esp,%ebp
81001b13:	56                   	push   %esi
81001b14:	57                   	push   %edi
81001b15:	53                   	push   %ebx
81001b16:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b19:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b1c:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b1f:	fc                   	cld    
81001b20:	39 fe                	cmp    %edi,%esi
81001b22:	73 43                	jae    81001b67 <memmove+0x57>
81001b24:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001b28:	39 df                	cmp    %ebx,%edi
81001b2a:	77 3b                	ja     81001b67 <memmove+0x57>
81001b2c:	01 ce                	add    %ecx,%esi
81001b2e:	01 cf                	add    %ecx,%edi
81001b30:	fd                   	std    
81001b31:	83 f9 08             	cmp    $0x8,%ecx
81001b34:	76 2b                	jbe    81001b61 <memmove+0x51>
81001b36:	89 fa                	mov    %edi,%edx
81001b38:	89 cb                	mov    %ecx,%ebx
81001b3a:	83 e2 03             	and    $0x3,%edx
81001b3d:	74 0c                	je     81001b4b <memmove+0x3b>
81001b3f:	89 d1                	mov    %edx,%ecx
81001b41:	4e                   	dec    %esi
81001b42:	4f                   	dec    %edi
81001b43:	29 cb                	sub    %ecx,%ebx
81001b45:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b47:	89 d9                	mov    %ebx,%ecx
81001b49:	46                   	inc    %esi
81001b4a:	47                   	inc    %edi
81001b4b:	c1 e9 02             	shr    $0x2,%ecx
81001b4e:	83 ee 04             	sub    $0x4,%esi
81001b51:	83 ef 04             	sub    $0x4,%edi
81001b54:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b56:	83 c6 04             	add    $0x4,%esi
81001b59:	83 c7 04             	add    $0x4,%edi
81001b5c:	89 d9                	mov    %ebx,%ecx
81001b5e:	83 e1 03             	and    $0x3,%ecx
81001b61:	4e                   	dec    %esi
81001b62:	4f                   	dec    %edi
81001b63:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b65:	eb 2a                	jmp    81001b91 <memmove+0x81>
81001b67:	83 f9 08             	cmp    $0x8,%ecx
81001b6a:	76 23                	jbe    81001b8f <memmove+0x7f>
81001b6c:	89 fa                	mov    %edi,%edx
81001b6e:	89 cb                	mov    %ecx,%ebx
81001b70:	83 e2 03             	and    $0x3,%edx
81001b73:	74 10                	je     81001b85 <memmove+0x75>
81001b75:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b7a:	29 d1                	sub    %edx,%ecx
81001b7c:	83 e1 03             	and    $0x3,%ecx
81001b7f:	29 cb                	sub    %ecx,%ebx
81001b81:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b83:	89 d9                	mov    %ebx,%ecx
81001b85:	c1 e9 02             	shr    $0x2,%ecx
81001b88:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b8a:	89 d9                	mov    %ebx,%ecx
81001b8c:	83 e1 03             	and    $0x3,%ecx
81001b8f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b91:	8b 45 08             	mov    0x8(%ebp),%eax
81001b94:	fc                   	cld    
81001b95:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b98:	5b                   	pop    %ebx
81001b99:	5f                   	pop    %edi
81001b9a:	5e                   	pop    %esi
81001b9b:	c9                   	leave  
81001b9c:	c3                   	ret    

81001b9d <memset>:
81001b9d:	55                   	push   %ebp
81001b9e:	89 e5                	mov    %esp,%ebp
81001ba0:	57                   	push   %edi
81001ba1:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ba4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001ba8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001bab:	fc                   	cld    
81001bac:	83 f9 10             	cmp    $0x10,%ecx
81001baf:	76 69                	jbe    81001c1a <memset+0x7d>
81001bb1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bb7:	74 4c                	je     81001c05 <memset+0x68>
81001bb9:	88 07                	mov    %al,(%edi)
81001bbb:	47                   	inc    %edi
81001bbc:	49                   	dec    %ecx
81001bbd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bc3:	74 40                	je     81001c05 <memset+0x68>
81001bc5:	88 07                	mov    %al,(%edi)
81001bc7:	47                   	inc    %edi
81001bc8:	49                   	dec    %ecx
81001bc9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bcf:	74 34                	je     81001c05 <memset+0x68>
81001bd1:	88 07                	mov    %al,(%edi)
81001bd3:	47                   	inc    %edi
81001bd4:	49                   	dec    %ecx
81001bd5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bdb:	74 28                	je     81001c05 <memset+0x68>
81001bdd:	88 07                	mov    %al,(%edi)
81001bdf:	47                   	inc    %edi
81001be0:	49                   	dec    %ecx
81001be1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001be7:	74 1c                	je     81001c05 <memset+0x68>
81001be9:	88 07                	mov    %al,(%edi)
81001beb:	47                   	inc    %edi
81001bec:	49                   	dec    %ecx
81001bed:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bf3:	74 10                	je     81001c05 <memset+0x68>
81001bf5:	88 07                	mov    %al,(%edi)
81001bf7:	47                   	inc    %edi
81001bf8:	49                   	dec    %ecx
81001bf9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bff:	74 04                	je     81001c05 <memset+0x68>
81001c01:	88 07                	mov    %al,(%edi)
81001c03:	47                   	inc    %edi
81001c04:	49                   	dec    %ecx
81001c05:	88 c4                	mov    %al,%ah
81001c07:	89 c2                	mov    %eax,%edx
81001c09:	c1 e2 10             	shl    $0x10,%edx
81001c0c:	09 d0                	or     %edx,%eax
81001c0e:	89 ca                	mov    %ecx,%edx
81001c10:	c1 e9 02             	shr    $0x2,%ecx
81001c13:	83 e2 03             	and    $0x3,%edx
81001c16:	f3 ab                	rep stos %eax,%es:(%edi)
81001c18:	89 d1                	mov    %edx,%ecx
81001c1a:	f3 aa                	rep stos %al,%es:(%edi)
81001c1c:	8b 45 08             	mov    0x8(%ebp),%eax
81001c1f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001c22:	5f                   	pop    %edi
81001c23:	c9                   	leave  
81001c24:	c3                   	ret    

81001c25 <__malloc_lock>:
81001c25:	55                   	push   %ebp
81001c26:	89 e5                	mov    %esp,%ebp
81001c28:	90                   	nop
81001c29:	5d                   	pop    %ebp
81001c2a:	c3                   	ret    

81001c2b <__malloc_unlock>:
81001c2b:	55                   	push   %ebp
81001c2c:	89 e5                	mov    %esp,%ebp
81001c2e:	90                   	nop
81001c2f:	5d                   	pop    %ebp
81001c30:	c3                   	ret    

81001c31 <__sprint_r>:
81001c31:	55                   	push   %ebp
81001c32:	89 e5                	mov    %esp,%ebp
81001c34:	56                   	push   %esi
81001c35:	53                   	push   %ebx
81001c36:	83 ec 10             	sub    $0x10,%esp
81001c39:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001c3c:	be 00 00 00 00       	mov    $0x0,%esi
81001c41:	8b 43 08             	mov    0x8(%ebx),%eax
81001c44:	85 c0                	test   %eax,%eax
81001c46:	75 11                	jne    81001c59 <__sprint_r+0x28>
81001c48:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001c4f:	b8 00 00 00 00       	mov    $0x0,%eax
81001c54:	e9 ad 00 00 00       	jmp    81001d06 <__sprint_r+0xd5>
81001c59:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c5c:	8b 40 64             	mov    0x64(%eax),%eax
81001c5f:	25 00 20 00 00       	and    $0x2000,%eax
81001c64:	85 c0                	test   %eax,%eax
81001c66:	74 7a                	je     81001ce2 <__sprint_r+0xb1>
81001c68:	8b 03                	mov    (%ebx),%eax
81001c6a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c6d:	eb 6a                	jmp    81001cd9 <__sprint_r+0xa8>
81001c6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c72:	8b 00                	mov    (%eax),%eax
81001c74:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c7a:	8b 40 04             	mov    0x4(%eax),%eax
81001c7d:	c1 e8 02             	shr    $0x2,%eax
81001c80:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c83:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001c8a:	eb 33                	jmp    81001cbf <__sprint_r+0x8e>
81001c8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c8f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c96:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c99:	01 d0                	add    %edx,%eax
81001c9b:	8b 00                	mov    (%eax),%eax
81001c9d:	83 ec 04             	sub    $0x4,%esp
81001ca0:	ff 75 0c             	pushl  0xc(%ebp)
81001ca3:	50                   	push   %eax
81001ca4:	ff 75 08             	pushl  0x8(%ebp)
81001ca7:	e8 0b 1d 00 00       	call   810039b7 <_fputwc_r>
81001cac:	83 c4 10             	add    $0x10,%esp
81001caf:	83 f8 ff             	cmp    $0xffffffff,%eax
81001cb2:	75 07                	jne    81001cbb <__sprint_r+0x8a>
81001cb4:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001cb9:	eb 3b                	jmp    81001cf6 <__sprint_r+0xc5>
81001cbb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001cbf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cc2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001cc5:	7c c5                	jl     81001c8c <__sprint_r+0x5b>
81001cc7:	8b 43 08             	mov    0x8(%ebx),%eax
81001cca:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ccd:	c1 e2 02             	shl    $0x2,%edx
81001cd0:	29 d0                	sub    %edx,%eax
81001cd2:	89 43 08             	mov    %eax,0x8(%ebx)
81001cd5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001cd9:	8b 43 08             	mov    0x8(%ebx),%eax
81001cdc:	85 c0                	test   %eax,%eax
81001cde:	75 8f                	jne    81001c6f <__sprint_r+0x3e>
81001ce0:	eb 14                	jmp    81001cf6 <__sprint_r+0xc5>
81001ce2:	83 ec 04             	sub    $0x4,%esp
81001ce5:	53                   	push   %ebx
81001ce6:	ff 75 0c             	pushl  0xc(%ebp)
81001ce9:	ff 75 08             	pushl  0x8(%ebp)
81001cec:	e8 0a ed ff ff       	call   810009fb <__sfvwrite_r>
81001cf1:	83 c4 10             	add    $0x10,%esp
81001cf4:	89 c6                	mov    %eax,%esi
81001cf6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001cfd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001d04:	89 f0                	mov    %esi,%eax
81001d06:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001d09:	5b                   	pop    %ebx
81001d0a:	5e                   	pop    %esi
81001d0b:	5d                   	pop    %ebp
81001d0c:	c3                   	ret    

81001d0d <__sfputc_r>:
81001d0d:	55                   	push   %ebp
81001d0e:	89 e5                	mov    %esp,%ebp
81001d10:	83 ec 08             	sub    $0x8,%esp
81001d13:	8b 45 10             	mov    0x10(%ebp),%eax
81001d16:	8b 40 08             	mov    0x8(%eax),%eax
81001d19:	8d 50 ff             	lea    -0x1(%eax),%edx
81001d1c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d1f:	89 50 08             	mov    %edx,0x8(%eax)
81001d22:	8b 45 10             	mov    0x10(%ebp),%eax
81001d25:	8b 40 08             	mov    0x8(%eax),%eax
81001d28:	85 c0                	test   %eax,%eax
81001d2a:	79 17                	jns    81001d43 <__sfputc_r+0x36>
81001d2c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d2f:	8b 50 08             	mov    0x8(%eax),%edx
81001d32:	8b 45 10             	mov    0x10(%ebp),%eax
81001d35:	8b 40 18             	mov    0x18(%eax),%eax
81001d38:	39 c2                	cmp    %eax,%edx
81001d3a:	7c 21                	jl     81001d5d <__sfputc_r+0x50>
81001d3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d3f:	3c 0a                	cmp    $0xa,%al
81001d41:	74 1a                	je     81001d5d <__sfputc_r+0x50>
81001d43:	8b 45 10             	mov    0x10(%ebp),%eax
81001d46:	8b 00                	mov    (%eax),%eax
81001d48:	8d 48 01             	lea    0x1(%eax),%ecx
81001d4b:	8b 55 10             	mov    0x10(%ebp),%edx
81001d4e:	89 0a                	mov    %ecx,(%edx)
81001d50:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d53:	88 10                	mov    %dl,(%eax)
81001d55:	0f b6 00             	movzbl (%eax),%eax
81001d58:	0f b6 c0             	movzbl %al,%eax
81001d5b:	eb 14                	jmp    81001d71 <__sfputc_r+0x64>
81001d5d:	83 ec 04             	sub    $0x4,%esp
81001d60:	ff 75 10             	pushl  0x10(%ebp)
81001d63:	ff 75 0c             	pushl  0xc(%ebp)
81001d66:	ff 75 08             	pushl  0x8(%ebp)
81001d69:	e8 44 14 00 00       	call   810031b2 <__swbuf_r>
81001d6e:	83 c4 10             	add    $0x10,%esp
81001d71:	c9                   	leave  
81001d72:	c3                   	ret    

81001d73 <__sfputs_r>:
81001d73:	55                   	push   %ebp
81001d74:	89 e5                	mov    %esp,%ebp
81001d76:	53                   	push   %ebx
81001d77:	83 ec 14             	sub    $0x14,%esp
81001d7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7d:	8b 40 64             	mov    0x64(%eax),%eax
81001d80:	25 00 20 00 00       	and    $0x2000,%eax
81001d85:	85 c0                	test   %eax,%eax
81001d87:	74 4c                	je     81001dd5 <__sfputs_r+0x62>
81001d89:	8b 45 10             	mov    0x10(%ebp),%eax
81001d8c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d8f:	bb 00 00 00 00       	mov    $0x0,%ebx
81001d94:	eb 31                	jmp    81001dc7 <__sfputs_r+0x54>
81001d96:	89 d8                	mov    %ebx,%eax
81001d98:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001da2:	01 d0                	add    %edx,%eax
81001da4:	8b 00                	mov    (%eax),%eax
81001da6:	83 ec 04             	sub    $0x4,%esp
81001da9:	ff 75 0c             	pushl  0xc(%ebp)
81001dac:	50                   	push   %eax
81001dad:	ff 75 08             	pushl  0x8(%ebp)
81001db0:	e8 02 1c 00 00       	call   810039b7 <_fputwc_r>
81001db5:	83 c4 10             	add    $0x10,%esp
81001db8:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dbb:	75 07                	jne    81001dc4 <__sfputs_r+0x51>
81001dbd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dc2:	eb 52                	jmp    81001e16 <__sfputs_r+0xa3>
81001dc4:	83 c3 01             	add    $0x1,%ebx
81001dc7:	8b 45 14             	mov    0x14(%ebp),%eax
81001dca:	c1 e8 02             	shr    $0x2,%eax
81001dcd:	89 da                	mov    %ebx,%edx
81001dcf:	39 d0                	cmp    %edx,%eax
81001dd1:	77 c3                	ja     81001d96 <__sfputs_r+0x23>
81001dd3:	eb 3c                	jmp    81001e11 <__sfputs_r+0x9e>
81001dd5:	bb 00 00 00 00       	mov    $0x0,%ebx
81001dda:	eb 2e                	jmp    81001e0a <__sfputs_r+0x97>
81001ddc:	89 da                	mov    %ebx,%edx
81001dde:	8b 45 10             	mov    0x10(%ebp),%eax
81001de1:	01 d0                	add    %edx,%eax
81001de3:	0f b6 00             	movzbl (%eax),%eax
81001de6:	0f be c0             	movsbl %al,%eax
81001de9:	83 ec 04             	sub    $0x4,%esp
81001dec:	ff 75 0c             	pushl  0xc(%ebp)
81001def:	50                   	push   %eax
81001df0:	ff 75 08             	pushl  0x8(%ebp)
81001df3:	e8 15 ff ff ff       	call   81001d0d <__sfputc_r>
81001df8:	83 c4 10             	add    $0x10,%esp
81001dfb:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dfe:	75 07                	jne    81001e07 <__sfputs_r+0x94>
81001e00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e05:	eb 0f                	jmp    81001e16 <__sfputs_r+0xa3>
81001e07:	83 c3 01             	add    $0x1,%ebx
81001e0a:	89 d8                	mov    %ebx,%eax
81001e0c:	39 45 14             	cmp    %eax,0x14(%ebp)
81001e0f:	77 cb                	ja     81001ddc <__sfputs_r+0x69>
81001e11:	b8 00 00 00 00       	mov    $0x0,%eax
81001e16:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001e19:	c9                   	leave  
81001e1a:	c3                   	ret    

81001e1b <vfiprintf>:
81001e1b:	55                   	push   %ebp
81001e1c:	89 e5                	mov    %esp,%ebp
81001e1e:	83 ec 18             	sub    $0x18,%esp
81001e21:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81001e26:	ff 75 10             	pushl  0x10(%ebp)
81001e29:	ff 75 0c             	pushl  0xc(%ebp)
81001e2c:	ff 75 08             	pushl  0x8(%ebp)
81001e2f:	50                   	push   %eax
81001e30:	e8 0b 00 00 00       	call   81001e40 <_vfiprintf_r>
81001e35:	83 c4 10             	add    $0x10,%esp
81001e38:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e3e:	c9                   	leave  
81001e3f:	c3                   	ret    

81001e40 <_vfiprintf_r>:
81001e40:	55                   	push   %ebp
81001e41:	89 e5                	mov    %esp,%ebp
81001e43:	57                   	push   %edi
81001e44:	56                   	push   %esi
81001e45:	53                   	push   %ebx
81001e46:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001e4c:	c7 45 e4 73 1d 00 81 	movl   $0x81001d73,-0x1c(%ebp)
81001e53:	8b 45 08             	mov    0x8(%ebp),%eax
81001e56:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e59:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001e5d:	74 18                	je     81001e77 <_vfiprintf_r+0x37>
81001e5f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e62:	8b 40 38             	mov    0x38(%eax),%eax
81001e65:	85 c0                	test   %eax,%eax
81001e67:	75 0e                	jne    81001e77 <_vfiprintf_r+0x37>
81001e69:	83 ec 0c             	sub    $0xc,%esp
81001e6c:	ff 75 e0             	pushl  -0x20(%ebp)
81001e6f:	e8 7a ea ff ff       	call   810008ee <__sinit>
81001e74:	83 c4 10             	add    $0x10,%esp
81001e77:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e7a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001e7e:	98                   	cwtl   
81001e7f:	83 e0 08             	and    $0x8,%eax
81001e82:	85 c0                	test   %eax,%eax
81001e84:	74 0a                	je     81001e90 <_vfiprintf_r+0x50>
81001e86:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e89:	8b 40 10             	mov    0x10(%eax),%eax
81001e8c:	85 c0                	test   %eax,%eax
81001e8e:	75 1f                	jne    81001eaf <_vfiprintf_r+0x6f>
81001e90:	83 ec 08             	sub    $0x8,%esp
81001e93:	ff 75 0c             	pushl  0xc(%ebp)
81001e96:	ff 75 08             	pushl  0x8(%ebp)
81001e99:	e8 8d 14 00 00       	call   8100332b <__swsetup_r>
81001e9e:	83 c4 10             	add    $0x10,%esp
81001ea1:	85 c0                	test   %eax,%eax
81001ea3:	74 0a                	je     81001eaf <_vfiprintf_r+0x6f>
81001ea5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001eaa:	e9 df 02 00 00       	jmp    8100218e <_vfiprintf_r+0x34e>
81001eaf:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001eb2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001eb9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001ebd:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001ec1:	8b 45 14             	mov    0x14(%ebp),%eax
81001ec4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001eca:	89 de                	mov    %ebx,%esi
81001ecc:	eb 03                	jmp    81001ed1 <_vfiprintf_r+0x91>
81001ece:	83 c3 01             	add    $0x1,%ebx
81001ed1:	0f b6 03             	movzbl (%ebx),%eax
81001ed4:	84 c0                	test   %al,%al
81001ed6:	74 07                	je     81001edf <_vfiprintf_r+0x9f>
81001ed8:	0f b6 03             	movzbl (%ebx),%eax
81001edb:	3c 25                	cmp    $0x25,%al
81001edd:	75 ef                	jne    81001ece <_vfiprintf_r+0x8e>
81001edf:	89 d8                	mov    %ebx,%eax
81001ee1:	29 f0                	sub    %esi,%eax
81001ee3:	85 c0                	test   %eax,%eax
81001ee5:	74 2b                	je     81001f12 <_vfiprintf_r+0xd2>
81001ee7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001eed:	50                   	push   %eax
81001eee:	56                   	push   %esi
81001eef:	ff 75 0c             	pushl  0xc(%ebp)
81001ef2:	ff 75 08             	pushl  0x8(%ebp)
81001ef5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001ef8:	ff d0                	call   *%eax
81001efa:	83 c4 10             	add    $0x10,%esp
81001efd:	83 f8 ff             	cmp    $0xffffffff,%eax
81001f00:	0f 84 68 02 00 00    	je     8100216e <_vfiprintf_r+0x32e>
81001f06:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001f09:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001f0f:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001f12:	0f b6 03             	movzbl (%ebx),%eax
81001f15:	84 c0                	test   %al,%al
81001f17:	0f 84 54 02 00 00    	je     81002171 <_vfiprintf_r+0x331>
81001f1d:	83 c3 01             	add    $0x1,%ebx
81001f20:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001f27:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001f2e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001f35:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001f3c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001f40:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001f47:	c7 45 dc f4 47 00 81 	movl   $0x810047f4,-0x24(%ebp)
81001f4e:	eb 1b                	jmp    81001f6b <_vfiprintf_r+0x12b>
81001f50:	8b 55 80             	mov    -0x80(%ebp),%edx
81001f53:	89 f0                	mov    %esi,%eax
81001f55:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001f58:	be 01 00 00 00       	mov    $0x1,%esi
81001f5d:	89 c1                	mov    %eax,%ecx
81001f5f:	d3 e6                	shl    %cl,%esi
81001f61:	89 f0                	mov    %esi,%eax
81001f63:	09 d0                	or     %edx,%eax
81001f65:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f68:	83 c3 01             	add    $0x1,%ebx
81001f6b:	0f b6 03             	movzbl (%ebx),%eax
81001f6e:	0f be c0             	movsbl %al,%eax
81001f71:	83 ec 04             	sub    $0x4,%esp
81001f74:	6a 05                	push   $0x5
81001f76:	50                   	push   %eax
81001f77:	ff 75 dc             	pushl  -0x24(%ebp)
81001f7a:	e8 b1 fa ff ff       	call   81001a30 <memchr>
81001f7f:	83 c4 10             	add    $0x10,%esp
81001f82:	89 c6                	mov    %eax,%esi
81001f84:	85 f6                	test   %esi,%esi
81001f86:	75 c8                	jne    81001f50 <_vfiprintf_r+0x110>
81001f88:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f8b:	83 e0 10             	and    $0x10,%eax
81001f8e:	85 c0                	test   %eax,%eax
81001f90:	74 04                	je     81001f96 <_vfiprintf_r+0x156>
81001f92:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001f96:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f99:	83 e0 08             	and    $0x8,%eax
81001f9c:	85 c0                	test   %eax,%eax
81001f9e:	74 04                	je     81001fa4 <_vfiprintf_r+0x164>
81001fa0:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001fa4:	0f b6 03             	movzbl (%ebx),%eax
81001fa7:	3c 2a                	cmp    $0x2a,%al
81001fa9:	75 50                	jne    81001ffb <_vfiprintf_r+0x1bb>
81001fab:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001fb1:	8d 50 04             	lea    0x4(%eax),%edx
81001fb4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001fba:	8b 00                	mov    (%eax),%eax
81001fbc:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fbf:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001fc2:	85 c0                	test   %eax,%eax
81001fc4:	79 11                	jns    81001fd7 <_vfiprintf_r+0x197>
81001fc6:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001fc9:	f7 d8                	neg    %eax
81001fcb:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fce:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fd1:	83 c8 02             	or     $0x2,%eax
81001fd4:	89 45 80             	mov    %eax,-0x80(%ebp)
81001fd7:	83 c3 01             	add    $0x1,%ebx
81001fda:	eb 2d                	jmp    81002009 <_vfiprintf_r+0x1c9>
81001fdc:	8b 55 8c             	mov    -0x74(%ebp),%edx
81001fdf:	89 d0                	mov    %edx,%eax
81001fe1:	c1 e0 02             	shl    $0x2,%eax
81001fe4:	01 d0                	add    %edx,%eax
81001fe6:	01 c0                	add    %eax,%eax
81001fe8:	89 c2                	mov    %eax,%edx
81001fea:	0f b6 03             	movzbl (%ebx),%eax
81001fed:	0f be c0             	movsbl %al,%eax
81001ff0:	83 e8 30             	sub    $0x30,%eax
81001ff3:	01 d0                	add    %edx,%eax
81001ff5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001ff8:	83 c3 01             	add    $0x1,%ebx
81001ffb:	0f b6 03             	movzbl (%ebx),%eax
81001ffe:	0f be c0             	movsbl %al,%eax
81002001:	83 e8 30             	sub    $0x30,%eax
81002004:	83 f8 09             	cmp    $0x9,%eax
81002007:	76 d3                	jbe    81001fdc <_vfiprintf_r+0x19c>
81002009:	0f b6 03             	movzbl (%ebx),%eax
8100200c:	3c 2e                	cmp    $0x2e,%al
8100200e:	75 67                	jne    81002077 <_vfiprintf_r+0x237>
81002010:	83 c3 01             	add    $0x1,%ebx
81002013:	0f b6 03             	movzbl (%ebx),%eax
81002016:	3c 2a                	cmp    $0x2a,%al
81002018:	75 27                	jne    81002041 <_vfiprintf_r+0x201>
8100201a:	83 c3 01             	add    $0x1,%ebx
8100201d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002023:	8d 50 04             	lea    0x4(%eax),%edx
81002026:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100202c:	8b 00                	mov    (%eax),%eax
8100202e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002031:	8b 45 84             	mov    -0x7c(%ebp),%eax
81002034:	85 c0                	test   %eax,%eax
81002036:	79 3f                	jns    81002077 <_vfiprintf_r+0x237>
81002038:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100203f:	eb 36                	jmp    81002077 <_vfiprintf_r+0x237>
81002041:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81002048:	eb 1f                	jmp    81002069 <_vfiprintf_r+0x229>
8100204a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100204d:	89 d0                	mov    %edx,%eax
8100204f:	c1 e0 02             	shl    $0x2,%eax
81002052:	01 d0                	add    %edx,%eax
81002054:	01 c0                	add    %eax,%eax
81002056:	89 c2                	mov    %eax,%edx
81002058:	0f b6 03             	movzbl (%ebx),%eax
8100205b:	0f be c0             	movsbl %al,%eax
8100205e:	83 e8 30             	sub    $0x30,%eax
81002061:	01 d0                	add    %edx,%eax
81002063:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002066:	83 c3 01             	add    $0x1,%ebx
81002069:	0f b6 03             	movzbl (%ebx),%eax
8100206c:	0f be c0             	movsbl %al,%eax
8100206f:	83 e8 30             	sub    $0x30,%eax
81002072:	83 f8 09             	cmp    $0x9,%eax
81002075:	76 d3                	jbe    8100204a <_vfiprintf_r+0x20a>
81002077:	c7 45 dc fa 47 00 81 	movl   $0x810047fa,-0x24(%ebp)
8100207e:	0f b6 03             	movzbl (%ebx),%eax
81002081:	0f be c0             	movsbl %al,%eax
81002084:	83 ec 04             	sub    $0x4,%esp
81002087:	6a 03                	push   $0x3
81002089:	50                   	push   %eax
8100208a:	ff 75 dc             	pushl  -0x24(%ebp)
8100208d:	e8 9e f9 ff ff       	call   81001a30 <memchr>
81002092:	83 c4 10             	add    $0x10,%esp
81002095:	89 c6                	mov    %eax,%esi
81002097:	85 f6                	test   %esi,%esi
81002099:	74 1b                	je     810020b6 <_vfiprintf_r+0x276>
8100209b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100209e:	89 f0                	mov    %esi,%eax
810020a0:	2b 45 dc             	sub    -0x24(%ebp),%eax
810020a3:	be 40 00 00 00       	mov    $0x40,%esi
810020a8:	89 c1                	mov    %eax,%ecx
810020aa:	d3 e6                	shl    %cl,%esi
810020ac:	89 f0                	mov    %esi,%eax
810020ae:	09 d0                	or     %edx,%eax
810020b0:	89 45 80             	mov    %eax,-0x80(%ebp)
810020b3:	83 c3 01             	add    $0x1,%ebx
810020b6:	89 d8                	mov    %ebx,%eax
810020b8:	8d 58 01             	lea    0x1(%eax),%ebx
810020bb:	0f b6 00             	movzbl (%eax),%eax
810020be:	88 45 98             	mov    %al,-0x68(%ebp)
810020c1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810020c5:	0f be c0             	movsbl %al,%eax
810020c8:	83 ec 04             	sub    $0x4,%esp
810020cb:	6a 06                	push   $0x6
810020cd:	50                   	push   %eax
810020ce:	68 fe 47 00 81       	push   $0x810047fe
810020d3:	e8 58 f9 ff ff       	call   81001a30 <memchr>
810020d8:	83 c4 10             	add    $0x10,%esp
810020db:	89 c6                	mov    %eax,%esi
810020dd:	85 f6                	test   %esi,%esi
810020df:	74 5a                	je     8100213b <_vfiprintf_r+0x2fb>
810020e1:	b8 00 00 00 00       	mov    $0x0,%eax
810020e6:	85 c0                	test   %eax,%eax
810020e8:	75 2e                	jne    81002118 <_vfiprintf_r+0x2d8>
810020ea:	8b 45 80             	mov    -0x80(%ebp),%eax
810020ed:	25 00 01 00 00       	and    $0x100,%eax
810020f2:	85 c0                	test   %eax,%eax
810020f4:	74 11                	je     81002107 <_vfiprintf_r+0x2c7>
810020f6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020fc:	83 c0 0c             	add    $0xc,%eax
810020ff:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002105:	eb 55                	jmp    8100215c <_vfiprintf_r+0x31c>
81002107:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100210d:	83 c0 08             	add    $0x8,%eax
81002110:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002116:	eb 44                	jmp    8100215c <_vfiprintf_r+0x31c>
81002118:	83 ec 0c             	sub    $0xc,%esp
8100211b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002121:	50                   	push   %eax
81002122:	ff 75 e4             	pushl  -0x1c(%ebp)
81002125:	ff 75 0c             	pushl  0xc(%ebp)
81002128:	8d 45 80             	lea    -0x80(%ebp),%eax
8100212b:	50                   	push   %eax
8100212c:	ff 75 08             	pushl  0x8(%ebp)
8100212f:	e8 cc de ff 7e       	call   0 <main-0x81000000>
81002134:	83 c4 20             	add    $0x20,%esp
81002137:	89 c7                	mov    %eax,%edi
81002139:	eb 21                	jmp    8100215c <_vfiprintf_r+0x31c>
8100213b:	83 ec 0c             	sub    $0xc,%esp
8100213e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002144:	50                   	push   %eax
81002145:	ff 75 e4             	pushl  -0x1c(%ebp)
81002148:	ff 75 0c             	pushl  0xc(%ebp)
8100214b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100214e:	50                   	push   %eax
8100214f:	ff 75 08             	pushl  0x8(%ebp)
81002152:	e8 da 01 00 00       	call   81002331 <_printf_i>
81002157:	83 c4 20             	add    $0x20,%esp
8100215a:	89 c7                	mov    %eax,%edi
8100215c:	83 ff ff             	cmp    $0xffffffff,%edi
8100215f:	74 13                	je     81002174 <_vfiprintf_r+0x334>
81002161:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002164:	01 f8                	add    %edi,%eax
81002166:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002169:	e9 5c fd ff ff       	jmp    81001eca <_vfiprintf_r+0x8a>
8100216e:	90                   	nop
8100216f:	eb 04                	jmp    81002175 <_vfiprintf_r+0x335>
81002171:	90                   	nop
81002172:	eb 01                	jmp    81002175 <_vfiprintf_r+0x335>
81002174:	90                   	nop
81002175:	8b 45 0c             	mov    0xc(%ebp),%eax
81002178:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100217c:	98                   	cwtl   
8100217d:	83 e0 40             	and    $0x40,%eax
81002180:	85 c0                	test   %eax,%eax
81002182:	75 05                	jne    81002189 <_vfiprintf_r+0x349>
81002184:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002187:	eb 05                	jmp    8100218e <_vfiprintf_r+0x34e>
81002189:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100218e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002191:	5b                   	pop    %ebx
81002192:	5e                   	pop    %esi
81002193:	5f                   	pop    %edi
81002194:	5d                   	pop    %ebp
81002195:	c3                   	ret    

81002196 <_printf_common>:
81002196:	55                   	push   %ebp
81002197:	89 e5                	mov    %esp,%ebp
81002199:	83 ec 18             	sub    $0x18,%esp
8100219c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100219f:	8b 50 10             	mov    0x10(%eax),%edx
810021a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810021a5:	8b 40 08             	mov    0x8(%eax),%eax
810021a8:	39 c2                	cmp    %eax,%edx
810021aa:	0f 4c d0             	cmovl  %eax,%edx
810021ad:	8b 45 10             	mov    0x10(%ebp),%eax
810021b0:	89 10                	mov    %edx,(%eax)
810021b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810021b5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810021b9:	84 c0                	test   %al,%al
810021bb:	74 0d                	je     810021ca <_printf_common+0x34>
810021bd:	8b 45 10             	mov    0x10(%ebp),%eax
810021c0:	8b 00                	mov    (%eax),%eax
810021c2:	8d 50 01             	lea    0x1(%eax),%edx
810021c5:	8b 45 10             	mov    0x10(%ebp),%eax
810021c8:	89 10                	mov    %edx,(%eax)
810021ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810021cd:	8b 00                	mov    (%eax),%eax
810021cf:	83 e0 20             	and    $0x20,%eax
810021d2:	85 c0                	test   %eax,%eax
810021d4:	74 0d                	je     810021e3 <_printf_common+0x4d>
810021d6:	8b 45 10             	mov    0x10(%ebp),%eax
810021d9:	8b 00                	mov    (%eax),%eax
810021db:	8d 50 02             	lea    0x2(%eax),%edx
810021de:	8b 45 10             	mov    0x10(%ebp),%eax
810021e1:	89 10                	mov    %edx,(%eax)
810021e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810021e6:	8b 00                	mov    (%eax),%eax
810021e8:	83 e0 06             	and    $0x6,%eax
810021eb:	85 c0                	test   %eax,%eax
810021ed:	75 41                	jne    81002230 <_printf_common+0x9a>
810021ef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810021f6:	eb 24                	jmp    8100221c <_printf_common+0x86>
810021f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810021fb:	83 c0 19             	add    $0x19,%eax
810021fe:	6a 01                	push   $0x1
81002200:	50                   	push   %eax
81002201:	ff 75 14             	pushl  0x14(%ebp)
81002204:	ff 75 08             	pushl  0x8(%ebp)
81002207:	8b 45 18             	mov    0x18(%ebp),%eax
8100220a:	ff d0                	call   *%eax
8100220c:	83 c4 10             	add    $0x10,%esp
8100220f:	83 f8 ff             	cmp    $0xffffffff,%eax
81002212:	0f 84 0b 01 00 00    	je     81002323 <_printf_common+0x18d>
81002218:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100221c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100221f:	8b 50 0c             	mov    0xc(%eax),%edx
81002222:	8b 45 10             	mov    0x10(%ebp),%eax
81002225:	8b 08                	mov    (%eax),%ecx
81002227:	89 d0                	mov    %edx,%eax
81002229:	29 c8                	sub    %ecx,%eax
8100222b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100222e:	7c c8                	jl     810021f8 <_printf_common+0x62>
81002230:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002237:	8b 45 0c             	mov    0xc(%ebp),%eax
8100223a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100223e:	84 c0                	test   %al,%al
81002240:	74 04                	je     81002246 <_printf_common+0xb0>
81002242:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002246:	8b 45 0c             	mov    0xc(%ebp),%eax
81002249:	8b 00                	mov    (%eax),%eax
8100224b:	83 e0 20             	and    $0x20,%eax
8100224e:	85 c0                	test   %eax,%eax
81002250:	74 28                	je     8100227a <_printf_common+0xe4>
81002252:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002255:	8d 50 01             	lea    0x1(%eax),%edx
81002258:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100225b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100225e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002263:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002266:	8d 50 01             	lea    0x1(%eax),%edx
81002269:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100226c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100226f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002273:	8b 55 0c             	mov    0xc(%ebp),%edx
81002276:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100227a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100227d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002280:	83 c2 43             	add    $0x43,%edx
81002283:	50                   	push   %eax
81002284:	52                   	push   %edx
81002285:	ff 75 14             	pushl  0x14(%ebp)
81002288:	ff 75 08             	pushl  0x8(%ebp)
8100228b:	8b 45 18             	mov    0x18(%ebp),%eax
8100228e:	ff d0                	call   *%eax
81002290:	83 c4 10             	add    $0x10,%esp
81002293:	83 f8 ff             	cmp    $0xffffffff,%eax
81002296:	0f 84 8a 00 00 00    	je     81002326 <_printf_common+0x190>
8100229c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100229f:	8b 50 0c             	mov    0xc(%eax),%edx
810022a2:	8b 45 10             	mov    0x10(%ebp),%eax
810022a5:	8b 08                	mov    (%eax),%ecx
810022a7:	89 d0                	mov    %edx,%eax
810022a9:	29 c8                	sub    %ecx,%eax
810022ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810022b1:	8b 00                	mov    (%eax),%eax
810022b3:	83 e0 06             	and    $0x6,%eax
810022b6:	83 f8 04             	cmp    $0x4,%eax
810022b9:	75 06                	jne    810022c1 <_printf_common+0x12b>
810022bb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810022bf:	79 07                	jns    810022c8 <_printf_common+0x132>
810022c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810022c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022cb:	8b 50 08             	mov    0x8(%eax),%edx
810022ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810022d1:	8b 40 10             	mov    0x10(%eax),%eax
810022d4:	39 c2                	cmp    %eax,%edx
810022d6:	7e 13                	jle    810022eb <_printf_common+0x155>
810022d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022db:	8b 50 08             	mov    0x8(%eax),%edx
810022de:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e1:	8b 48 10             	mov    0x10(%eax),%ecx
810022e4:	89 d0                	mov    %edx,%eax
810022e6:	29 c8                	sub    %ecx,%eax
810022e8:	01 45 f4             	add    %eax,-0xc(%ebp)
810022eb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810022f2:	eb 20                	jmp    81002314 <_printf_common+0x17e>
810022f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f7:	83 c0 1a             	add    $0x1a,%eax
810022fa:	6a 01                	push   $0x1
810022fc:	50                   	push   %eax
810022fd:	ff 75 14             	pushl  0x14(%ebp)
81002300:	ff 75 08             	pushl  0x8(%ebp)
81002303:	8b 45 18             	mov    0x18(%ebp),%eax
81002306:	ff d0                	call   *%eax
81002308:	83 c4 10             	add    $0x10,%esp
8100230b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100230e:	74 19                	je     81002329 <_printf_common+0x193>
81002310:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81002314:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002317:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100231a:	7c d8                	jl     810022f4 <_printf_common+0x15e>
8100231c:	b8 00 00 00 00       	mov    $0x0,%eax
81002321:	eb 0c                	jmp    8100232f <_printf_common+0x199>
81002323:	90                   	nop
81002324:	eb 04                	jmp    8100232a <_printf_common+0x194>
81002326:	90                   	nop
81002327:	eb 01                	jmp    8100232a <_printf_common+0x194>
81002329:	90                   	nop
8100232a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100232f:	c9                   	leave  
81002330:	c3                   	ret    

81002331 <_printf_i>:
81002331:	55                   	push   %ebp
81002332:	89 e5                	mov    %esp,%ebp
81002334:	53                   	push   %ebx
81002335:	83 ec 24             	sub    $0x24,%esp
81002338:	8b 45 0c             	mov    0xc(%ebp),%eax
8100233b:	83 c0 1b             	add    $0x1b,%eax
8100233e:	83 c0 28             	add    $0x28,%eax
81002341:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002344:	c7 45 e8 08 48 00 81 	movl   $0x81004808,-0x18(%ebp)
8100234b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100234e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002352:	0f be c0             	movsbl %al,%eax
81002355:	85 c0                	test   %eax,%eax
81002357:	0f 84 00 03 00 00    	je     8100265d <_printf_i+0x32c>
8100235d:	85 c0                	test   %eax,%eax
8100235f:	0f 88 52 03 00 00    	js     810026b7 <_printf_i+0x386>
81002365:	83 f8 78             	cmp    $0x78,%eax
81002368:	0f 8f 49 03 00 00    	jg     810026b7 <_printf_i+0x386>
8100236e:	83 f8 58             	cmp    $0x58,%eax
81002371:	0f 8c 40 03 00 00    	jl     810026b7 <_printf_i+0x386>
81002377:	83 e8 58             	sub    $0x58,%eax
8100237a:	83 f8 20             	cmp    $0x20,%eax
8100237d:	0f 87 34 03 00 00    	ja     810026b7 <_printf_i+0x386>
81002383:	8b 04 85 2c 48 00 81 	mov    -0x7effb7d4(,%eax,4),%eax
8100238a:	ff e0                	jmp    *%eax
8100238c:	8b 45 18             	mov    0x18(%ebp),%eax
8100238f:	8b 00                	mov    (%eax),%eax
81002391:	8d 48 04             	lea    0x4(%eax),%ecx
81002394:	8b 55 18             	mov    0x18(%ebp),%edx
81002397:	89 0a                	mov    %ecx,(%edx)
81002399:	8b 00                	mov    (%eax),%eax
8100239b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100239f:	89 c2                	mov    %eax,%edx
810023a1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810023a4:	88 10                	mov    %dl,(%eax)
810023a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810023a9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023b0:	e9 1c 03 00 00       	jmp    810026d1 <_printf_i+0x3a0>
810023b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810023b8:	8b 00                	mov    (%eax),%eax
810023ba:	25 80 00 00 00       	and    $0x80,%eax
810023bf:	85 c0                	test   %eax,%eax
810023c1:	74 11                	je     810023d4 <_printf_i+0xa3>
810023c3:	8b 45 18             	mov    0x18(%ebp),%eax
810023c6:	8b 00                	mov    (%eax),%eax
810023c8:	8d 48 04             	lea    0x4(%eax),%ecx
810023cb:	8b 55 18             	mov    0x18(%ebp),%edx
810023ce:	89 0a                	mov    %ecx,(%edx)
810023d0:	8b 00                	mov    (%eax),%eax
810023d2:	eb 2d                	jmp    81002401 <_printf_i+0xd0>
810023d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810023d7:	8b 00                	mov    (%eax),%eax
810023d9:	83 e0 40             	and    $0x40,%eax
810023dc:	85 c0                	test   %eax,%eax
810023de:	74 12                	je     810023f2 <_printf_i+0xc1>
810023e0:	8b 45 18             	mov    0x18(%ebp),%eax
810023e3:	8b 00                	mov    (%eax),%eax
810023e5:	8d 48 04             	lea    0x4(%eax),%ecx
810023e8:	8b 55 18             	mov    0x18(%ebp),%edx
810023eb:	89 0a                	mov    %ecx,(%edx)
810023ed:	8b 00                	mov    (%eax),%eax
810023ef:	98                   	cwtl   
810023f0:	eb 0f                	jmp    81002401 <_printf_i+0xd0>
810023f2:	8b 45 18             	mov    0x18(%ebp),%eax
810023f5:	8b 00                	mov    (%eax),%eax
810023f7:	8d 48 04             	lea    0x4(%eax),%ecx
810023fa:	8b 55 18             	mov    0x18(%ebp),%edx
810023fd:	89 0a                	mov    %ecx,(%edx)
810023ff:	8b 00                	mov    (%eax),%eax
81002401:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002404:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002407:	85 c0                	test   %eax,%eax
81002409:	79 0a                	jns    81002415 <_printf_i+0xe4>
8100240b:	f7 5d f4             	negl   -0xc(%ebp)
8100240e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002411:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81002415:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100241c:	e9 28 01 00 00       	jmp    81002549 <_printf_i+0x218>
81002421:	8b 45 0c             	mov    0xc(%ebp),%eax
81002424:	8b 00                	mov    (%eax),%eax
81002426:	25 80 00 00 00       	and    $0x80,%eax
8100242b:	85 c0                	test   %eax,%eax
8100242d:	74 11                	je     81002440 <_printf_i+0x10f>
8100242f:	8b 45 18             	mov    0x18(%ebp),%eax
81002432:	8b 00                	mov    (%eax),%eax
81002434:	8d 48 04             	lea    0x4(%eax),%ecx
81002437:	8b 55 18             	mov    0x18(%ebp),%edx
8100243a:	89 0a                	mov    %ecx,(%edx)
8100243c:	8b 00                	mov    (%eax),%eax
8100243e:	eb 2f                	jmp    8100246f <_printf_i+0x13e>
81002440:	8b 45 0c             	mov    0xc(%ebp),%eax
81002443:	8b 00                	mov    (%eax),%eax
81002445:	83 e0 40             	and    $0x40,%eax
81002448:	85 c0                	test   %eax,%eax
8100244a:	74 14                	je     81002460 <_printf_i+0x12f>
8100244c:	8b 45 18             	mov    0x18(%ebp),%eax
8100244f:	8b 00                	mov    (%eax),%eax
81002451:	8d 48 04             	lea    0x4(%eax),%ecx
81002454:	8b 55 18             	mov    0x18(%ebp),%edx
81002457:	89 0a                	mov    %ecx,(%edx)
81002459:	8b 00                	mov    (%eax),%eax
8100245b:	0f b7 c0             	movzwl %ax,%eax
8100245e:	eb 0f                	jmp    8100246f <_printf_i+0x13e>
81002460:	8b 45 18             	mov    0x18(%ebp),%eax
81002463:	8b 00                	mov    (%eax),%eax
81002465:	8d 48 04             	lea    0x4(%eax),%ecx
81002468:	8b 55 18             	mov    0x18(%ebp),%edx
8100246b:	89 0a                	mov    %ecx,(%edx)
8100246d:	8b 00                	mov    (%eax),%eax
8100246f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002472:	8b 45 0c             	mov    0xc(%ebp),%eax
81002475:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002479:	3c 6f                	cmp    $0x6f,%al
8100247b:	75 07                	jne    81002484 <_printf_i+0x153>
8100247d:	b8 08 00 00 00       	mov    $0x8,%eax
81002482:	eb 05                	jmp    81002489 <_printf_i+0x158>
81002484:	b8 0a 00 00 00       	mov    $0xa,%eax
81002489:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100248c:	e9 b1 00 00 00       	jmp    81002542 <_printf_i+0x211>
81002491:	8b 45 0c             	mov    0xc(%ebp),%eax
81002494:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002498:	eb 1d                	jmp    810024b7 <_printf_i+0x186>
8100249a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100249d:	8b 00                	mov    (%eax),%eax
8100249f:	83 c8 20             	or     $0x20,%eax
810024a2:	89 c2                	mov    %eax,%edx
810024a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810024a7:	89 10                	mov    %edx,(%eax)
810024a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ac:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810024b0:	c7 45 e8 19 48 00 81 	movl   $0x81004819,-0x18(%ebp)
810024b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ba:	8b 00                	mov    (%eax),%eax
810024bc:	25 80 00 00 00       	and    $0x80,%eax
810024c1:	85 c0                	test   %eax,%eax
810024c3:	74 11                	je     810024d6 <_printf_i+0x1a5>
810024c5:	8b 45 18             	mov    0x18(%ebp),%eax
810024c8:	8b 00                	mov    (%eax),%eax
810024ca:	8d 48 04             	lea    0x4(%eax),%ecx
810024cd:	8b 55 18             	mov    0x18(%ebp),%edx
810024d0:	89 0a                	mov    %ecx,(%edx)
810024d2:	8b 00                	mov    (%eax),%eax
810024d4:	eb 2f                	jmp    81002505 <_printf_i+0x1d4>
810024d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810024d9:	8b 00                	mov    (%eax),%eax
810024db:	83 e0 40             	and    $0x40,%eax
810024de:	85 c0                	test   %eax,%eax
810024e0:	74 14                	je     810024f6 <_printf_i+0x1c5>
810024e2:	8b 45 18             	mov    0x18(%ebp),%eax
810024e5:	8b 00                	mov    (%eax),%eax
810024e7:	8d 48 04             	lea    0x4(%eax),%ecx
810024ea:	8b 55 18             	mov    0x18(%ebp),%edx
810024ed:	89 0a                	mov    %ecx,(%edx)
810024ef:	8b 00                	mov    (%eax),%eax
810024f1:	0f b7 c0             	movzwl %ax,%eax
810024f4:	eb 0f                	jmp    81002505 <_printf_i+0x1d4>
810024f6:	8b 45 18             	mov    0x18(%ebp),%eax
810024f9:	8b 00                	mov    (%eax),%eax
810024fb:	8d 48 04             	lea    0x4(%eax),%ecx
810024fe:	8b 55 18             	mov    0x18(%ebp),%edx
81002501:	89 0a                	mov    %ecx,(%edx)
81002503:	8b 00                	mov    (%eax),%eax
81002505:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002508:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8100250f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002512:	8b 00                	mov    (%eax),%eax
81002514:	83 e0 01             	and    $0x1,%eax
81002517:	85 c0                	test   %eax,%eax
81002519:	74 0f                	je     8100252a <_printf_i+0x1f9>
8100251b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100251e:	8b 00                	mov    (%eax),%eax
81002520:	83 c8 20             	or     $0x20,%eax
81002523:	89 c2                	mov    %eax,%edx
81002525:	8b 45 0c             	mov    0xc(%ebp),%eax
81002528:	89 10                	mov    %edx,(%eax)
8100252a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100252e:	75 11                	jne    81002541 <_printf_i+0x210>
81002530:	8b 45 0c             	mov    0xc(%ebp),%eax
81002533:	8b 00                	mov    (%eax),%eax
81002535:	83 e0 df             	and    $0xffffffdf,%eax
81002538:	89 c2                	mov    %eax,%edx
8100253a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100253d:	89 10                	mov    %edx,(%eax)
8100253f:	eb 01                	jmp    81002542 <_printf_i+0x211>
81002541:	90                   	nop
81002542:	8b 45 0c             	mov    0xc(%ebp),%eax
81002545:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002549:	8b 45 0c             	mov    0xc(%ebp),%eax
8100254c:	8b 50 04             	mov    0x4(%eax),%edx
8100254f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002552:	89 50 08             	mov    %edx,0x8(%eax)
81002555:	8b 45 0c             	mov    0xc(%ebp),%eax
81002558:	8b 40 08             	mov    0x8(%eax),%eax
8100255b:	85 c0                	test   %eax,%eax
8100255d:	78 0f                	js     8100256e <_printf_i+0x23d>
8100255f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002562:	8b 00                	mov    (%eax),%eax
81002564:	83 e0 fb             	and    $0xfffffffb,%eax
81002567:	89 c2                	mov    %eax,%edx
81002569:	8b 45 0c             	mov    0xc(%ebp),%eax
8100256c:	89 10                	mov    %edx,(%eax)
8100256e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002572:	75 0a                	jne    8100257e <_printf_i+0x24d>
81002574:	8b 45 0c             	mov    0xc(%ebp),%eax
81002577:	8b 40 04             	mov    0x4(%eax),%eax
8100257a:	85 c0                	test   %eax,%eax
8100257c:	74 34                	je     810025b2 <_printf_i+0x281>
8100257e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002581:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002584:	ba 00 00 00 00       	mov    $0x0,%edx
81002589:	f7 f1                	div    %ecx
8100258b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100258e:	01 d0                	add    %edx,%eax
81002590:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002594:	0f b6 10             	movzbl (%eax),%edx
81002597:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100259a:	88 10                	mov    %dl,(%eax)
8100259c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100259f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025a2:	ba 00 00 00 00       	mov    $0x0,%edx
810025a7:	f7 f3                	div    %ebx
810025a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025ac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810025b0:	75 cc                	jne    8100257e <_printf_i+0x24d>
810025b2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810025b6:	75 26                	jne    810025de <_printf_i+0x2ad>
810025b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810025bb:	8b 00                	mov    (%eax),%eax
810025bd:	83 e0 01             	and    $0x1,%eax
810025c0:	85 c0                	test   %eax,%eax
810025c2:	74 1a                	je     810025de <_printf_i+0x2ad>
810025c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810025c7:	8b 50 04             	mov    0x4(%eax),%edx
810025ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810025cd:	8b 40 10             	mov    0x10(%eax),%eax
810025d0:	39 c2                	cmp    %eax,%edx
810025d2:	7f 0a                	jg     810025de <_printf_i+0x2ad>
810025d4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810025d8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025db:	c6 00 30             	movb   $0x30,(%eax)
810025de:	8b 45 0c             	mov    0xc(%ebp),%eax
810025e1:	83 c0 1b             	add    $0x1b,%eax
810025e4:	83 c0 28             	add    $0x28,%eax
810025e7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025ea:	89 c2                	mov    %eax,%edx
810025ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ef:	89 50 10             	mov    %edx,0x10(%eax)
810025f2:	e9 e2 00 00 00       	jmp    810026d9 <_printf_i+0x3a8>
810025f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810025fa:	8b 00                	mov    (%eax),%eax
810025fc:	25 80 00 00 00       	and    $0x80,%eax
81002601:	85 c0                	test   %eax,%eax
81002603:	74 19                	je     8100261e <_printf_i+0x2ed>
81002605:	8b 45 18             	mov    0x18(%ebp),%eax
81002608:	8b 00                	mov    (%eax),%eax
8100260a:	8d 48 04             	lea    0x4(%eax),%ecx
8100260d:	8b 55 18             	mov    0x18(%ebp),%edx
81002610:	89 0a                	mov    %ecx,(%edx)
81002612:	8b 00                	mov    (%eax),%eax
81002614:	8b 55 0c             	mov    0xc(%ebp),%edx
81002617:	8b 52 14             	mov    0x14(%edx),%edx
8100261a:	89 10                	mov    %edx,(%eax)
8100261c:	eb 3f                	jmp    8100265d <_printf_i+0x32c>
8100261e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002621:	8b 00                	mov    (%eax),%eax
81002623:	83 e0 40             	and    $0x40,%eax
81002626:	85 c0                	test   %eax,%eax
81002628:	74 1c                	je     81002646 <_printf_i+0x315>
8100262a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100262d:	8b 58 14             	mov    0x14(%eax),%ebx
81002630:	8b 45 18             	mov    0x18(%ebp),%eax
81002633:	8b 00                	mov    (%eax),%eax
81002635:	8d 48 04             	lea    0x4(%eax),%ecx
81002638:	8b 55 18             	mov    0x18(%ebp),%edx
8100263b:	89 0a                	mov    %ecx,(%edx)
8100263d:	8b 00                	mov    (%eax),%eax
8100263f:	89 da                	mov    %ebx,%edx
81002641:	66 89 10             	mov    %dx,(%eax)
81002644:	eb 17                	jmp    8100265d <_printf_i+0x32c>
81002646:	8b 45 18             	mov    0x18(%ebp),%eax
81002649:	8b 00                	mov    (%eax),%eax
8100264b:	8d 48 04             	lea    0x4(%eax),%ecx
8100264e:	8b 55 18             	mov    0x18(%ebp),%edx
81002651:	89 0a                	mov    %ecx,(%edx)
81002653:	8b 00                	mov    (%eax),%eax
81002655:	8b 55 0c             	mov    0xc(%ebp),%edx
81002658:	8b 52 14             	mov    0x14(%edx),%edx
8100265b:	89 10                	mov    %edx,(%eax)
8100265d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002660:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002667:	eb 70                	jmp    810026d9 <_printf_i+0x3a8>
81002669:	8b 45 18             	mov    0x18(%ebp),%eax
8100266c:	8b 00                	mov    (%eax),%eax
8100266e:	8d 48 04             	lea    0x4(%eax),%ecx
81002671:	8b 55 18             	mov    0x18(%ebp),%edx
81002674:	89 0a                	mov    %ecx,(%edx)
81002676:	8b 00                	mov    (%eax),%eax
81002678:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100267b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267e:	8b 40 04             	mov    0x4(%eax),%eax
81002681:	83 ec 04             	sub    $0x4,%esp
81002684:	50                   	push   %eax
81002685:	6a 00                	push   $0x0
81002687:	ff 75 ec             	pushl  -0x14(%ebp)
8100268a:	e8 a1 f3 ff ff       	call   81001a30 <memchr>
8100268f:	83 c4 10             	add    $0x10,%esp
81002692:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002695:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002699:	74 0e                	je     810026a9 <_printf_i+0x378>
8100269b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100269e:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026a1:	89 c2                	mov    %eax,%edx
810026a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810026a6:	89 50 04             	mov    %edx,0x4(%eax)
810026a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ac:	8b 50 04             	mov    0x4(%eax),%edx
810026af:	8b 45 0c             	mov    0xc(%ebp),%eax
810026b2:	89 50 10             	mov    %edx,0x10(%eax)
810026b5:	eb 1a                	jmp    810026d1 <_printf_i+0x3a0>
810026b7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810026bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810026be:	0f b6 50 18          	movzbl 0x18(%eax),%edx
810026c2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026c5:	88 10                	mov    %dl,(%eax)
810026c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ca:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810026d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026d4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810026d8:	90                   	nop
810026d9:	83 ec 0c             	sub    $0xc,%esp
810026dc:	ff 75 14             	pushl  0x14(%ebp)
810026df:	ff 75 10             	pushl  0x10(%ebp)
810026e2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026e5:	50                   	push   %eax
810026e6:	ff 75 0c             	pushl  0xc(%ebp)
810026e9:	ff 75 08             	pushl  0x8(%ebp)
810026ec:	e8 a5 fa ff ff       	call   81002196 <_printf_common>
810026f1:	83 c4 20             	add    $0x20,%esp
810026f4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810026f7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810026fb:	74 72                	je     8100276f <_printf_i+0x43e>
810026fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81002700:	8b 40 10             	mov    0x10(%eax),%eax
81002703:	50                   	push   %eax
81002704:	ff 75 ec             	pushl  -0x14(%ebp)
81002707:	ff 75 10             	pushl  0x10(%ebp)
8100270a:	ff 75 08             	pushl  0x8(%ebp)
8100270d:	8b 45 14             	mov    0x14(%ebp),%eax
81002710:	ff d0                	call   *%eax
81002712:	83 c4 10             	add    $0x10,%esp
81002715:	83 f8 ff             	cmp    $0xffffffff,%eax
81002718:	74 58                	je     81002772 <_printf_i+0x441>
8100271a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100271d:	8b 00                	mov    (%eax),%eax
8100271f:	83 e0 02             	and    $0x2,%eax
81002722:	85 c0                	test   %eax,%eax
81002724:	74 39                	je     8100275f <_printf_i+0x42e>
81002726:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100272d:	eb 20                	jmp    8100274f <_printf_i+0x41e>
8100272f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002732:	83 c0 19             	add    $0x19,%eax
81002735:	6a 01                	push   $0x1
81002737:	50                   	push   %eax
81002738:	ff 75 10             	pushl  0x10(%ebp)
8100273b:	ff 75 08             	pushl  0x8(%ebp)
8100273e:	8b 45 14             	mov    0x14(%ebp),%eax
81002741:	ff d0                	call   *%eax
81002743:	83 c4 10             	add    $0x10,%esp
81002746:	83 f8 ff             	cmp    $0xffffffff,%eax
81002749:	74 2a                	je     81002775 <_printf_i+0x444>
8100274b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100274f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002752:	8b 40 0c             	mov    0xc(%eax),%eax
81002755:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002758:	29 d0                	sub    %edx,%eax
8100275a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100275d:	7c d0                	jl     8100272f <_printf_i+0x3fe>
8100275f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002762:	8b 50 0c             	mov    0xc(%eax),%edx
81002765:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002768:	39 c2                	cmp    %eax,%edx
8100276a:	0f 4d c2             	cmovge %edx,%eax
8100276d:	eb 0c                	jmp    8100277b <_printf_i+0x44a>
8100276f:	90                   	nop
81002770:	eb 04                	jmp    81002776 <_printf_i+0x445>
81002772:	90                   	nop
81002773:	eb 01                	jmp    81002776 <_printf_i+0x445>
81002775:	90                   	nop
81002776:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100277b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100277e:	c9                   	leave  
8100277f:	c3                   	ret    

81002780 <_realloc_r>:
81002780:	55                   	push   %ebp
81002781:	89 e5                	mov    %esp,%ebp
81002783:	83 ec 78             	sub    $0x78,%esp
81002786:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100278a:	75 16                	jne    810027a2 <_realloc_r+0x22>
8100278c:	83 ec 08             	sub    $0x8,%esp
8100278f:	ff 75 10             	pushl  0x10(%ebp)
81002792:	ff 75 08             	pushl  0x8(%ebp)
81002795:	e8 65 ea ff ff       	call   810011ff <_malloc_r>
8100279a:	83 c4 10             	add    $0x10,%esp
8100279d:	e9 b6 08 00 00       	jmp    81003058 <_realloc_r+0x8d8>
810027a2:	83 ec 0c             	sub    $0xc,%esp
810027a5:	ff 75 08             	pushl  0x8(%ebp)
810027a8:	e8 78 f4 ff ff       	call   81001c25 <__malloc_lock>
810027ad:	83 c4 10             	add    $0x10,%esp
810027b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810027b3:	83 e8 08             	sub    $0x8,%eax
810027b6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810027b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810027bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027bf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810027c2:	8b 40 04             	mov    0x4(%eax),%eax
810027c5:	83 e0 fc             	and    $0xfffffffc,%eax
810027c8:	89 45 c0             	mov    %eax,-0x40(%ebp)
810027cb:	8b 45 c0             	mov    -0x40(%ebp),%eax
810027ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027d1:	8b 45 10             	mov    0x10(%ebp),%eax
810027d4:	83 c0 0b             	add    $0xb,%eax
810027d7:	83 f8 16             	cmp    $0x16,%eax
810027da:	76 0b                	jbe    810027e7 <_realloc_r+0x67>
810027dc:	8b 45 10             	mov    0x10(%ebp),%eax
810027df:	83 c0 0b             	add    $0xb,%eax
810027e2:	83 e0 f8             	and    $0xfffffff8,%eax
810027e5:	eb 05                	jmp    810027ec <_realloc_r+0x6c>
810027e7:	b8 10 00 00 00       	mov    $0x10,%eax
810027ec:	89 45 bc             	mov    %eax,-0x44(%ebp)
810027ef:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027f2:	85 c0                	test   %eax,%eax
810027f4:	78 08                	js     810027fe <_realloc_r+0x7e>
810027f6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027f9:	3b 45 10             	cmp    0x10(%ebp),%eax
810027fc:	73 13                	jae    81002811 <_realloc_r+0x91>
810027fe:	8b 45 08             	mov    0x8(%ebp),%eax
81002801:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002807:	b8 00 00 00 00       	mov    $0x0,%eax
8100280c:	e9 47 08 00 00       	jmp    81003058 <_realloc_r+0x8d8>
81002811:	8b 55 c0             	mov    -0x40(%ebp),%edx
81002814:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002817:	39 c2                	cmp    %eax,%edx
81002819:	0f 8d 8b 07 00 00    	jge    81002faa <_realloc_r+0x82a>
8100281f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002822:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002825:	01 d0                	add    %edx,%eax
81002827:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100282a:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100282f:	8b 40 08             	mov    0x8(%eax),%eax
81002832:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002835:	74 1e                	je     81002855 <_realloc_r+0xd5>
81002837:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100283a:	8b 40 04             	mov    0x4(%eax),%eax
8100283d:	83 e0 fe             	and    $0xfffffffe,%eax
81002840:	89 c2                	mov    %eax,%edx
81002842:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002845:	01 d0                	add    %edx,%eax
81002847:	8b 40 04             	mov    0x4(%eax),%eax
8100284a:	83 e0 01             	and    $0x1,%eax
8100284d:	85 c0                	test   %eax,%eax
8100284f:	0f 85 ca 00 00 00    	jne    8100291f <_realloc_r+0x19f>
81002855:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002858:	8b 40 04             	mov    0x4(%eax),%eax
8100285b:	83 e0 fc             	and    $0xfffffffc,%eax
8100285e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002861:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81002866:	8b 40 08             	mov    0x8(%eax),%eax
81002869:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100286c:	75 71                	jne    810028df <_realloc_r+0x15f>
8100286e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002871:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002874:	01 d0                	add    %edx,%eax
81002876:	89 c2                	mov    %eax,%edx
81002878:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100287b:	83 c0 10             	add    $0x10,%eax
8100287e:	39 c2                	cmp    %eax,%edx
81002880:	0f 8c a9 00 00 00    	jl     8100292f <_realloc_r+0x1af>
81002886:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002889:	01 45 f0             	add    %eax,-0x10(%ebp)
8100288c:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
81002891:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81002894:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002897:	01 c8                	add    %ecx,%eax
81002899:	89 42 08             	mov    %eax,0x8(%edx)
8100289c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100289f:	2b 45 bc             	sub    -0x44(%ebp),%eax
810028a2:	89 c2                	mov    %eax,%edx
810028a4:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
810028a9:	8b 40 08             	mov    0x8(%eax),%eax
810028ac:	83 ca 01             	or     $0x1,%edx
810028af:	89 50 04             	mov    %edx,0x4(%eax)
810028b2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028b5:	8b 40 04             	mov    0x4(%eax),%eax
810028b8:	83 e0 01             	and    $0x1,%eax
810028bb:	0b 45 bc             	or     -0x44(%ebp),%eax
810028be:	89 c2                	mov    %eax,%edx
810028c0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028c3:	89 50 04             	mov    %edx,0x4(%eax)
810028c6:	83 ec 0c             	sub    $0xc,%esp
810028c9:	ff 75 08             	pushl  0x8(%ebp)
810028cc:	e8 5a f3 ff ff       	call   81001c2b <__malloc_unlock>
810028d1:	83 c4 10             	add    $0x10,%esp
810028d4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028d7:	83 c0 08             	add    $0x8,%eax
810028da:	e9 79 07 00 00       	jmp    81003058 <_realloc_r+0x8d8>
810028df:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028e5:	01 d0                	add    %edx,%eax
810028e7:	89 c2                	mov    %eax,%edx
810028e9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028ec:	39 c2                	cmp    %eax,%edx
810028ee:	7c 3f                	jl     8100292f <_realloc_r+0x1af>
810028f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028f3:	8b 40 0c             	mov    0xc(%eax),%eax
810028f6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810028f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028fc:	8b 40 08             	mov    0x8(%eax),%eax
810028ff:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002902:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002905:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002908:	89 50 0c             	mov    %edx,0xc(%eax)
8100290b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100290e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002911:	89 50 08             	mov    %edx,0x8(%eax)
81002914:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002917:	01 45 f0             	add    %eax,-0x10(%ebp)
8100291a:	e9 8c 06 00 00       	jmp    81002fab <_realloc_r+0x82b>
8100291f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002926:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100292d:	eb 01                	jmp    81002930 <_realloc_r+0x1b0>
8100292f:	90                   	nop
81002930:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002933:	8b 40 04             	mov    0x4(%eax),%eax
81002936:	83 e0 01             	and    $0x1,%eax
81002939:	85 c0                	test   %eax,%eax
8100293b:	0f 85 d6 04 00 00    	jne    81002e17 <_realloc_r+0x697>
81002941:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002944:	8b 00                	mov    (%eax),%eax
81002946:	f7 d8                	neg    %eax
81002948:	89 c2                	mov    %eax,%edx
8100294a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100294d:	01 d0                	add    %edx,%eax
8100294f:	89 45 b0             	mov    %eax,-0x50(%ebp)
81002952:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002955:	8b 40 04             	mov    0x4(%eax),%eax
81002958:	83 e0 fc             	and    $0xfffffffc,%eax
8100295b:	89 45 ac             	mov    %eax,-0x54(%ebp)
8100295e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002962:	0f 84 4a 03 00 00    	je     81002cb2 <_realloc_r+0x532>
81002968:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
8100296d:	8b 40 08             	mov    0x8(%eax),%eax
81002970:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002973:	0f 85 b0 01 00 00    	jne    81002b29 <_realloc_r+0x3a9>
81002979:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100297c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100297f:	01 c2                	add    %eax,%edx
81002981:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002984:	01 d0                	add    %edx,%eax
81002986:	89 c2                	mov    %eax,%edx
81002988:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100298b:	83 c0 10             	add    $0x10,%eax
8100298e:	39 c2                	cmp    %eax,%edx
81002990:	0f 8c 1c 03 00 00    	jl     81002cb2 <_realloc_r+0x532>
81002996:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002999:	8b 40 0c             	mov    0xc(%eax),%eax
8100299c:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100299f:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029a2:	8b 40 08             	mov    0x8(%eax),%eax
810029a5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810029a8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810029ab:	8b 55 b8             	mov    -0x48(%ebp),%edx
810029ae:	89 50 0c             	mov    %edx,0xc(%eax)
810029b1:	8b 45 b8             	mov    -0x48(%ebp),%eax
810029b4:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810029b7:	89 50 08             	mov    %edx,0x8(%eax)
810029ba:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029c0:	8b 55 ac             	mov    -0x54(%ebp),%edx
810029c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810029c6:	01 d0                	add    %edx,%eax
810029c8:	01 45 f0             	add    %eax,-0x10(%ebp)
810029cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029ce:	83 c0 08             	add    $0x8,%eax
810029d1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810029d4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029d7:	83 e8 04             	sub    $0x4,%eax
810029da:	89 45 a0             	mov    %eax,-0x60(%ebp)
810029dd:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810029e1:	0f 87 de 00 00 00    	ja     81002ac5 <_realloc_r+0x345>
810029e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029ed:	8b 45 a8             	mov    -0x58(%ebp),%eax
810029f0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810029f3:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810029f7:	0f 86 90 00 00 00    	jbe    81002a8d <_realloc_r+0x30d>
810029fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a00:	8d 42 04             	lea    0x4(%edx),%eax
81002a03:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a06:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a09:	8d 48 04             	lea    0x4(%eax),%ecx
81002a0c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a0f:	8b 12                	mov    (%edx),%edx
81002a11:	89 10                	mov    %edx,(%eax)
81002a13:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a16:	8d 42 04             	lea    0x4(%edx),%eax
81002a19:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a1c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a1f:	8d 48 04             	lea    0x4(%eax),%ecx
81002a22:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a25:	8b 12                	mov    (%edx),%edx
81002a27:	89 10                	mov    %edx,(%eax)
81002a29:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81002a2d:	76 5e                	jbe    81002a8d <_realloc_r+0x30d>
81002a2f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a32:	8d 42 04             	lea    0x4(%edx),%eax
81002a35:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a38:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a3b:	8d 48 04             	lea    0x4(%eax),%ecx
81002a3e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a41:	8b 12                	mov    (%edx),%edx
81002a43:	89 10                	mov    %edx,(%eax)
81002a45:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a48:	8d 42 04             	lea    0x4(%edx),%eax
81002a4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a4e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a51:	8d 48 04             	lea    0x4(%eax),%ecx
81002a54:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a57:	8b 12                	mov    (%edx),%edx
81002a59:	89 10                	mov    %edx,(%eax)
81002a5b:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81002a5f:	76 2c                	jbe    81002a8d <_realloc_r+0x30d>
81002a61:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a64:	8d 42 04             	lea    0x4(%edx),%eax
81002a67:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a6a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a6d:	8d 48 04             	lea    0x4(%eax),%ecx
81002a70:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a73:	8b 12                	mov    (%edx),%edx
81002a75:	89 10                	mov    %edx,(%eax)
81002a77:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a7a:	8d 42 04             	lea    0x4(%edx),%eax
81002a7d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a80:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a83:	8d 48 04             	lea    0x4(%eax),%ecx
81002a86:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a89:	8b 12                	mov    (%edx),%edx
81002a8b:	89 10                	mov    %edx,(%eax)
81002a8d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a90:	8d 42 04             	lea    0x4(%edx),%eax
81002a93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a96:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a99:	8d 48 04             	lea    0x4(%eax),%ecx
81002a9c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a9f:	8b 12                	mov    (%edx),%edx
81002aa1:	89 10                	mov    %edx,(%eax)
81002aa3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002aa6:	8d 42 04             	lea    0x4(%edx),%eax
81002aa9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002aac:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002aaf:	8d 48 04             	lea    0x4(%eax),%ecx
81002ab2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002ab5:	8b 12                	mov    (%edx),%edx
81002ab7:	89 10                	mov    %edx,(%eax)
81002ab9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002abc:	8b 10                	mov    (%eax),%edx
81002abe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ac1:	89 10                	mov    %edx,(%eax)
81002ac3:	eb 14                	jmp    81002ad9 <_realloc_r+0x359>
81002ac5:	83 ec 04             	sub    $0x4,%esp
81002ac8:	ff 75 a0             	pushl  -0x60(%ebp)
81002acb:	ff 75 0c             	pushl  0xc(%ebp)
81002ace:	ff 75 a8             	pushl  -0x58(%ebp)
81002ad1:	e8 3a f0 ff ff       	call   81001b10 <memmove>
81002ad6:	83 c4 10             	add    $0x10,%esp
81002ad9:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
81002ade:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ae1:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002ae4:	01 c8                	add    %ecx,%eax
81002ae6:	89 42 08             	mov    %eax,0x8(%edx)
81002ae9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aec:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002aef:	89 c2                	mov    %eax,%edx
81002af1:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81002af6:	8b 40 08             	mov    0x8(%eax),%eax
81002af9:	83 ca 01             	or     $0x1,%edx
81002afc:	89 50 04             	mov    %edx,0x4(%eax)
81002aff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b02:	8b 40 04             	mov    0x4(%eax),%eax
81002b05:	83 e0 01             	and    $0x1,%eax
81002b08:	0b 45 bc             	or     -0x44(%ebp),%eax
81002b0b:	89 c2                	mov    %eax,%edx
81002b0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b10:	89 50 04             	mov    %edx,0x4(%eax)
81002b13:	83 ec 0c             	sub    $0xc,%esp
81002b16:	ff 75 08             	pushl  0x8(%ebp)
81002b19:	e8 0d f1 ff ff       	call   81001c2b <__malloc_unlock>
81002b1e:	83 c4 10             	add    $0x10,%esp
81002b21:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002b24:	e9 2f 05 00 00       	jmp    81003058 <_realloc_r+0x8d8>
81002b29:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b2c:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b2f:	01 c2                	add    %eax,%edx
81002b31:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b34:	01 d0                	add    %edx,%eax
81002b36:	89 c2                	mov    %eax,%edx
81002b38:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b3b:	39 c2                	cmp    %eax,%edx
81002b3d:	0f 8c 6f 01 00 00    	jl     81002cb2 <_realloc_r+0x532>
81002b43:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b46:	8b 40 0c             	mov    0xc(%eax),%eax
81002b49:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b4c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b4f:	8b 40 08             	mov    0x8(%eax),%eax
81002b52:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b55:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b58:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b5b:	89 50 0c             	mov    %edx,0xc(%eax)
81002b5e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b61:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b64:	89 50 08             	mov    %edx,0x8(%eax)
81002b67:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b6a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b6d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b70:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b73:	8b 40 08             	mov    0x8(%eax),%eax
81002b76:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b79:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b7c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b7f:	89 50 0c             	mov    %edx,0xc(%eax)
81002b82:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b85:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b88:	89 50 08             	mov    %edx,0x8(%eax)
81002b8b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b8e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b91:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b94:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b97:	01 d0                	add    %edx,%eax
81002b99:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b9c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b9f:	83 c0 08             	add    $0x8,%eax
81002ba2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002ba5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002ba8:	83 e8 04             	sub    $0x4,%eax
81002bab:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002bae:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002bb2:	0f 87 e1 00 00 00    	ja     81002c99 <_realloc_r+0x519>
81002bb8:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bbb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bbe:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002bc1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002bc4:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002bc8:	0f 86 90 00 00 00    	jbe    81002c5e <_realloc_r+0x4de>
81002bce:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bd1:	8d 42 04             	lea    0x4(%edx),%eax
81002bd4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bd7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bda:	8d 48 04             	lea    0x4(%eax),%ecx
81002bdd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002be0:	8b 12                	mov    (%edx),%edx
81002be2:	89 10                	mov    %edx,(%eax)
81002be4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002be7:	8d 42 04             	lea    0x4(%edx),%eax
81002bea:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bed:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bf0:	8d 48 04             	lea    0x4(%eax),%ecx
81002bf3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bf6:	8b 12                	mov    (%edx),%edx
81002bf8:	89 10                	mov    %edx,(%eax)
81002bfa:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002bfe:	76 5e                	jbe    81002c5e <_realloc_r+0x4de>
81002c00:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c03:	8d 42 04             	lea    0x4(%edx),%eax
81002c06:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c0c:	8d 48 04             	lea    0x4(%eax),%ecx
81002c0f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c12:	8b 12                	mov    (%edx),%edx
81002c14:	89 10                	mov    %edx,(%eax)
81002c16:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c19:	8d 42 04             	lea    0x4(%edx),%eax
81002c1c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c1f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c22:	8d 48 04             	lea    0x4(%eax),%ecx
81002c25:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c28:	8b 12                	mov    (%edx),%edx
81002c2a:	89 10                	mov    %edx,(%eax)
81002c2c:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002c30:	76 2c                	jbe    81002c5e <_realloc_r+0x4de>
81002c32:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c35:	8d 42 04             	lea    0x4(%edx),%eax
81002c38:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c3b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c3e:	8d 48 04             	lea    0x4(%eax),%ecx
81002c41:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c44:	8b 12                	mov    (%edx),%edx
81002c46:	89 10                	mov    %edx,(%eax)
81002c48:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c4b:	8d 42 04             	lea    0x4(%edx),%eax
81002c4e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c51:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c54:	8d 48 04             	lea    0x4(%eax),%ecx
81002c57:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c5a:	8b 12                	mov    (%edx),%edx
81002c5c:	89 10                	mov    %edx,(%eax)
81002c5e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c61:	8d 42 04             	lea    0x4(%edx),%eax
81002c64:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c67:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c6a:	8d 48 04             	lea    0x4(%eax),%ecx
81002c6d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c70:	8b 12                	mov    (%edx),%edx
81002c72:	89 10                	mov    %edx,(%eax)
81002c74:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c77:	8d 42 04             	lea    0x4(%edx),%eax
81002c7a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c7d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c80:	8d 48 04             	lea    0x4(%eax),%ecx
81002c83:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c86:	8b 12                	mov    (%edx),%edx
81002c88:	89 10                	mov    %edx,(%eax)
81002c8a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c8d:	8b 10                	mov    (%eax),%edx
81002c8f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c92:	89 10                	mov    %edx,(%eax)
81002c94:	e9 12 03 00 00       	jmp    81002fab <_realloc_r+0x82b>
81002c99:	83 ec 04             	sub    $0x4,%esp
81002c9c:	ff 75 a4             	pushl  -0x5c(%ebp)
81002c9f:	ff 75 0c             	pushl  0xc(%ebp)
81002ca2:	ff 75 a8             	pushl  -0x58(%ebp)
81002ca5:	e8 66 ee ff ff       	call   81001b10 <memmove>
81002caa:	83 c4 10             	add    $0x10,%esp
81002cad:	e9 f9 02 00 00       	jmp    81002fab <_realloc_r+0x82b>
81002cb2:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002cb6:	0f 84 5b 01 00 00    	je     81002e17 <_realloc_r+0x697>
81002cbc:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002cbf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cc2:	01 d0                	add    %edx,%eax
81002cc4:	89 c2                	mov    %eax,%edx
81002cc6:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002cc9:	39 c2                	cmp    %eax,%edx
81002ccb:	0f 8c 46 01 00 00    	jl     81002e17 <_realloc_r+0x697>
81002cd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cd4:	8b 40 0c             	mov    0xc(%eax),%eax
81002cd7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002cda:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cdd:	8b 40 08             	mov    0x8(%eax),%eax
81002ce0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002ce3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002ce6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002ce9:	89 50 0c             	mov    %edx,0xc(%eax)
81002cec:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002cef:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002cf2:	89 50 08             	mov    %edx,0x8(%eax)
81002cf5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cf8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002cfb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002cfe:	01 45 f0             	add    %eax,-0x10(%ebp)
81002d01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d04:	83 c0 08             	add    $0x8,%eax
81002d07:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002d0a:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002d0d:	83 e8 04             	sub    $0x4,%eax
81002d10:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002d13:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002d17:	0f 87 e1 00 00 00    	ja     81002dfe <_realloc_r+0x67e>
81002d1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d20:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d23:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002d26:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002d29:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002d2d:	0f 86 90 00 00 00    	jbe    81002dc3 <_realloc_r+0x643>
81002d33:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d36:	8d 42 04             	lea    0x4(%edx),%eax
81002d39:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d3f:	8d 48 04             	lea    0x4(%eax),%ecx
81002d42:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d45:	8b 12                	mov    (%edx),%edx
81002d47:	89 10                	mov    %edx,(%eax)
81002d49:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d4c:	8d 42 04             	lea    0x4(%edx),%eax
81002d4f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d52:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d55:	8d 48 04             	lea    0x4(%eax),%ecx
81002d58:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d5b:	8b 12                	mov    (%edx),%edx
81002d5d:	89 10                	mov    %edx,(%eax)
81002d5f:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002d63:	76 5e                	jbe    81002dc3 <_realloc_r+0x643>
81002d65:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d68:	8d 42 04             	lea    0x4(%edx),%eax
81002d6b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d6e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d71:	8d 48 04             	lea    0x4(%eax),%ecx
81002d74:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d77:	8b 12                	mov    (%edx),%edx
81002d79:	89 10                	mov    %edx,(%eax)
81002d7b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d7e:	8d 42 04             	lea    0x4(%edx),%eax
81002d81:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d84:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d87:	8d 48 04             	lea    0x4(%eax),%ecx
81002d8a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d8d:	8b 12                	mov    (%edx),%edx
81002d8f:	89 10                	mov    %edx,(%eax)
81002d91:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002d95:	76 2c                	jbe    81002dc3 <_realloc_r+0x643>
81002d97:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d9a:	8d 42 04             	lea    0x4(%edx),%eax
81002d9d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002da0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002da3:	8d 48 04             	lea    0x4(%eax),%ecx
81002da6:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002da9:	8b 12                	mov    (%edx),%edx
81002dab:	89 10                	mov    %edx,(%eax)
81002dad:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002db0:	8d 42 04             	lea    0x4(%edx),%eax
81002db3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002db6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002db9:	8d 48 04             	lea    0x4(%eax),%ecx
81002dbc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dbf:	8b 12                	mov    (%edx),%edx
81002dc1:	89 10                	mov    %edx,(%eax)
81002dc3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002dc6:	8d 42 04             	lea    0x4(%edx),%eax
81002dc9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dcc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dcf:	8d 48 04             	lea    0x4(%eax),%ecx
81002dd2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dd5:	8b 12                	mov    (%edx),%edx
81002dd7:	89 10                	mov    %edx,(%eax)
81002dd9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002ddc:	8d 42 04             	lea    0x4(%edx),%eax
81002ddf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002de2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002de5:	8d 48 04             	lea    0x4(%eax),%ecx
81002de8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002deb:	8b 12                	mov    (%edx),%edx
81002ded:	89 10                	mov    %edx,(%eax)
81002def:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002df2:	8b 10                	mov    (%eax),%edx
81002df4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002df7:	89 10                	mov    %edx,(%eax)
81002df9:	e9 ad 01 00 00       	jmp    81002fab <_realloc_r+0x82b>
81002dfe:	83 ec 04             	sub    $0x4,%esp
81002e01:	ff 75 9c             	pushl  -0x64(%ebp)
81002e04:	ff 75 0c             	pushl  0xc(%ebp)
81002e07:	ff 75 a8             	pushl  -0x58(%ebp)
81002e0a:	e8 01 ed ff ff       	call   81001b10 <memmove>
81002e0f:	83 c4 10             	add    $0x10,%esp
81002e12:	e9 94 01 00 00       	jmp    81002fab <_realloc_r+0x82b>
81002e17:	83 ec 08             	sub    $0x8,%esp
81002e1a:	ff 75 10             	pushl  0x10(%ebp)
81002e1d:	ff 75 08             	pushl  0x8(%ebp)
81002e20:	e8 da e3 ff ff       	call   810011ff <_malloc_r>
81002e25:	83 c4 10             	add    $0x10,%esp
81002e28:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002e2b:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002e2f:	75 18                	jne    81002e49 <_realloc_r+0x6c9>
81002e31:	83 ec 0c             	sub    $0xc,%esp
81002e34:	ff 75 08             	pushl  0x8(%ebp)
81002e37:	e8 ef ed ff ff       	call   81001c2b <__malloc_unlock>
81002e3c:	83 c4 10             	add    $0x10,%esp
81002e3f:	b8 00 00 00 00       	mov    $0x0,%eax
81002e44:	e9 0f 02 00 00       	jmp    81003058 <_realloc_r+0x8d8>
81002e49:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e4c:	83 e8 08             	sub    $0x8,%eax
81002e4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e52:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e55:	8b 40 04             	mov    0x4(%eax),%eax
81002e58:	83 e0 fe             	and    $0xfffffffe,%eax
81002e5b:	89 c2                	mov    %eax,%edx
81002e5d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e60:	01 d0                	add    %edx,%eax
81002e62:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002e65:	75 17                	jne    81002e7e <_realloc_r+0x6fe>
81002e67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e6a:	8b 40 04             	mov    0x4(%eax),%eax
81002e6d:	83 e0 fc             	and    $0xfffffffc,%eax
81002e70:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e73:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e79:	e9 2d 01 00 00       	jmp    81002fab <_realloc_r+0x82b>
81002e7e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002e81:	83 e8 04             	sub    $0x4,%eax
81002e84:	89 45 98             	mov    %eax,-0x68(%ebp)
81002e87:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002e8b:	0f 87 de 00 00 00    	ja     81002f6f <_realloc_r+0x7ef>
81002e91:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e94:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e97:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e9a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e9d:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002ea1:	0f 86 90 00 00 00    	jbe    81002f37 <_realloc_r+0x7b7>
81002ea7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002eaa:	8d 42 04             	lea    0x4(%edx),%eax
81002ead:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eb0:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002eb3:	8d 48 04             	lea    0x4(%eax),%ecx
81002eb6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002eb9:	8b 12                	mov    (%edx),%edx
81002ebb:	89 10                	mov    %edx,(%eax)
81002ebd:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ec0:	8d 42 04             	lea    0x4(%edx),%eax
81002ec3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ec6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ec9:	8d 48 04             	lea    0x4(%eax),%ecx
81002ecc:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ecf:	8b 12                	mov    (%edx),%edx
81002ed1:	89 10                	mov    %edx,(%eax)
81002ed3:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002ed7:	76 5e                	jbe    81002f37 <_realloc_r+0x7b7>
81002ed9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002edc:	8d 42 04             	lea    0x4(%edx),%eax
81002edf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ee2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ee5:	8d 48 04             	lea    0x4(%eax),%ecx
81002ee8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002eeb:	8b 12                	mov    (%edx),%edx
81002eed:	89 10                	mov    %edx,(%eax)
81002eef:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ef2:	8d 42 04             	lea    0x4(%edx),%eax
81002ef5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ef8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002efb:	8d 48 04             	lea    0x4(%eax),%ecx
81002efe:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f01:	8b 12                	mov    (%edx),%edx
81002f03:	89 10                	mov    %edx,(%eax)
81002f05:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002f09:	76 2c                	jbe    81002f37 <_realloc_r+0x7b7>
81002f0b:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f0e:	8d 42 04             	lea    0x4(%edx),%eax
81002f11:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f14:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f17:	8d 48 04             	lea    0x4(%eax),%ecx
81002f1a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f1d:	8b 12                	mov    (%edx),%edx
81002f1f:	89 10                	mov    %edx,(%eax)
81002f21:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f24:	8d 42 04             	lea    0x4(%edx),%eax
81002f27:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f2a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f2d:	8d 48 04             	lea    0x4(%eax),%ecx
81002f30:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f33:	8b 12                	mov    (%edx),%edx
81002f35:	89 10                	mov    %edx,(%eax)
81002f37:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f3a:	8d 42 04             	lea    0x4(%edx),%eax
81002f3d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f40:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f43:	8d 48 04             	lea    0x4(%eax),%ecx
81002f46:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f49:	8b 12                	mov    (%edx),%edx
81002f4b:	89 10                	mov    %edx,(%eax)
81002f4d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f50:	8d 42 04             	lea    0x4(%edx),%eax
81002f53:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f56:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f59:	8d 48 04             	lea    0x4(%eax),%ecx
81002f5c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f5f:	8b 12                	mov    (%edx),%edx
81002f61:	89 10                	mov    %edx,(%eax)
81002f63:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f66:	8b 10                	mov    (%eax),%edx
81002f68:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f6b:	89 10                	mov    %edx,(%eax)
81002f6d:	eb 14                	jmp    81002f83 <_realloc_r+0x803>
81002f6f:	83 ec 04             	sub    $0x4,%esp
81002f72:	ff 75 98             	pushl  -0x68(%ebp)
81002f75:	ff 75 0c             	pushl  0xc(%ebp)
81002f78:	ff 75 a8             	pushl  -0x58(%ebp)
81002f7b:	e8 90 eb ff ff       	call   81001b10 <memmove>
81002f80:	83 c4 10             	add    $0x10,%esp
81002f83:	83 ec 08             	sub    $0x8,%esp
81002f86:	ff 75 0c             	pushl  0xc(%ebp)
81002f89:	ff 75 08             	pushl  0x8(%ebp)
81002f8c:	e8 c5 0a 00 00       	call   81003a56 <_free_r>
81002f91:	83 c4 10             	add    $0x10,%esp
81002f94:	83 ec 0c             	sub    $0xc,%esp
81002f97:	ff 75 08             	pushl  0x8(%ebp)
81002f9a:	e8 8c ec ff ff       	call   81001c2b <__malloc_unlock>
81002f9f:	83 c4 10             	add    $0x10,%esp
81002fa2:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002fa5:	e9 ae 00 00 00       	jmp    81003058 <_realloc_r+0x8d8>
81002faa:	90                   	nop
81002fab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fae:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002fb1:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002fb4:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002fb8:	76 5d                	jbe    81003017 <_realloc_r+0x897>
81002fba:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fbd:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002fc0:	01 d0                	add    %edx,%eax
81002fc2:	89 45 90             	mov    %eax,-0x70(%ebp)
81002fc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fc8:	8b 40 04             	mov    0x4(%eax),%eax
81002fcb:	83 e0 01             	and    $0x1,%eax
81002fce:	0b 45 bc             	or     -0x44(%ebp),%eax
81002fd1:	89 c2                	mov    %eax,%edx
81002fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fd6:	89 50 04             	mov    %edx,0x4(%eax)
81002fd9:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fdc:	83 c8 01             	or     $0x1,%eax
81002fdf:	89 c2                	mov    %eax,%edx
81002fe1:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fe4:	89 50 04             	mov    %edx,0x4(%eax)
81002fe7:	8b 55 90             	mov    -0x70(%ebp),%edx
81002fea:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fed:	01 d0                	add    %edx,%eax
81002fef:	8b 50 04             	mov    0x4(%eax),%edx
81002ff2:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002ff5:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002ff8:	01 c8                	add    %ecx,%eax
81002ffa:	83 ca 01             	or     $0x1,%edx
81002ffd:	89 50 04             	mov    %edx,0x4(%eax)
81003000:	8b 45 90             	mov    -0x70(%ebp),%eax
81003003:	83 c0 08             	add    $0x8,%eax
81003006:	83 ec 08             	sub    $0x8,%esp
81003009:	50                   	push   %eax
8100300a:	ff 75 08             	pushl  0x8(%ebp)
8100300d:	e8 44 0a 00 00       	call   81003a56 <_free_r>
81003012:	83 c4 10             	add    $0x10,%esp
81003015:	eb 2d                	jmp    81003044 <_realloc_r+0x8c4>
81003017:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100301a:	8b 40 04             	mov    0x4(%eax),%eax
8100301d:	83 e0 01             	and    $0x1,%eax
81003020:	0b 45 f0             	or     -0x10(%ebp),%eax
81003023:	89 c2                	mov    %eax,%edx
81003025:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003028:	89 50 04             	mov    %edx,0x4(%eax)
8100302b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100302e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003031:	01 d0                	add    %edx,%eax
81003033:	8b 50 04             	mov    0x4(%eax),%edx
81003036:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003039:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100303c:	01 c8                	add    %ecx,%eax
8100303e:	83 ca 01             	or     $0x1,%edx
81003041:	89 50 04             	mov    %edx,0x4(%eax)
81003044:	83 ec 0c             	sub    $0xc,%esp
81003047:	ff 75 08             	pushl  0x8(%ebp)
8100304a:	e8 dc eb ff ff       	call   81001c2b <__malloc_unlock>
8100304f:	83 c4 10             	add    $0x10,%esp
81003052:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003055:	83 c0 08             	add    $0x8,%eax
81003058:	c9                   	leave  
81003059:	c3                   	ret    

8100305a <_sbrk_r>:
8100305a:	55                   	push   %ebp
8100305b:	89 e5                	mov    %esp,%ebp
8100305d:	83 ec 18             	sub    $0x18,%esp
81003060:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
81003067:	00 00 00 
8100306a:	83 ec 0c             	sub    $0xc,%esp
8100306d:	ff 75 0c             	pushl  0xc(%ebp)
81003070:	e8 8a d3 ff ff       	call   810003ff <sbrk>
81003075:	83 c4 10             	add    $0x10,%esp
81003078:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100307b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100307f:	75 14                	jne    81003095 <_sbrk_r+0x3b>
81003081:	a1 b0 55 00 81       	mov    0x810055b0,%eax
81003086:	85 c0                	test   %eax,%eax
81003088:	74 0b                	je     81003095 <_sbrk_r+0x3b>
8100308a:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
81003090:	8b 45 08             	mov    0x8(%ebp),%eax
81003093:	89 10                	mov    %edx,(%eax)
81003095:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003098:	c9                   	leave  
81003099:	c3                   	ret    

8100309a <__sread>:
8100309a:	55                   	push   %ebp
8100309b:	89 e5                	mov    %esp,%ebp
8100309d:	56                   	push   %esi
8100309e:	53                   	push   %ebx
8100309f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030a2:	8b 55 14             	mov    0x14(%ebp),%edx
810030a5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030a9:	98                   	cwtl   
810030aa:	52                   	push   %edx
810030ab:	ff 75 10             	pushl  0x10(%ebp)
810030ae:	50                   	push   %eax
810030af:	ff 75 08             	pushl  0x8(%ebp)
810030b2:	e8 dd 11 00 00       	call   81004294 <_read_r>
810030b7:	83 c4 10             	add    $0x10,%esp
810030ba:	89 c6                	mov    %eax,%esi
810030bc:	85 f6                	test   %esi,%esi
810030be:	78 0a                	js     810030ca <__sread+0x30>
810030c0:	8b 43 50             	mov    0x50(%ebx),%eax
810030c3:	01 f0                	add    %esi,%eax
810030c5:	89 43 50             	mov    %eax,0x50(%ebx)
810030c8:	eb 0b                	jmp    810030d5 <__sread+0x3b>
810030ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030ce:	80 e4 ef             	and    $0xef,%ah
810030d1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030d5:	89 f0                	mov    %esi,%eax
810030d7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810030da:	5b                   	pop    %ebx
810030db:	5e                   	pop    %esi
810030dc:	5d                   	pop    %ebp
810030dd:	c3                   	ret    

810030de <__seofread>:
810030de:	55                   	push   %ebp
810030df:	89 e5                	mov    %esp,%ebp
810030e1:	b8 00 00 00 00       	mov    $0x0,%eax
810030e6:	5d                   	pop    %ebp
810030e7:	c3                   	ret    

810030e8 <__swrite>:
810030e8:	55                   	push   %ebp
810030e9:	89 e5                	mov    %esp,%ebp
810030eb:	53                   	push   %ebx
810030ec:	83 ec 14             	sub    $0x14,%esp
810030ef:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030f6:	98                   	cwtl   
810030f7:	25 00 01 00 00       	and    $0x100,%eax
810030fc:	85 c0                	test   %eax,%eax
810030fe:	74 15                	je     81003115 <__swrite+0x2d>
81003100:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003104:	98                   	cwtl   
81003105:	6a 02                	push   $0x2
81003107:	6a 00                	push   $0x0
81003109:	50                   	push   %eax
8100310a:	ff 75 08             	pushl  0x8(%ebp)
8100310d:	e8 26 0f 00 00       	call   81004038 <_lseek_r>
81003112:	83 c4 10             	add    $0x10,%esp
81003115:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003119:	80 e4 ef             	and    $0xef,%ah
8100311c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003120:	8b 55 14             	mov    0x14(%ebp),%edx
81003123:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003127:	98                   	cwtl   
81003128:	52                   	push   %edx
81003129:	ff 75 10             	pushl  0x10(%ebp)
8100312c:	50                   	push   %eax
8100312d:	ff 75 08             	pushl  0x8(%ebp)
81003130:	e8 b0 01 00 00       	call   810032e5 <_write_r>
81003135:	83 c4 10             	add    $0x10,%esp
81003138:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100313b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100313e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003141:	c9                   	leave  
81003142:	c3                   	ret    

81003143 <__sseek>:
81003143:	55                   	push   %ebp
81003144:	89 e5                	mov    %esp,%ebp
81003146:	56                   	push   %esi
81003147:	53                   	push   %ebx
81003148:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100314b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100314f:	98                   	cwtl   
81003150:	ff 75 14             	pushl  0x14(%ebp)
81003153:	ff 75 10             	pushl  0x10(%ebp)
81003156:	50                   	push   %eax
81003157:	ff 75 08             	pushl  0x8(%ebp)
8100315a:	e8 d9 0e 00 00       	call   81004038 <_lseek_r>
8100315f:	83 c4 10             	add    $0x10,%esp
81003162:	89 c6                	mov    %eax,%esi
81003164:	83 fe ff             	cmp    $0xffffffff,%esi
81003167:	75 0d                	jne    81003176 <__sseek+0x33>
81003169:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100316d:	80 e4 ef             	and    $0xef,%ah
81003170:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003174:	eb 0e                	jmp    81003184 <__sseek+0x41>
81003176:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100317a:	80 cc 10             	or     $0x10,%ah
8100317d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003181:	89 73 50             	mov    %esi,0x50(%ebx)
81003184:	89 f0                	mov    %esi,%eax
81003186:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003189:	5b                   	pop    %ebx
8100318a:	5e                   	pop    %esi
8100318b:	5d                   	pop    %ebp
8100318c:	c3                   	ret    

8100318d <__sclose>:
8100318d:	55                   	push   %ebp
8100318e:	89 e5                	mov    %esp,%ebp
81003190:	83 ec 18             	sub    $0x18,%esp
81003193:	8b 45 0c             	mov    0xc(%ebp),%eax
81003196:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003199:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100319c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810031a0:	98                   	cwtl   
810031a1:	83 ec 08             	sub    $0x8,%esp
810031a4:	50                   	push   %eax
810031a5:	ff 75 08             	pushl  0x8(%ebp)
810031a8:	e8 d9 02 00 00       	call   81003486 <_close_r>
810031ad:	83 c4 10             	add    $0x10,%esp
810031b0:	c9                   	leave  
810031b1:	c3                   	ret    

810031b2 <__swbuf_r>:
810031b2:	55                   	push   %ebp
810031b3:	89 e5                	mov    %esp,%ebp
810031b5:	57                   	push   %edi
810031b6:	56                   	push   %esi
810031b7:	53                   	push   %ebx
810031b8:	83 ec 1c             	sub    $0x1c,%esp
810031bb:	8b 7d 0c             	mov    0xc(%ebp),%edi
810031be:	8b 5d 10             	mov    0x10(%ebp),%ebx
810031c1:	8b 45 08             	mov    0x8(%ebp),%eax
810031c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810031c7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810031cb:	74 18                	je     810031e5 <__swbuf_r+0x33>
810031cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031d0:	8b 40 38             	mov    0x38(%eax),%eax
810031d3:	85 c0                	test   %eax,%eax
810031d5:	75 0e                	jne    810031e5 <__swbuf_r+0x33>
810031d7:	83 ec 0c             	sub    $0xc,%esp
810031da:	ff 75 e4             	pushl  -0x1c(%ebp)
810031dd:	e8 0c d7 ff ff       	call   810008ee <__sinit>
810031e2:	83 c4 10             	add    $0x10,%esp
810031e5:	8b 43 18             	mov    0x18(%ebx),%eax
810031e8:	89 43 08             	mov    %eax,0x8(%ebx)
810031eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031ef:	98                   	cwtl   
810031f0:	83 e0 08             	and    $0x8,%eax
810031f3:	85 c0                	test   %eax,%eax
810031f5:	74 07                	je     810031fe <__swbuf_r+0x4c>
810031f7:	8b 43 10             	mov    0x10(%ebx),%eax
810031fa:	85 c0                	test   %eax,%eax
810031fc:	75 1d                	jne    8100321b <__swbuf_r+0x69>
810031fe:	83 ec 08             	sub    $0x8,%esp
81003201:	53                   	push   %ebx
81003202:	ff 75 08             	pushl  0x8(%ebp)
81003205:	e8 21 01 00 00       	call   8100332b <__swsetup_r>
8100320a:	83 c4 10             	add    $0x10,%esp
8100320d:	85 c0                	test   %eax,%eax
8100320f:	74 0a                	je     8100321b <__swbuf_r+0x69>
81003211:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003216:	e9 a1 00 00 00       	jmp    810032bc <__swbuf_r+0x10a>
8100321b:	89 f8                	mov    %edi,%eax
8100321d:	0f b6 f8             	movzbl %al,%edi
81003220:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003224:	98                   	cwtl   
81003225:	25 00 20 00 00       	and    $0x2000,%eax
8100322a:	85 c0                	test   %eax,%eax
8100322c:	75 14                	jne    81003242 <__swbuf_r+0x90>
8100322e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003232:	80 cc 20             	or     $0x20,%ah
81003235:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003239:	8b 43 64             	mov    0x64(%ebx),%eax
8100323c:	80 e4 df             	and    $0xdf,%ah
8100323f:	89 43 64             	mov    %eax,0x64(%ebx)
81003242:	8b 03                	mov    (%ebx),%eax
81003244:	8b 53 10             	mov    0x10(%ebx),%edx
81003247:	29 d0                	sub    %edx,%eax
81003249:	89 c6                	mov    %eax,%esi
8100324b:	8b 43 14             	mov    0x14(%ebx),%eax
8100324e:	39 c6                	cmp    %eax,%esi
81003250:	7c 1f                	jl     81003271 <__swbuf_r+0xbf>
81003252:	83 ec 08             	sub    $0x8,%esp
81003255:	53                   	push   %ebx
81003256:	ff 75 08             	pushl  0x8(%ebp)
81003259:	e8 b2 05 00 00       	call   81003810 <_fflush_r>
8100325e:	83 c4 10             	add    $0x10,%esp
81003261:	85 c0                	test   %eax,%eax
81003263:	74 07                	je     8100326c <__swbuf_r+0xba>
81003265:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100326a:	eb 50                	jmp    810032bc <__swbuf_r+0x10a>
8100326c:	be 00 00 00 00       	mov    $0x0,%esi
81003271:	8b 43 08             	mov    0x8(%ebx),%eax
81003274:	83 e8 01             	sub    $0x1,%eax
81003277:	89 43 08             	mov    %eax,0x8(%ebx)
8100327a:	8b 03                	mov    (%ebx),%eax
8100327c:	8d 50 01             	lea    0x1(%eax),%edx
8100327f:	89 13                	mov    %edx,(%ebx)
81003281:	89 fa                	mov    %edi,%edx
81003283:	88 10                	mov    %dl,(%eax)
81003285:	83 c6 01             	add    $0x1,%esi
81003288:	8b 43 14             	mov    0x14(%ebx),%eax
8100328b:	39 c6                	cmp    %eax,%esi
8100328d:	74 11                	je     810032a0 <__swbuf_r+0xee>
8100328f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003293:	98                   	cwtl   
81003294:	83 e0 01             	and    $0x1,%eax
81003297:	85 c0                	test   %eax,%eax
81003299:	74 1f                	je     810032ba <__swbuf_r+0x108>
8100329b:	83 ff 0a             	cmp    $0xa,%edi
8100329e:	75 1a                	jne    810032ba <__swbuf_r+0x108>
810032a0:	83 ec 08             	sub    $0x8,%esp
810032a3:	53                   	push   %ebx
810032a4:	ff 75 08             	pushl  0x8(%ebp)
810032a7:	e8 64 05 00 00       	call   81003810 <_fflush_r>
810032ac:	83 c4 10             	add    $0x10,%esp
810032af:	85 c0                	test   %eax,%eax
810032b1:	74 07                	je     810032ba <__swbuf_r+0x108>
810032b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810032b8:	eb 02                	jmp    810032bc <__swbuf_r+0x10a>
810032ba:	89 f8                	mov    %edi,%eax
810032bc:	8d 65 f4             	lea    -0xc(%ebp),%esp
810032bf:	5b                   	pop    %ebx
810032c0:	5e                   	pop    %esi
810032c1:	5f                   	pop    %edi
810032c2:	5d                   	pop    %ebp
810032c3:	c3                   	ret    

810032c4 <__swbuf>:
810032c4:	55                   	push   %ebp
810032c5:	89 e5                	mov    %esp,%ebp
810032c7:	83 ec 08             	sub    $0x8,%esp
810032ca:	8b 55 08             	mov    0x8(%ebp),%edx
810032cd:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810032d0:	a1 84 4f 00 81       	mov    0x81004f84,%eax
810032d5:	83 ec 04             	sub    $0x4,%esp
810032d8:	51                   	push   %ecx
810032d9:	52                   	push   %edx
810032da:	50                   	push   %eax
810032db:	e8 d2 fe ff ff       	call   810031b2 <__swbuf_r>
810032e0:	83 c4 10             	add    $0x10,%esp
810032e3:	c9                   	leave  
810032e4:	c3                   	ret    

810032e5 <_write_r>:
810032e5:	55                   	push   %ebp
810032e6:	89 e5                	mov    %esp,%ebp
810032e8:	83 ec 18             	sub    $0x18,%esp
810032eb:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
810032f2:	00 00 00 
810032f5:	83 ec 04             	sub    $0x4,%esp
810032f8:	ff 75 14             	pushl  0x14(%ebp)
810032fb:	ff 75 10             	pushl  0x10(%ebp)
810032fe:	ff 75 0c             	pushl  0xc(%ebp)
81003301:	e8 36 d0 ff ff       	call   8100033c <write>
81003306:	83 c4 10             	add    $0x10,%esp
81003309:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100330c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003310:	75 14                	jne    81003326 <_write_r+0x41>
81003312:	a1 b0 55 00 81       	mov    0x810055b0,%eax
81003317:	85 c0                	test   %eax,%eax
81003319:	74 0b                	je     81003326 <_write_r+0x41>
8100331b:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
81003321:	8b 45 08             	mov    0x8(%ebp),%eax
81003324:	89 10                	mov    %edx,(%eax)
81003326:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003329:	c9                   	leave  
8100332a:	c3                   	ret    

8100332b <__swsetup_r>:
8100332b:	55                   	push   %ebp
8100332c:	89 e5                	mov    %esp,%ebp
8100332e:	53                   	push   %ebx
8100332f:	83 ec 14             	sub    $0x14,%esp
81003332:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003335:	a1 84 4f 00 81       	mov    0x81004f84,%eax
8100333a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100333d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003341:	74 18                	je     8100335b <__swsetup_r+0x30>
81003343:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003346:	8b 40 38             	mov    0x38(%eax),%eax
81003349:	85 c0                	test   %eax,%eax
8100334b:	75 0e                	jne    8100335b <__swsetup_r+0x30>
8100334d:	83 ec 0c             	sub    $0xc,%esp
81003350:	ff 75 f4             	pushl  -0xc(%ebp)
81003353:	e8 96 d5 ff ff       	call   810008ee <__sinit>
81003358:	83 c4 10             	add    $0x10,%esp
8100335b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100335f:	98                   	cwtl   
81003360:	83 e0 08             	and    $0x8,%eax
81003363:	85 c0                	test   %eax,%eax
81003365:	0f 85 82 00 00 00    	jne    810033ed <__swsetup_r+0xc2>
8100336b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100336f:	98                   	cwtl   
81003370:	83 e0 10             	and    $0x10,%eax
81003373:	85 c0                	test   %eax,%eax
81003375:	75 1e                	jne    81003395 <__swsetup_r+0x6a>
81003377:	8b 45 08             	mov    0x8(%ebp),%eax
8100337a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003380:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003384:	83 c8 40             	or     $0x40,%eax
81003387:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100338b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003390:	e9 ec 00 00 00       	jmp    81003481 <__swsetup_r+0x156>
81003395:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003399:	98                   	cwtl   
8100339a:	83 e0 04             	and    $0x4,%eax
8100339d:	85 c0                	test   %eax,%eax
8100339f:	74 41                	je     810033e2 <__swsetup_r+0xb7>
810033a1:	8b 43 30             	mov    0x30(%ebx),%eax
810033a4:	85 c0                	test   %eax,%eax
810033a6:	74 23                	je     810033cb <__swsetup_r+0xa0>
810033a8:	8b 53 30             	mov    0x30(%ebx),%edx
810033ab:	8d 43 40             	lea    0x40(%ebx),%eax
810033ae:	39 c2                	cmp    %eax,%edx
810033b0:	74 12                	je     810033c4 <__swsetup_r+0x99>
810033b2:	8b 43 30             	mov    0x30(%ebx),%eax
810033b5:	83 ec 08             	sub    $0x8,%esp
810033b8:	50                   	push   %eax
810033b9:	ff 75 08             	pushl  0x8(%ebp)
810033bc:	e8 95 06 00 00       	call   81003a56 <_free_r>
810033c1:	83 c4 10             	add    $0x10,%esp
810033c4:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810033cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033cf:	83 e0 db             	and    $0xffffffdb,%eax
810033d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033d6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033dd:	8b 43 10             	mov    0x10(%ebx),%eax
810033e0:	89 03                	mov    %eax,(%ebx)
810033e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033e6:	83 c8 08             	or     $0x8,%eax
810033e9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033ed:	8b 43 10             	mov    0x10(%ebx),%eax
810033f0:	85 c0                	test   %eax,%eax
810033f2:	75 2b                	jne    8100341f <__swsetup_r+0xf4>
810033f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033f8:	98                   	cwtl   
810033f9:	25 00 02 00 00       	and    $0x200,%eax
810033fe:	85 c0                	test   %eax,%eax
81003400:	74 0e                	je     81003410 <__swsetup_r+0xe5>
81003402:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003406:	98                   	cwtl   
81003407:	25 80 00 00 00       	and    $0x80,%eax
8100340c:	85 c0                	test   %eax,%eax
8100340e:	74 0f                	je     8100341f <__swsetup_r+0xf4>
81003410:	83 ec 08             	sub    $0x8,%esp
81003413:	53                   	push   %ebx
81003414:	ff 75 08             	pushl  0x8(%ebp)
81003417:	e8 62 0c 00 00       	call   8100407e <__smakebuf_r>
8100341c:	83 c4 10             	add    $0x10,%esp
8100341f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003423:	98                   	cwtl   
81003424:	83 e0 01             	and    $0x1,%eax
81003427:	85 c0                	test   %eax,%eax
81003429:	74 11                	je     8100343c <__swsetup_r+0x111>
8100342b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003432:	8b 43 14             	mov    0x14(%ebx),%eax
81003435:	f7 d8                	neg    %eax
81003437:	89 43 18             	mov    %eax,0x18(%ebx)
8100343a:	eb 19                	jmp    81003455 <__swsetup_r+0x12a>
8100343c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003440:	98                   	cwtl   
81003441:	83 e0 02             	and    $0x2,%eax
81003444:	85 c0                	test   %eax,%eax
81003446:	75 05                	jne    8100344d <__swsetup_r+0x122>
81003448:	8b 43 14             	mov    0x14(%ebx),%eax
8100344b:	eb 05                	jmp    81003452 <__swsetup_r+0x127>
8100344d:	b8 00 00 00 00       	mov    $0x0,%eax
81003452:	89 43 08             	mov    %eax,0x8(%ebx)
81003455:	8b 43 10             	mov    0x10(%ebx),%eax
81003458:	85 c0                	test   %eax,%eax
8100345a:	75 20                	jne    8100347c <__swsetup_r+0x151>
8100345c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003460:	98                   	cwtl   
81003461:	25 80 00 00 00       	and    $0x80,%eax
81003466:	85 c0                	test   %eax,%eax
81003468:	74 12                	je     8100347c <__swsetup_r+0x151>
8100346a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100346e:	83 c8 40             	or     $0x40,%eax
81003471:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003475:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100347a:	eb 05                	jmp    81003481 <__swsetup_r+0x156>
8100347c:	b8 00 00 00 00       	mov    $0x0,%eax
81003481:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003484:	c9                   	leave  
81003485:	c3                   	ret    

81003486 <_close_r>:
81003486:	55                   	push   %ebp
81003487:	89 e5                	mov    %esp,%ebp
81003489:	83 ec 18             	sub    $0x18,%esp
8100348c:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
81003493:	00 00 00 
81003496:	83 ec 0c             	sub    $0xc,%esp
81003499:	ff 75 0c             	pushl  0xc(%ebp)
8100349c:	e8 c8 ce ff ff       	call   81000369 <close>
810034a1:	83 c4 10             	add    $0x10,%esp
810034a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034a7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810034ab:	75 14                	jne    810034c1 <_close_r+0x3b>
810034ad:	a1 b0 55 00 81       	mov    0x810055b0,%eax
810034b2:	85 c0                	test   %eax,%eax
810034b4:	74 0b                	je     810034c1 <_close_r+0x3b>
810034b6:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
810034bc:	8b 45 08             	mov    0x8(%ebp),%eax
810034bf:	89 10                	mov    %edx,(%eax)
810034c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034c4:	c9                   	leave  
810034c5:	c3                   	ret    

810034c6 <_fclose_r>:
810034c6:	55                   	push   %ebp
810034c7:	89 e5                	mov    %esp,%ebp
810034c9:	53                   	push   %ebx
810034ca:	83 ec 14             	sub    $0x14,%esp
810034cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810034d0:	85 db                	test   %ebx,%ebx
810034d2:	75 0a                	jne    810034de <_fclose_r+0x18>
810034d4:	b8 00 00 00 00       	mov    $0x0,%eax
810034d9:	e9 ea 00 00 00       	jmp    810035c8 <_fclose_r+0x102>
810034de:	8b 45 08             	mov    0x8(%ebp),%eax
810034e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810034e4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810034e8:	74 18                	je     81003502 <_fclose_r+0x3c>
810034ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034ed:	8b 40 38             	mov    0x38(%eax),%eax
810034f0:	85 c0                	test   %eax,%eax
810034f2:	75 0e                	jne    81003502 <_fclose_r+0x3c>
810034f4:	83 ec 0c             	sub    $0xc,%esp
810034f7:	ff 75 f0             	pushl  -0x10(%ebp)
810034fa:	e8 ef d3 ff ff       	call   810008ee <__sinit>
810034ff:	83 c4 10             	add    $0x10,%esp
81003502:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003506:	66 85 c0             	test   %ax,%ax
81003509:	75 0a                	jne    81003515 <_fclose_r+0x4f>
8100350b:	b8 00 00 00 00       	mov    $0x0,%eax
81003510:	e9 b3 00 00 00       	jmp    810035c8 <_fclose_r+0x102>
81003515:	83 ec 08             	sub    $0x8,%esp
81003518:	53                   	push   %ebx
81003519:	ff 75 08             	pushl  0x8(%ebp)
8100351c:	e8 c9 00 00 00       	call   810035ea <__sflush_r>
81003521:	83 c4 10             	add    $0x10,%esp
81003524:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003527:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100352a:	85 c0                	test   %eax,%eax
8100352c:	74 1d                	je     8100354b <_fclose_r+0x85>
8100352e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003531:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003534:	83 ec 08             	sub    $0x8,%esp
81003537:	52                   	push   %edx
81003538:	ff 75 08             	pushl  0x8(%ebp)
8100353b:	ff d0                	call   *%eax
8100353d:	83 c4 10             	add    $0x10,%esp
81003540:	85 c0                	test   %eax,%eax
81003542:	79 07                	jns    8100354b <_fclose_r+0x85>
81003544:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100354b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100354f:	98                   	cwtl   
81003550:	25 80 00 00 00       	and    $0x80,%eax
81003555:	85 c0                	test   %eax,%eax
81003557:	74 12                	je     8100356b <_fclose_r+0xa5>
81003559:	8b 43 10             	mov    0x10(%ebx),%eax
8100355c:	83 ec 08             	sub    $0x8,%esp
8100355f:	50                   	push   %eax
81003560:	ff 75 08             	pushl  0x8(%ebp)
81003563:	e8 ee 04 00 00       	call   81003a56 <_free_r>
81003568:	83 c4 10             	add    $0x10,%esp
8100356b:	8b 43 30             	mov    0x30(%ebx),%eax
8100356e:	85 c0                	test   %eax,%eax
81003570:	74 23                	je     81003595 <_fclose_r+0xcf>
81003572:	8b 53 30             	mov    0x30(%ebx),%edx
81003575:	8d 43 40             	lea    0x40(%ebx),%eax
81003578:	39 c2                	cmp    %eax,%edx
8100357a:	74 12                	je     8100358e <_fclose_r+0xc8>
8100357c:	8b 43 30             	mov    0x30(%ebx),%eax
8100357f:	83 ec 08             	sub    $0x8,%esp
81003582:	50                   	push   %eax
81003583:	ff 75 08             	pushl  0x8(%ebp)
81003586:	e8 cb 04 00 00       	call   81003a56 <_free_r>
8100358b:	83 c4 10             	add    $0x10,%esp
8100358e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003595:	8b 43 44             	mov    0x44(%ebx),%eax
81003598:	85 c0                	test   %eax,%eax
8100359a:	74 19                	je     810035b5 <_fclose_r+0xef>
8100359c:	8b 43 44             	mov    0x44(%ebx),%eax
8100359f:	83 ec 08             	sub    $0x8,%esp
810035a2:	50                   	push   %eax
810035a3:	ff 75 08             	pushl  0x8(%ebp)
810035a6:	e8 ab 04 00 00       	call   81003a56 <_free_r>
810035ab:	83 c4 10             	add    $0x10,%esp
810035ae:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
810035b5:	e8 cd d3 ff ff       	call   81000987 <__sfp_lock_acquire>
810035ba:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810035c0:	e8 c8 d3 ff ff       	call   8100098d <__sfp_lock_release>
810035c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035c8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810035cb:	c9                   	leave  
810035cc:	c3                   	ret    

810035cd <fclose>:
810035cd:	55                   	push   %ebp
810035ce:	89 e5                	mov    %esp,%ebp
810035d0:	83 ec 08             	sub    $0x8,%esp
810035d3:	8b 55 08             	mov    0x8(%ebp),%edx
810035d6:	a1 84 4f 00 81       	mov    0x81004f84,%eax
810035db:	83 ec 08             	sub    $0x8,%esp
810035de:	52                   	push   %edx
810035df:	50                   	push   %eax
810035e0:	e8 e1 fe ff ff       	call   810034c6 <_fclose_r>
810035e5:	83 c4 10             	add    $0x10,%esp
810035e8:	c9                   	leave  
810035e9:	c3                   	ret    

810035ea <__sflush_r>:
810035ea:	55                   	push   %ebp
810035eb:	89 e5                	mov    %esp,%ebp
810035ed:	57                   	push   %edi
810035ee:	56                   	push   %esi
810035ef:	53                   	push   %ebx
810035f0:	83 ec 1c             	sub    $0x1c,%esp
810035f3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810035f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035fa:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810035fe:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81003602:	83 e0 08             	and    $0x8,%eax
81003605:	85 c0                	test   %eax,%eax
81003607:	0f 85 93 01 00 00    	jne    810037a0 <__sflush_r+0x1b6>
8100360d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003611:	80 cc 08             	or     $0x8,%ah
81003614:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003618:	8b 43 04             	mov    0x4(%ebx),%eax
8100361b:	85 c0                	test   %eax,%eax
8100361d:	7f 0b                	jg     8100362a <__sflush_r+0x40>
8100361f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81003622:	85 c0                	test   %eax,%eax
81003624:	0f 8e 6f 01 00 00    	jle    81003799 <__sflush_r+0x1af>
8100362a:	8b 43 28             	mov    0x28(%ebx),%eax
8100362d:	85 c0                	test   %eax,%eax
8100362f:	0f 84 64 01 00 00    	je     81003799 <__sflush_r+0x1af>
81003635:	8b 45 08             	mov    0x8(%ebp),%eax
81003638:	8b 00                	mov    (%eax),%eax
8100363a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100363d:	8b 45 08             	mov    0x8(%ebp),%eax
81003640:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003646:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100364a:	98                   	cwtl   
8100364b:	25 00 10 00 00       	and    $0x1000,%eax
81003650:	85 c0                	test   %eax,%eax
81003652:	74 08                	je     8100365c <__sflush_r+0x72>
81003654:	8b 43 50             	mov    0x50(%ebx),%eax
81003657:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100365a:	eb 64                	jmp    810036c0 <__sflush_r+0xd6>
8100365c:	8b 43 28             	mov    0x28(%ebx),%eax
8100365f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003662:	6a 01                	push   $0x1
81003664:	6a 00                	push   $0x0
81003666:	52                   	push   %edx
81003667:	ff 75 08             	pushl  0x8(%ebp)
8100366a:	ff d0                	call   *%eax
8100366c:	83 c4 10             	add    $0x10,%esp
8100366f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003672:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003676:	75 48                	jne    810036c0 <__sflush_r+0xd6>
81003678:	8b 45 08             	mov    0x8(%ebp),%eax
8100367b:	8b 00                	mov    (%eax),%eax
8100367d:	85 c0                	test   %eax,%eax
8100367f:	74 3f                	je     810036c0 <__sflush_r+0xd6>
81003681:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003688:	8b 45 08             	mov    0x8(%ebp),%eax
8100368b:	8b 00                	mov    (%eax),%eax
8100368d:	83 f8 1d             	cmp    $0x1d,%eax
81003690:	74 0a                	je     8100369c <__sflush_r+0xb2>
81003692:	8b 45 08             	mov    0x8(%ebp),%eax
81003695:	8b 00                	mov    (%eax),%eax
81003697:	83 f8 16             	cmp    $0x16,%eax
8100369a:	75 11                	jne    810036ad <__sflush_r+0xc3>
8100369c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810036a3:	8b 45 08             	mov    0x8(%ebp),%eax
810036a6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810036a9:	89 10                	mov    %edx,(%eax)
810036ab:	eb 0b                	jmp    810036b8 <__sflush_r+0xce>
810036ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036b1:	83 c8 40             	or     $0x40,%eax
810036b4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036bb:	e9 48 01 00 00       	jmp    81003808 <__sflush_r+0x21e>
810036c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036c4:	98                   	cwtl   
810036c5:	83 e0 04             	and    $0x4,%eax
810036c8:	85 c0                	test   %eax,%eax
810036ca:	74 13                	je     810036df <__sflush_r+0xf5>
810036cc:	8b 43 04             	mov    0x4(%ebx),%eax
810036cf:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036d2:	8b 43 30             	mov    0x30(%ebx),%eax
810036d5:	85 c0                	test   %eax,%eax
810036d7:	74 06                	je     810036df <__sflush_r+0xf5>
810036d9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810036dc:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036df:	8b 43 28             	mov    0x28(%ebx),%eax
810036e2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036e5:	6a 00                	push   $0x0
810036e7:	ff 75 e4             	pushl  -0x1c(%ebp)
810036ea:	52                   	push   %edx
810036eb:	ff 75 08             	pushl  0x8(%ebp)
810036ee:	ff d0                	call   *%eax
810036f0:	83 c4 10             	add    $0x10,%esp
810036f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036f6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810036fa:	75 1d                	jne    81003719 <__sflush_r+0x12f>
810036fc:	8b 45 08             	mov    0x8(%ebp),%eax
810036ff:	8b 00                	mov    (%eax),%eax
81003701:	85 c0                	test   %eax,%eax
81003703:	74 14                	je     81003719 <__sflush_r+0x12f>
81003705:	8b 45 08             	mov    0x8(%ebp),%eax
81003708:	8b 00                	mov    (%eax),%eax
8100370a:	83 f8 1d             	cmp    $0x1d,%eax
8100370d:	74 0a                	je     81003719 <__sflush_r+0x12f>
8100370f:	8b 45 08             	mov    0x8(%ebp),%eax
81003712:	8b 00                	mov    (%eax),%eax
81003714:	83 f8 16             	cmp    $0x16,%eax
81003717:	75 6e                	jne    81003787 <__sflush_r+0x19d>
81003719:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100371d:	80 e4 f7             	and    $0xf7,%ah
81003720:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003724:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100372b:	8b 43 10             	mov    0x10(%ebx),%eax
8100372e:	89 03                	mov    %eax,(%ebx)
81003730:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003734:	98                   	cwtl   
81003735:	25 00 10 00 00       	and    $0x1000,%eax
8100373a:	85 c0                	test   %eax,%eax
8100373c:	74 15                	je     81003753 <__sflush_r+0x169>
8100373e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003742:	75 09                	jne    8100374d <__sflush_r+0x163>
81003744:	8b 45 08             	mov    0x8(%ebp),%eax
81003747:	8b 00                	mov    (%eax),%eax
81003749:	85 c0                	test   %eax,%eax
8100374b:	75 06                	jne    81003753 <__sflush_r+0x169>
8100374d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003750:	89 43 50             	mov    %eax,0x50(%ebx)
81003753:	8b 45 08             	mov    0x8(%ebp),%eax
81003756:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003759:	89 10                	mov    %edx,(%eax)
8100375b:	8b 43 30             	mov    0x30(%ebx),%eax
8100375e:	85 c0                	test   %eax,%eax
81003760:	74 37                	je     81003799 <__sflush_r+0x1af>
81003762:	8b 53 30             	mov    0x30(%ebx),%edx
81003765:	8d 43 40             	lea    0x40(%ebx),%eax
81003768:	39 c2                	cmp    %eax,%edx
8100376a:	74 12                	je     8100377e <__sflush_r+0x194>
8100376c:	8b 43 30             	mov    0x30(%ebx),%eax
8100376f:	83 ec 08             	sub    $0x8,%esp
81003772:	50                   	push   %eax
81003773:	ff 75 08             	pushl  0x8(%ebp)
81003776:	e8 db 02 00 00       	call   81003a56 <_free_r>
8100377b:	83 c4 10             	add    $0x10,%esp
8100377e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003785:	eb 12                	jmp    81003799 <__sflush_r+0x1af>
81003787:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100378b:	83 c8 40             	or     $0x40,%eax
8100378e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003792:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003797:	eb 6f                	jmp    81003808 <__sflush_r+0x21e>
81003799:	b8 00 00 00 00       	mov    $0x0,%eax
8100379e:	eb 68                	jmp    81003808 <__sflush_r+0x21e>
810037a0:	8b 73 10             	mov    0x10(%ebx),%esi
810037a3:	85 f6                	test   %esi,%esi
810037a5:	75 07                	jne    810037ae <__sflush_r+0x1c4>
810037a7:	b8 00 00 00 00       	mov    $0x0,%eax
810037ac:	eb 5a                	jmp    81003808 <__sflush_r+0x21e>
810037ae:	8b 03                	mov    (%ebx),%eax
810037b0:	29 f0                	sub    %esi,%eax
810037b2:	89 c7                	mov    %eax,%edi
810037b4:	89 33                	mov    %esi,(%ebx)
810037b6:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810037ba:	83 e0 03             	and    $0x3,%eax
810037bd:	85 c0                	test   %eax,%eax
810037bf:	75 05                	jne    810037c6 <__sflush_r+0x1dc>
810037c1:	8b 43 14             	mov    0x14(%ebx),%eax
810037c4:	eb 05                	jmp    810037cb <__sflush_r+0x1e1>
810037c6:	b8 00 00 00 00       	mov    $0x0,%eax
810037cb:	89 43 08             	mov    %eax,0x8(%ebx)
810037ce:	eb 2f                	jmp    810037ff <__sflush_r+0x215>
810037d0:	8b 43 24             	mov    0x24(%ebx),%eax
810037d3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810037d6:	57                   	push   %edi
810037d7:	56                   	push   %esi
810037d8:	52                   	push   %edx
810037d9:	ff 75 08             	pushl  0x8(%ebp)
810037dc:	ff d0                	call   *%eax
810037de:	83 c4 10             	add    $0x10,%esp
810037e1:	85 c0                	test   %eax,%eax
810037e3:	7f 12                	jg     810037f7 <__sflush_r+0x20d>
810037e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037e9:	83 c8 40             	or     $0x40,%eax
810037ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810037f5:	eb 11                	jmp    81003808 <__sflush_r+0x21e>
810037f7:	89 c1                	mov    %eax,%ecx
810037f9:	89 c8                	mov    %ecx,%eax
810037fb:	01 c6                	add    %eax,%esi
810037fd:	29 cf                	sub    %ecx,%edi
810037ff:	85 ff                	test   %edi,%edi
81003801:	7f cd                	jg     810037d0 <__sflush_r+0x1e6>
81003803:	b8 00 00 00 00       	mov    $0x0,%eax
81003808:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100380b:	5b                   	pop    %ebx
8100380c:	5e                   	pop    %esi
8100380d:	5f                   	pop    %edi
8100380e:	5d                   	pop    %ebp
8100380f:	c3                   	ret    

81003810 <_fflush_r>:
81003810:	55                   	push   %ebp
81003811:	89 e5                	mov    %esp,%ebp
81003813:	53                   	push   %ebx
81003814:	83 ec 14             	sub    $0x14,%esp
81003817:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100381a:	8b 45 08             	mov    0x8(%ebp),%eax
8100381d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003820:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003824:	74 18                	je     8100383e <_fflush_r+0x2e>
81003826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003829:	8b 40 38             	mov    0x38(%eax),%eax
8100382c:	85 c0                	test   %eax,%eax
8100382e:	75 0e                	jne    8100383e <_fflush_r+0x2e>
81003830:	83 ec 0c             	sub    $0xc,%esp
81003833:	ff 75 f4             	pushl  -0xc(%ebp)
81003836:	e8 b3 d0 ff ff       	call   810008ee <__sinit>
8100383b:	83 c4 10             	add    $0x10,%esp
8100383e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003842:	66 85 c0             	test   %ax,%ax
81003845:	75 07                	jne    8100384e <_fflush_r+0x3e>
81003847:	b8 00 00 00 00       	mov    $0x0,%eax
8100384c:	eb 15                	jmp    81003863 <_fflush_r+0x53>
8100384e:	83 ec 08             	sub    $0x8,%esp
81003851:	53                   	push   %ebx
81003852:	ff 75 08             	pushl  0x8(%ebp)
81003855:	e8 90 fd ff ff       	call   810035ea <__sflush_r>
8100385a:	83 c4 10             	add    $0x10,%esp
8100385d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003860:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003863:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003866:	c9                   	leave  
81003867:	c3                   	ret    

81003868 <fflush>:
81003868:	55                   	push   %ebp
81003869:	89 e5                	mov    %esp,%ebp
8100386b:	83 ec 08             	sub    $0x8,%esp
8100386e:	8b 55 08             	mov    0x8(%ebp),%edx
81003871:	85 d2                	test   %edx,%edx
81003873:	75 18                	jne    8100388d <fflush+0x25>
81003875:	a1 f0 47 00 81       	mov    0x810047f0,%eax
8100387a:	83 ec 08             	sub    $0x8,%esp
8100387d:	68 10 38 00 81       	push   $0x81003810
81003882:	50                   	push   %eax
81003883:	e8 79 d6 ff ff       	call   81000f01 <_fwalk_reent>
81003888:	83 c4 10             	add    $0x10,%esp
8100388b:	eb 12                	jmp    8100389f <fflush+0x37>
8100388d:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81003892:	83 ec 08             	sub    $0x8,%esp
81003895:	52                   	push   %edx
81003896:	50                   	push   %eax
81003897:	e8 74 ff ff ff       	call   81003810 <_fflush_r>
8100389c:	83 c4 10             	add    $0x10,%esp
8100389f:	c9                   	leave  
810038a0:	c3                   	ret    

810038a1 <__sputc_r>:
810038a1:	55                   	push   %ebp
810038a2:	89 e5                	mov    %esp,%ebp
810038a4:	83 ec 08             	sub    $0x8,%esp
810038a7:	8b 45 10             	mov    0x10(%ebp),%eax
810038aa:	8b 40 08             	mov    0x8(%eax),%eax
810038ad:	8d 50 ff             	lea    -0x1(%eax),%edx
810038b0:	8b 45 10             	mov    0x10(%ebp),%eax
810038b3:	89 50 08             	mov    %edx,0x8(%eax)
810038b6:	8b 45 10             	mov    0x10(%ebp),%eax
810038b9:	8b 40 08             	mov    0x8(%eax),%eax
810038bc:	85 c0                	test   %eax,%eax
810038be:	79 17                	jns    810038d7 <__sputc_r+0x36>
810038c0:	8b 45 10             	mov    0x10(%ebp),%eax
810038c3:	8b 50 08             	mov    0x8(%eax),%edx
810038c6:	8b 45 10             	mov    0x10(%ebp),%eax
810038c9:	8b 40 18             	mov    0x18(%eax),%eax
810038cc:	39 c2                	cmp    %eax,%edx
810038ce:	7c 21                	jl     810038f1 <__sputc_r+0x50>
810038d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810038d3:	3c 0a                	cmp    $0xa,%al
810038d5:	74 1a                	je     810038f1 <__sputc_r+0x50>
810038d7:	8b 45 10             	mov    0x10(%ebp),%eax
810038da:	8b 00                	mov    (%eax),%eax
810038dc:	8d 48 01             	lea    0x1(%eax),%ecx
810038df:	8b 55 10             	mov    0x10(%ebp),%edx
810038e2:	89 0a                	mov    %ecx,(%edx)
810038e4:	8b 55 0c             	mov    0xc(%ebp),%edx
810038e7:	88 10                	mov    %dl,(%eax)
810038e9:	0f b6 00             	movzbl (%eax),%eax
810038ec:	0f b6 c0             	movzbl %al,%eax
810038ef:	eb 14                	jmp    81003905 <__sputc_r+0x64>
810038f1:	83 ec 04             	sub    $0x4,%esp
810038f4:	ff 75 10             	pushl  0x10(%ebp)
810038f7:	ff 75 0c             	pushl  0xc(%ebp)
810038fa:	ff 75 08             	pushl  0x8(%ebp)
810038fd:	e8 b0 f8 ff ff       	call   810031b2 <__swbuf_r>
81003902:	83 c4 10             	add    $0x10,%esp
81003905:	c9                   	leave  
81003906:	c3                   	ret    

81003907 <__fputwc>:
81003907:	55                   	push   %ebp
81003908:	89 e5                	mov    %esp,%ebp
8100390a:	83 ec 18             	sub    $0x18,%esp
8100390d:	e8 f3 06 00 00       	call   81004005 <__locale_mb_cur_max>
81003912:	83 f8 01             	cmp    $0x1,%eax
81003915:	75 1e                	jne    81003935 <__fputwc+0x2e>
81003917:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100391b:	7e 18                	jle    81003935 <__fputwc+0x2e>
8100391d:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81003924:	7f 0f                	jg     81003935 <__fputwc+0x2e>
81003926:	8b 45 0c             	mov    0xc(%ebp),%eax
81003929:	88 45 ef             	mov    %al,-0x11(%ebp)
8100392c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003933:	eb 3c                	jmp    81003971 <__fputwc+0x6a>
81003935:	8b 45 10             	mov    0x10(%ebp),%eax
81003938:	83 c0 5c             	add    $0x5c,%eax
8100393b:	50                   	push   %eax
8100393c:	ff 75 0c             	pushl  0xc(%ebp)
8100393f:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003942:	50                   	push   %eax
81003943:	ff 75 08             	pushl  0x8(%ebp)
81003946:	e8 df 0b 00 00       	call   8100452a <_wcrtomb_r>
8100394b:	83 c4 10             	add    $0x10,%esp
8100394e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003951:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003955:	75 1a                	jne    81003971 <__fputwc+0x6a>
81003957:	8b 45 10             	mov    0x10(%ebp),%eax
8100395a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100395e:	83 c8 40             	or     $0x40,%eax
81003961:	89 c2                	mov    %eax,%edx
81003963:	8b 45 10             	mov    0x10(%ebp),%eax
81003966:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100396a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100396f:	eb 44                	jmp    810039b5 <__fputwc+0xae>
81003971:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003978:	eb 30                	jmp    810039aa <__fputwc+0xa3>
8100397a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100397d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003980:	01 d0                	add    %edx,%eax
81003982:	0f b6 00             	movzbl (%eax),%eax
81003985:	0f b6 c0             	movzbl %al,%eax
81003988:	83 ec 04             	sub    $0x4,%esp
8100398b:	ff 75 10             	pushl  0x10(%ebp)
8100398e:	50                   	push   %eax
8100398f:	ff 75 08             	pushl  0x8(%ebp)
81003992:	e8 0a ff ff ff       	call   810038a1 <__sputc_r>
81003997:	83 c4 10             	add    $0x10,%esp
8100399a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100399d:	75 07                	jne    810039a6 <__fputwc+0x9f>
8100399f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810039a4:	eb 0f                	jmp    810039b5 <__fputwc+0xae>
810039a6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810039aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039ad:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810039b0:	72 c8                	jb     8100397a <__fputwc+0x73>
810039b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810039b5:	c9                   	leave  
810039b6:	c3                   	ret    

810039b7 <_fputwc_r>:
810039b7:	55                   	push   %ebp
810039b8:	89 e5                	mov    %esp,%ebp
810039ba:	83 ec 18             	sub    $0x18,%esp
810039bd:	8b 45 10             	mov    0x10(%ebp),%eax
810039c0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039c4:	98                   	cwtl   
810039c5:	25 00 20 00 00       	and    $0x2000,%eax
810039ca:	85 c0                	test   %eax,%eax
810039cc:	75 24                	jne    810039f2 <_fputwc_r+0x3b>
810039ce:	8b 45 10             	mov    0x10(%ebp),%eax
810039d1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039d5:	80 cc 20             	or     $0x20,%ah
810039d8:	89 c2                	mov    %eax,%edx
810039da:	8b 45 10             	mov    0x10(%ebp),%eax
810039dd:	66 89 50 0c          	mov    %dx,0xc(%eax)
810039e1:	8b 45 10             	mov    0x10(%ebp),%eax
810039e4:	8b 40 64             	mov    0x64(%eax),%eax
810039e7:	80 cc 20             	or     $0x20,%ah
810039ea:	89 c2                	mov    %eax,%edx
810039ec:	8b 45 10             	mov    0x10(%ebp),%eax
810039ef:	89 50 64             	mov    %edx,0x64(%eax)
810039f2:	83 ec 04             	sub    $0x4,%esp
810039f5:	ff 75 10             	pushl  0x10(%ebp)
810039f8:	ff 75 0c             	pushl  0xc(%ebp)
810039fb:	ff 75 08             	pushl  0x8(%ebp)
810039fe:	e8 04 ff ff ff       	call   81003907 <__fputwc>
81003a03:	83 c4 10             	add    $0x10,%esp
81003a06:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a0c:	c9                   	leave  
81003a0d:	c3                   	ret    

81003a0e <fputwc>:
81003a0e:	55                   	push   %ebp
81003a0f:	89 e5                	mov    %esp,%ebp
81003a11:	83 ec 18             	sub    $0x18,%esp
81003a14:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81003a19:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a1f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a22:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81003a26:	74 18                	je     81003a40 <fputwc+0x32>
81003a28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a2b:	8b 40 38             	mov    0x38(%eax),%eax
81003a2e:	85 c0                	test   %eax,%eax
81003a30:	75 0e                	jne    81003a40 <fputwc+0x32>
81003a32:	83 ec 0c             	sub    $0xc,%esp
81003a35:	ff 75 f0             	pushl  -0x10(%ebp)
81003a38:	e8 b1 ce ff ff       	call   810008ee <__sinit>
81003a3d:	83 c4 10             	add    $0x10,%esp
81003a40:	83 ec 04             	sub    $0x4,%esp
81003a43:	ff 75 0c             	pushl  0xc(%ebp)
81003a46:	ff 75 08             	pushl  0x8(%ebp)
81003a49:	ff 75 f4             	pushl  -0xc(%ebp)
81003a4c:	e8 66 ff ff ff       	call   810039b7 <_fputwc_r>
81003a51:	83 c4 10             	add    $0x10,%esp
81003a54:	c9                   	leave  
81003a55:	c3                   	ret    

81003a56 <_free_r>:
81003a56:	55                   	push   %ebp
81003a57:	89 e5                	mov    %esp,%ebp
81003a59:	53                   	push   %ebx
81003a5a:	83 ec 34             	sub    $0x34,%esp
81003a5d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003a61:	0f 84 c4 03 00 00    	je     81003e2b <_free_r+0x3d5>
81003a67:	83 ec 0c             	sub    $0xc,%esp
81003a6a:	ff 75 08             	pushl  0x8(%ebp)
81003a6d:	e8 b3 e1 ff ff       	call   81001c25 <__malloc_lock>
81003a72:	83 c4 10             	add    $0x10,%esp
81003a75:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a78:	83 e8 08             	sub    $0x8,%eax
81003a7b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a81:	8b 40 04             	mov    0x4(%eax),%eax
81003a84:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003a87:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a8a:	83 e0 fe             	and    $0xfffffffe,%eax
81003a8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a90:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a96:	01 d0                	add    %edx,%eax
81003a98:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a9b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a9e:	8b 40 04             	mov    0x4(%eax),%eax
81003aa1:	83 e0 fc             	and    $0xfffffffc,%eax
81003aa4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003aa7:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003aac:	8b 40 08             	mov    0x8(%eax),%eax
81003aaf:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003ab2:	0f 85 94 00 00 00    	jne    81003b4c <_free_r+0xf6>
81003ab8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003abb:	01 45 f0             	add    %eax,-0x10(%ebp)
81003abe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ac1:	83 e0 01             	and    $0x1,%eax
81003ac4:	85 c0                	test   %eax,%eax
81003ac6:	75 3a                	jne    81003b02 <_free_r+0xac>
81003ac8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003acb:	8b 00                	mov    (%eax),%eax
81003acd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003ad0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003ad3:	f7 d8                	neg    %eax
81003ad5:	01 45 f4             	add    %eax,-0xc(%ebp)
81003ad8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003adb:	01 45 f0             	add    %eax,-0x10(%ebp)
81003ade:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae1:	8b 40 0c             	mov    0xc(%eax),%eax
81003ae4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ae7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aea:	8b 40 08             	mov    0x8(%eax),%eax
81003aed:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003af0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003af3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003af6:	89 50 0c             	mov    %edx,0xc(%eax)
81003af9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003afc:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003aff:	89 50 08             	mov    %edx,0x8(%eax)
81003b02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b05:	83 c8 01             	or     $0x1,%eax
81003b08:	89 c2                	mov    %eax,%edx
81003b0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b0d:	89 50 04             	mov    %edx,0x4(%eax)
81003b10:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
81003b15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b18:	89 42 08             	mov    %eax,0x8(%edx)
81003b1b:	a1 a8 53 00 81       	mov    0x810053a8,%eax
81003b20:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003b23:	72 14                	jb     81003b39 <_free_r+0xe3>
81003b25:	a1 60 55 00 81       	mov    0x81005560,%eax
81003b2a:	83 ec 08             	sub    $0x8,%esp
81003b2d:	50                   	push   %eax
81003b2e:	ff 75 08             	pushl  0x8(%ebp)
81003b31:	e8 fb 02 00 00       	call   81003e31 <_malloc_trim_r>
81003b36:	83 c4 10             	add    $0x10,%esp
81003b39:	83 ec 0c             	sub    $0xc,%esp
81003b3c:	ff 75 08             	pushl  0x8(%ebp)
81003b3f:	e8 e7 e0 ff ff       	call   81001c2b <__malloc_unlock>
81003b44:	83 c4 10             	add    $0x10,%esp
81003b47:	e9 e0 02 00 00       	jmp    81003e2c <_free_r+0x3d6>
81003b4c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b4f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b52:	89 50 04             	mov    %edx,0x4(%eax)
81003b55:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003b5c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b5f:	83 e0 01             	and    $0x1,%eax
81003b62:	85 c0                	test   %eax,%eax
81003b64:	75 52                	jne    81003bb8 <_free_r+0x162>
81003b66:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b69:	8b 00                	mov    (%eax),%eax
81003b6b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b6e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b71:	f7 d8                	neg    %eax
81003b73:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b76:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b79:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b7f:	8b 40 08             	mov    0x8(%eax),%eax
81003b82:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81003b87:	39 d0                	cmp    %edx,%eax
81003b89:	75 09                	jne    81003b94 <_free_r+0x13e>
81003b8b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003b92:	eb 24                	jmp    81003bb8 <_free_r+0x162>
81003b94:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b97:	8b 40 0c             	mov    0xc(%eax),%eax
81003b9a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ba0:	8b 40 08             	mov    0x8(%eax),%eax
81003ba3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ba6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ba9:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003bac:	89 50 0c             	mov    %edx,0xc(%eax)
81003baf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bb2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003bb5:	89 50 08             	mov    %edx,0x8(%eax)
81003bb8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003bbb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bbe:	01 d0                	add    %edx,%eax
81003bc0:	8b 40 04             	mov    0x4(%eax),%eax
81003bc3:	83 e0 01             	and    $0x1,%eax
81003bc6:	85 c0                	test   %eax,%eax
81003bc8:	75 75                	jne    81003c3f <_free_r+0x1e9>
81003bca:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bcd:	01 45 f0             	add    %eax,-0x10(%ebp)
81003bd0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003bd4:	75 45                	jne    81003c1b <_free_r+0x1c5>
81003bd6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bd9:	8b 40 08             	mov    0x8(%eax),%eax
81003bdc:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81003be1:	39 d0                	cmp    %edx,%eax
81003be3:	75 36                	jne    81003c1b <_free_r+0x1c5>
81003be5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003bec:	b8 a8 4f 00 81       	mov    $0x81004fa8,%eax
81003bf1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bf4:	89 50 0c             	mov    %edx,0xc(%eax)
81003bf7:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81003bfc:	8b 40 0c             	mov    0xc(%eax),%eax
81003bff:	89 42 08             	mov    %eax,0x8(%edx)
81003c02:	ba a8 4f 00 81       	mov    $0x81004fa8,%edx
81003c07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c0a:	89 50 0c             	mov    %edx,0xc(%eax)
81003c0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c10:	8b 50 0c             	mov    0xc(%eax),%edx
81003c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c16:	89 50 08             	mov    %edx,0x8(%eax)
81003c19:	eb 24                	jmp    81003c3f <_free_r+0x1e9>
81003c1b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c1e:	8b 40 0c             	mov    0xc(%eax),%eax
81003c21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c24:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c27:	8b 40 08             	mov    0x8(%eax),%eax
81003c2a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c30:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c33:	89 50 0c             	mov    %edx,0xc(%eax)
81003c36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c39:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c3c:	89 50 08             	mov    %edx,0x8(%eax)
81003c3f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c42:	83 c8 01             	or     $0x1,%eax
81003c45:	89 c2                	mov    %eax,%edx
81003c47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c4a:	89 50 04             	mov    %edx,0x4(%eax)
81003c4d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c50:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c53:	01 c2                	add    %eax,%edx
81003c55:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c58:	89 02                	mov    %eax,(%edx)
81003c5a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003c5e:	0f 85 b7 01 00 00    	jne    81003e1b <_free_r+0x3c5>
81003c64:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003c6b:	77 7f                	ja     81003cec <_free_r+0x296>
81003c6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c70:	c1 e8 03             	shr    $0x3,%eax
81003c73:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003c76:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003c7b:	8b 58 04             	mov    0x4(%eax),%ebx
81003c7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c81:	8d 50 03             	lea    0x3(%eax),%edx
81003c84:	85 c0                	test   %eax,%eax
81003c86:	0f 48 c2             	cmovs  %edx,%eax
81003c89:	c1 f8 02             	sar    $0x2,%eax
81003c8c:	ba 01 00 00 00       	mov    $0x1,%edx
81003c91:	89 c1                	mov    %eax,%ecx
81003c93:	d3 e2                	shl    %cl,%edx
81003c95:	89 d0                	mov    %edx,%eax
81003c97:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
81003c9c:	09 d8                	or     %ebx,%eax
81003c9e:	89 42 04             	mov    %eax,0x4(%edx)
81003ca1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003ca4:	83 c0 01             	add    $0x1,%eax
81003ca7:	01 c0                	add    %eax,%eax
81003ca9:	c1 e0 02             	shl    $0x2,%eax
81003cac:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
81003cb1:	83 e8 08             	sub    $0x8,%eax
81003cb4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003cb7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cba:	8b 40 08             	mov    0x8(%eax),%eax
81003cbd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003cc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cc3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003cc6:	89 50 0c             	mov    %edx,0xc(%eax)
81003cc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ccc:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ccf:	89 50 08             	mov    %edx,0x8(%eax)
81003cd2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cd5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003cd8:	89 50 08             	mov    %edx,0x8(%eax)
81003cdb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cde:	8b 50 08             	mov    0x8(%eax),%edx
81003ce1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ce4:	89 50 0c             	mov    %edx,0xc(%eax)
81003ce7:	e9 2f 01 00 00       	jmp    81003e1b <_free_r+0x3c5>
81003cec:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cef:	c1 e8 09             	shr    $0x9,%eax
81003cf2:	85 c0                	test   %eax,%eax
81003cf4:	75 08                	jne    81003cfe <_free_r+0x2a8>
81003cf6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cf9:	c1 e8 03             	shr    $0x3,%eax
81003cfc:	eb 77                	jmp    81003d75 <_free_r+0x31f>
81003cfe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d01:	c1 e8 09             	shr    $0x9,%eax
81003d04:	83 f8 04             	cmp    $0x4,%eax
81003d07:	77 0b                	ja     81003d14 <_free_r+0x2be>
81003d09:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d0c:	c1 e8 06             	shr    $0x6,%eax
81003d0f:	83 c0 38             	add    $0x38,%eax
81003d12:	eb 61                	jmp    81003d75 <_free_r+0x31f>
81003d14:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d17:	c1 e8 09             	shr    $0x9,%eax
81003d1a:	83 f8 14             	cmp    $0x14,%eax
81003d1d:	77 0b                	ja     81003d2a <_free_r+0x2d4>
81003d1f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d22:	c1 e8 09             	shr    $0x9,%eax
81003d25:	83 c0 5b             	add    $0x5b,%eax
81003d28:	eb 4b                	jmp    81003d75 <_free_r+0x31f>
81003d2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d2d:	c1 e8 09             	shr    $0x9,%eax
81003d30:	83 f8 54             	cmp    $0x54,%eax
81003d33:	77 0b                	ja     81003d40 <_free_r+0x2ea>
81003d35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d38:	c1 e8 0c             	shr    $0xc,%eax
81003d3b:	83 c0 6e             	add    $0x6e,%eax
81003d3e:	eb 35                	jmp    81003d75 <_free_r+0x31f>
81003d40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d43:	c1 e8 09             	shr    $0x9,%eax
81003d46:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d4b:	77 0b                	ja     81003d58 <_free_r+0x302>
81003d4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d50:	c1 e8 0f             	shr    $0xf,%eax
81003d53:	83 c0 77             	add    $0x77,%eax
81003d56:	eb 1d                	jmp    81003d75 <_free_r+0x31f>
81003d58:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d5b:	c1 e8 09             	shr    $0x9,%eax
81003d5e:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d63:	77 0b                	ja     81003d70 <_free_r+0x31a>
81003d65:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d68:	c1 e8 12             	shr    $0x12,%eax
81003d6b:	83 c0 7c             	add    $0x7c,%eax
81003d6e:	eb 05                	jmp    81003d75 <_free_r+0x31f>
81003d70:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d75:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003d78:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d7b:	83 c0 01             	add    $0x1,%eax
81003d7e:	01 c0                	add    %eax,%eax
81003d80:	c1 e0 02             	shl    $0x2,%eax
81003d83:	05 a0 4f 00 81       	add    $0x81004fa0,%eax
81003d88:	83 e8 08             	sub    $0x8,%eax
81003d8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d8e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d91:	8b 40 08             	mov    0x8(%eax),%eax
81003d94:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d97:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d9a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d9d:	75 36                	jne    81003dd5 <_free_r+0x37f>
81003d9f:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003da4:	8b 58 04             	mov    0x4(%eax),%ebx
81003da7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003daa:	8d 50 03             	lea    0x3(%eax),%edx
81003dad:	85 c0                	test   %eax,%eax
81003daf:	0f 48 c2             	cmovs  %edx,%eax
81003db2:	c1 f8 02             	sar    $0x2,%eax
81003db5:	ba 01 00 00 00       	mov    $0x1,%edx
81003dba:	89 c1                	mov    %eax,%ecx
81003dbc:	d3 e2                	shl    %cl,%edx
81003dbe:	89 d0                	mov    %edx,%eax
81003dc0:	ba a0 4f 00 81       	mov    $0x81004fa0,%edx
81003dc5:	09 d8                	or     %ebx,%eax
81003dc7:	89 42 04             	mov    %eax,0x4(%edx)
81003dca:	eb 28                	jmp    81003df4 <_free_r+0x39e>
81003dcc:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dcf:	8b 40 08             	mov    0x8(%eax),%eax
81003dd2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003dd5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dd8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003ddb:	74 0e                	je     81003deb <_free_r+0x395>
81003ddd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003de0:	8b 40 04             	mov    0x4(%eax),%eax
81003de3:	83 e0 fc             	and    $0xfffffffc,%eax
81003de6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003de9:	72 e1                	jb     81003dcc <_free_r+0x376>
81003deb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dee:	8b 40 0c             	mov    0xc(%eax),%eax
81003df1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003df4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003dfa:	89 50 0c             	mov    %edx,0xc(%eax)
81003dfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e00:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e03:	89 50 08             	mov    %edx,0x8(%eax)
81003e06:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e09:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e0c:	89 50 08             	mov    %edx,0x8(%eax)
81003e0f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e12:	8b 50 08             	mov    0x8(%eax),%edx
81003e15:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e18:	89 50 0c             	mov    %edx,0xc(%eax)
81003e1b:	83 ec 0c             	sub    $0xc,%esp
81003e1e:	ff 75 08             	pushl  0x8(%ebp)
81003e21:	e8 05 de ff ff       	call   81001c2b <__malloc_unlock>
81003e26:	83 c4 10             	add    $0x10,%esp
81003e29:	eb 01                	jmp    81003e2c <_free_r+0x3d6>
81003e2b:	90                   	nop
81003e2c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e2f:	c9                   	leave  
81003e30:	c3                   	ret    

81003e31 <_malloc_trim_r>:
81003e31:	55                   	push   %ebp
81003e32:	89 e5                	mov    %esp,%ebp
81003e34:	83 ec 28             	sub    $0x28,%esp
81003e37:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003e3e:	83 ec 0c             	sub    $0xc,%esp
81003e41:	ff 75 08             	pushl  0x8(%ebp)
81003e44:	e8 dc dd ff ff       	call   81001c25 <__malloc_lock>
81003e49:	83 c4 10             	add    $0x10,%esp
81003e4c:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003e51:	8b 40 08             	mov    0x8(%eax),%eax
81003e54:	8b 40 04             	mov    0x4(%eax),%eax
81003e57:	83 e0 fc             	and    $0xfffffffc,%eax
81003e5a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e5d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e60:	2b 45 0c             	sub    0xc(%ebp),%eax
81003e63:	89 c2                	mov    %eax,%edx
81003e65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e68:	01 d0                	add    %edx,%eax
81003e6a:	83 e8 11             	sub    $0x11,%eax
81003e6d:	ba 00 00 00 00       	mov    $0x0,%edx
81003e72:	f7 75 f4             	divl   -0xc(%ebp)
81003e75:	83 e8 01             	sub    $0x1,%eax
81003e78:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003e7c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e82:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003e85:	7d 18                	jge    81003e9f <_malloc_trim_r+0x6e>
81003e87:	83 ec 0c             	sub    $0xc,%esp
81003e8a:	ff 75 08             	pushl  0x8(%ebp)
81003e8d:	e8 99 dd ff ff       	call   81001c2b <__malloc_unlock>
81003e92:	83 c4 10             	add    $0x10,%esp
81003e95:	b8 00 00 00 00       	mov    $0x0,%eax
81003e9a:	e9 f1 00 00 00       	jmp    81003f90 <_malloc_trim_r+0x15f>
81003e9f:	83 ec 08             	sub    $0x8,%esp
81003ea2:	6a 00                	push   $0x0
81003ea4:	ff 75 08             	pushl  0x8(%ebp)
81003ea7:	e8 ae f1 ff ff       	call   8100305a <_sbrk_r>
81003eac:	83 c4 10             	add    $0x10,%esp
81003eaf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003eb2:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003eb7:	8b 50 08             	mov    0x8(%eax),%edx
81003eba:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ebd:	01 d0                	add    %edx,%eax
81003ebf:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003ec2:	74 18                	je     81003edc <_malloc_trim_r+0xab>
81003ec4:	83 ec 0c             	sub    $0xc,%esp
81003ec7:	ff 75 08             	pushl  0x8(%ebp)
81003eca:	e8 5c dd ff ff       	call   81001c2b <__malloc_unlock>
81003ecf:	83 c4 10             	add    $0x10,%esp
81003ed2:	b8 00 00 00 00       	mov    $0x0,%eax
81003ed7:	e9 b4 00 00 00       	jmp    81003f90 <_malloc_trim_r+0x15f>
81003edc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003edf:	f7 d8                	neg    %eax
81003ee1:	83 ec 08             	sub    $0x8,%esp
81003ee4:	50                   	push   %eax
81003ee5:	ff 75 08             	pushl  0x8(%ebp)
81003ee8:	e8 6d f1 ff ff       	call   8100305a <_sbrk_r>
81003eed:	83 c4 10             	add    $0x10,%esp
81003ef0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003ef3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003ef7:	75 61                	jne    81003f5a <_malloc_trim_r+0x129>
81003ef9:	83 ec 08             	sub    $0x8,%esp
81003efc:	6a 00                	push   $0x0
81003efe:	ff 75 08             	pushl  0x8(%ebp)
81003f01:	e8 54 f1 ff ff       	call   8100305a <_sbrk_r>
81003f06:	83 c4 10             	add    $0x10,%esp
81003f09:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f0c:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003f11:	8b 50 08             	mov    0x8(%eax),%edx
81003f14:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f17:	29 d0                	sub    %edx,%eax
81003f19:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f1c:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003f20:	7e 23                	jle    81003f45 <_malloc_trim_r+0x114>
81003f22:	8b 15 ac 53 00 81    	mov    0x810053ac,%edx
81003f28:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f2b:	29 d0                	sub    %edx,%eax
81003f2d:	a3 80 55 00 81       	mov    %eax,0x81005580
81003f32:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f35:	83 c8 01             	or     $0x1,%eax
81003f38:	89 c2                	mov    %eax,%edx
81003f3a:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003f3f:	8b 40 08             	mov    0x8(%eax),%eax
81003f42:	89 50 04             	mov    %edx,0x4(%eax)
81003f45:	83 ec 0c             	sub    $0xc,%esp
81003f48:	ff 75 08             	pushl  0x8(%ebp)
81003f4b:	e8 db dc ff ff       	call   81001c2b <__malloc_unlock>
81003f50:	83 c4 10             	add    $0x10,%esp
81003f53:	b8 00 00 00 00       	mov    $0x0,%eax
81003f58:	eb 36                	jmp    81003f90 <_malloc_trim_r+0x15f>
81003f5a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f5d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f60:	83 c8 01             	or     $0x1,%eax
81003f63:	89 c2                	mov    %eax,%edx
81003f65:	b8 a0 4f 00 81       	mov    $0x81004fa0,%eax
81003f6a:	8b 40 08             	mov    0x8(%eax),%eax
81003f6d:	89 50 04             	mov    %edx,0x4(%eax)
81003f70:	a1 80 55 00 81       	mov    0x81005580,%eax
81003f75:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f78:	a3 80 55 00 81       	mov    %eax,0x81005580
81003f7d:	83 ec 0c             	sub    $0xc,%esp
81003f80:	ff 75 08             	pushl  0x8(%ebp)
81003f83:	e8 a3 dc ff ff       	call   81001c2b <__malloc_unlock>
81003f88:	83 c4 10             	add    $0x10,%esp
81003f8b:	b8 01 00 00 00       	mov    $0x1,%eax
81003f90:	c9                   	leave  
81003f91:	c3                   	ret    

81003f92 <__get_global_locale>:
81003f92:	55                   	push   %ebp
81003f93:	89 e5                	mov    %esp,%ebp
81003f95:	b8 c0 53 00 81       	mov    $0x810053c0,%eax
81003f9a:	5d                   	pop    %ebp
81003f9b:	c3                   	ret    

81003f9c <__get_current_locale>:
81003f9c:	55                   	push   %ebp
81003f9d:	89 e5                	mov    %esp,%ebp
81003f9f:	e8 ee ff ff ff       	call   81003f92 <__get_global_locale>
81003fa4:	5d                   	pop    %ebp
81003fa5:	c3                   	ret    

81003fa6 <_setlocale_r>:
81003fa6:	55                   	push   %ebp
81003fa7:	89 e5                	mov    %esp,%ebp
81003fa9:	83 ec 08             	sub    $0x8,%esp
81003fac:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003fb0:	74 4c                	je     81003ffe <_setlocale_r+0x58>
81003fb2:	83 ec 08             	sub    $0x8,%esp
81003fb5:	68 b3 48 00 81       	push   $0x810048b3
81003fba:	ff 75 10             	pushl  0x10(%ebp)
81003fbd:	e8 af 04 00 00       	call   81004471 <strcmp>
81003fc2:	83 c4 10             	add    $0x10,%esp
81003fc5:	85 c0                	test   %eax,%eax
81003fc7:	74 35                	je     81003ffe <_setlocale_r+0x58>
81003fc9:	83 ec 08             	sub    $0x8,%esp
81003fcc:	68 b9 48 00 81       	push   $0x810048b9
81003fd1:	ff 75 10             	pushl  0x10(%ebp)
81003fd4:	e8 98 04 00 00       	call   81004471 <strcmp>
81003fd9:	83 c4 10             	add    $0x10,%esp
81003fdc:	85 c0                	test   %eax,%eax
81003fde:	74 1e                	je     81003ffe <_setlocale_r+0x58>
81003fe0:	83 ec 08             	sub    $0x8,%esp
81003fe3:	68 b2 48 00 81       	push   $0x810048b2
81003fe8:	ff 75 10             	pushl  0x10(%ebp)
81003feb:	e8 81 04 00 00       	call   81004471 <strcmp>
81003ff0:	83 c4 10             	add    $0x10,%esp
81003ff3:	85 c0                	test   %eax,%eax
81003ff5:	74 07                	je     81003ffe <_setlocale_r+0x58>
81003ff7:	b8 00 00 00 00       	mov    $0x0,%eax
81003ffc:	eb 05                	jmp    81004003 <_setlocale_r+0x5d>
81003ffe:	b8 b9 48 00 81       	mov    $0x810048b9,%eax
81004003:	c9                   	leave  
81004004:	c3                   	ret    

81004005 <__locale_mb_cur_max>:
81004005:	55                   	push   %ebp
81004006:	89 e5                	mov    %esp,%ebp
81004008:	e8 8f ff ff ff       	call   81003f9c <__get_current_locale>
8100400d:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81004014:	0f be c0             	movsbl %al,%eax
81004017:	5d                   	pop    %ebp
81004018:	c3                   	ret    

81004019 <setlocale>:
81004019:	55                   	push   %ebp
8100401a:	89 e5                	mov    %esp,%ebp
8100401c:	83 ec 08             	sub    $0x8,%esp
8100401f:	a1 84 4f 00 81       	mov    0x81004f84,%eax
81004024:	83 ec 04             	sub    $0x4,%esp
81004027:	ff 75 0c             	pushl  0xc(%ebp)
8100402a:	ff 75 08             	pushl  0x8(%ebp)
8100402d:	50                   	push   %eax
8100402e:	e8 73 ff ff ff       	call   81003fa6 <_setlocale_r>
81004033:	83 c4 10             	add    $0x10,%esp
81004036:	c9                   	leave  
81004037:	c3                   	ret    

81004038 <_lseek_r>:
81004038:	55                   	push   %ebp
81004039:	89 e5                	mov    %esp,%ebp
8100403b:	83 ec 18             	sub    $0x18,%esp
8100403e:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
81004045:	00 00 00 
81004048:	83 ec 04             	sub    $0x4,%esp
8100404b:	ff 75 14             	pushl  0x14(%ebp)
8100404e:	ff 75 10             	pushl  0x10(%ebp)
81004051:	ff 75 0c             	pushl  0xc(%ebp)
81004054:	e8 31 c3 ff ff       	call   8100038a <lseek>
81004059:	83 c4 10             	add    $0x10,%esp
8100405c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100405f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004063:	75 14                	jne    81004079 <_lseek_r+0x41>
81004065:	a1 b0 55 00 81       	mov    0x810055b0,%eax
8100406a:	85 c0                	test   %eax,%eax
8100406c:	74 0b                	je     81004079 <_lseek_r+0x41>
8100406e:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
81004074:	8b 45 08             	mov    0x8(%ebp),%eax
81004077:	89 10                	mov    %edx,(%eax)
81004079:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100407c:	c9                   	leave  
8100407d:	c3                   	ret    

8100407e <__smakebuf_r>:
8100407e:	55                   	push   %ebp
8100407f:	89 e5                	mov    %esp,%ebp
81004081:	56                   	push   %esi
81004082:	53                   	push   %ebx
81004083:	83 ec 10             	sub    $0x10,%esp
81004086:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004089:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100408d:	98                   	cwtl   
8100408e:	83 e0 02             	and    $0x2,%eax
81004091:	85 c0                	test   %eax,%eax
81004093:	74 16                	je     810040ab <__smakebuf_r+0x2d>
81004095:	8d 43 43             	lea    0x43(%ebx),%eax
81004098:	89 03                	mov    %eax,(%ebx)
8100409a:	8b 03                	mov    (%ebx),%eax
8100409c:	89 43 10             	mov    %eax,0x10(%ebx)
8100409f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810040a6:	e9 b9 00 00 00       	jmp    81004164 <__smakebuf_r+0xe6>
810040ab:	8d 45 ec             	lea    -0x14(%ebp),%eax
810040ae:	50                   	push   %eax
810040af:	8d 45 f0             	lea    -0x10(%ebp),%eax
810040b2:	50                   	push   %eax
810040b3:	53                   	push   %ebx
810040b4:	ff 75 08             	pushl  0x8(%ebp)
810040b7:	e8 af 00 00 00       	call   8100416b <__swhatbuf_r>
810040bc:	83 c4 10             	add    $0x10,%esp
810040bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040c5:	83 ec 08             	sub    $0x8,%esp
810040c8:	50                   	push   %eax
810040c9:	ff 75 08             	pushl  0x8(%ebp)
810040cc:	e8 2e d1 ff ff       	call   810011ff <_malloc_r>
810040d1:	83 c4 10             	add    $0x10,%esp
810040d4:	89 c6                	mov    %eax,%esi
810040d6:	85 f6                	test   %esi,%esi
810040d8:	75 2f                	jne    81004109 <__smakebuf_r+0x8b>
810040da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040de:	98                   	cwtl   
810040df:	25 00 02 00 00       	and    $0x200,%eax
810040e4:	85 c0                	test   %eax,%eax
810040e6:	75 7c                	jne    81004164 <__smakebuf_r+0xe6>
810040e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040ec:	83 e0 fc             	and    $0xfffffffc,%eax
810040ef:	83 c8 02             	or     $0x2,%eax
810040f2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040f6:	8d 43 43             	lea    0x43(%ebx),%eax
810040f9:	89 03                	mov    %eax,(%ebx)
810040fb:	8b 03                	mov    (%ebx),%eax
810040fd:	89 43 10             	mov    %eax,0x10(%ebx)
81004100:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81004107:	eb 5b                	jmp    81004164 <__smakebuf_r+0xe6>
81004109:	8b 45 08             	mov    0x8(%ebp),%eax
8100410c:	c7 40 3c b3 08 00 81 	movl   $0x810008b3,0x3c(%eax)
81004113:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004117:	0c 80                	or     $0x80,%al
81004119:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100411d:	89 33                	mov    %esi,(%ebx)
8100411f:	8b 03                	mov    (%ebx),%eax
81004121:	89 43 10             	mov    %eax,0x10(%ebx)
81004124:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004127:	89 43 14             	mov    %eax,0x14(%ebx)
8100412a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100412d:	85 c0                	test   %eax,%eax
8100412f:	74 26                	je     81004157 <__smakebuf_r+0xd9>
81004131:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004135:	98                   	cwtl   
81004136:	83 ec 08             	sub    $0x8,%esp
81004139:	50                   	push   %eax
8100413a:	ff 75 08             	pushl  0x8(%ebp)
8100413d:	e8 9c 05 00 00       	call   810046de <_isatty_r>
81004142:	83 c4 10             	add    $0x10,%esp
81004145:	85 c0                	test   %eax,%eax
81004147:	74 0e                	je     81004157 <__smakebuf_r+0xd9>
81004149:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100414d:	83 e0 fc             	and    $0xfffffffc,%eax
81004150:	83 c8 01             	or     $0x1,%eax
81004153:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004157:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100415b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100415e:	09 d0                	or     %edx,%eax
81004160:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004164:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004167:	5b                   	pop    %ebx
81004168:	5e                   	pop    %esi
81004169:	5d                   	pop    %ebp
8100416a:	c3                   	ret    

8100416b <__swhatbuf_r>:
8100416b:	55                   	push   %ebp
8100416c:	89 e5                	mov    %esp,%ebp
8100416e:	83 ec 58             	sub    $0x58,%esp
81004171:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81004178:	8b 45 0c             	mov    0xc(%ebp),%eax
8100417b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100417f:	66 85 c0             	test   %ax,%ax
81004182:	78 1f                	js     810041a3 <__swhatbuf_r+0x38>
81004184:	8b 45 0c             	mov    0xc(%ebp),%eax
81004187:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100418b:	98                   	cwtl   
8100418c:	83 ec 04             	sub    $0x4,%esp
8100418f:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004192:	52                   	push   %edx
81004193:	50                   	push   %eax
81004194:	ff 75 08             	pushl  0x8(%ebp)
81004197:	e8 ff 04 00 00       	call   8100469b <_fstat_r>
8100419c:	83 c4 10             	add    $0x10,%esp
8100419f:	85 c0                	test   %eax,%eax
810041a1:	79 35                	jns    810041d8 <__swhatbuf_r+0x6d>
810041a3:	8b 45 14             	mov    0x14(%ebp),%eax
810041a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810041ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810041af:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810041b3:	98                   	cwtl   
810041b4:	25 80 00 00 00       	and    $0x80,%eax
810041b9:	85 c0                	test   %eax,%eax
810041bb:	74 0b                	je     810041c8 <__swhatbuf_r+0x5d>
810041bd:	8b 45 10             	mov    0x10(%ebp),%eax
810041c0:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810041c6:	eb 09                	jmp    810041d1 <__swhatbuf_r+0x66>
810041c8:	8b 45 10             	mov    0x10(%ebp),%eax
810041cb:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041d1:	b8 00 00 00 00       	mov    $0x0,%eax
810041d6:	eb 24                	jmp    810041fc <__swhatbuf_r+0x91>
810041d8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810041db:	25 00 f0 00 00       	and    $0xf000,%eax
810041e0:	3d 00 20 00 00       	cmp    $0x2000,%eax
810041e5:	0f 94 c0             	sete   %al
810041e8:	0f b6 d0             	movzbl %al,%edx
810041eb:	8b 45 14             	mov    0x14(%ebp),%eax
810041ee:	89 10                	mov    %edx,(%eax)
810041f0:	8b 45 10             	mov    0x10(%ebp),%eax
810041f3:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041fc:	c9                   	leave  
810041fd:	c3                   	ret    

810041fe <__get_global_locale>:
810041fe:	55                   	push   %ebp
810041ff:	89 e5                	mov    %esp,%ebp
81004201:	b8 c0 53 00 81       	mov    $0x810053c0,%eax
81004206:	5d                   	pop    %ebp
81004207:	c3                   	ret    

81004208 <__get_current_locale>:
81004208:	55                   	push   %ebp
81004209:	89 e5                	mov    %esp,%ebp
8100420b:	e8 ee ff ff ff       	call   810041fe <__get_global_locale>
81004210:	5d                   	pop    %ebp
81004211:	c3                   	ret    

81004212 <_mbtowc_r>:
81004212:	55                   	push   %ebp
81004213:	89 e5                	mov    %esp,%ebp
81004215:	83 ec 08             	sub    $0x8,%esp
81004218:	e8 eb ff ff ff       	call   81004208 <__get_current_locale>
8100421d:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81004223:	83 ec 0c             	sub    $0xc,%esp
81004226:	ff 75 18             	pushl  0x18(%ebp)
81004229:	ff 75 14             	pushl  0x14(%ebp)
8100422c:	ff 75 10             	pushl  0x10(%ebp)
8100422f:	ff 75 0c             	pushl  0xc(%ebp)
81004232:	ff 75 08             	pushl  0x8(%ebp)
81004235:	ff d0                	call   *%eax
81004237:	83 c4 20             	add    $0x20,%esp
8100423a:	c9                   	leave  
8100423b:	c3                   	ret    

8100423c <__ascii_mbtowc>:
8100423c:	55                   	push   %ebp
8100423d:	89 e5                	mov    %esp,%ebp
8100423f:	83 ec 10             	sub    $0x10,%esp
81004242:	8b 45 10             	mov    0x10(%ebp),%eax
81004245:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004248:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100424c:	75 06                	jne    81004254 <__ascii_mbtowc+0x18>
8100424e:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004251:	89 45 0c             	mov    %eax,0xc(%ebp)
81004254:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004258:	75 07                	jne    81004261 <__ascii_mbtowc+0x25>
8100425a:	b8 00 00 00 00       	mov    $0x0,%eax
8100425f:	eb 31                	jmp    81004292 <__ascii_mbtowc+0x56>
81004261:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004265:	75 07                	jne    8100426e <__ascii_mbtowc+0x32>
81004267:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100426c:	eb 24                	jmp    81004292 <__ascii_mbtowc+0x56>
8100426e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004271:	0f b6 00             	movzbl (%eax),%eax
81004274:	0f b6 d0             	movzbl %al,%edx
81004277:	8b 45 0c             	mov    0xc(%ebp),%eax
8100427a:	89 10                	mov    %edx,(%eax)
8100427c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100427f:	0f b6 00             	movzbl (%eax),%eax
81004282:	84 c0                	test   %al,%al
81004284:	75 07                	jne    8100428d <__ascii_mbtowc+0x51>
81004286:	b8 00 00 00 00       	mov    $0x0,%eax
8100428b:	eb 05                	jmp    81004292 <__ascii_mbtowc+0x56>
8100428d:	b8 01 00 00 00       	mov    $0x1,%eax
81004292:	c9                   	leave  
81004293:	c3                   	ret    

81004294 <_read_r>:
81004294:	55                   	push   %ebp
81004295:	89 e5                	mov    %esp,%ebp
81004297:	83 ec 18             	sub    $0x18,%esp
8100429a:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
810042a1:	00 00 00 
810042a4:	83 ec 04             	sub    $0x4,%esp
810042a7:	ff 75 14             	pushl  0x14(%ebp)
810042aa:	ff 75 10             	pushl  0x10(%ebp)
810042ad:	ff 75 0c             	pushl  0xc(%ebp)
810042b0:	e8 5a c0 ff ff       	call   8100030f <read>
810042b5:	83 c4 10             	add    $0x10,%esp
810042b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042bb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810042bf:	75 14                	jne    810042d5 <_read_r+0x41>
810042c1:	a1 b0 55 00 81       	mov    0x810055b0,%eax
810042c6:	85 c0                	test   %eax,%eax
810042c8:	74 0b                	je     810042d5 <_read_r+0x41>
810042ca:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
810042d0:	8b 45 08             	mov    0x8(%ebp),%eax
810042d3:	89 10                	mov    %edx,(%eax)
810042d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042d8:	c9                   	leave  
810042d9:	c3                   	ret    

810042da <cleanup_glue>:
810042da:	55                   	push   %ebp
810042db:	89 e5                	mov    %esp,%ebp
810042dd:	83 ec 08             	sub    $0x8,%esp
810042e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810042e3:	8b 00                	mov    (%eax),%eax
810042e5:	85 c0                	test   %eax,%eax
810042e7:	74 14                	je     810042fd <cleanup_glue+0x23>
810042e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042ec:	8b 00                	mov    (%eax),%eax
810042ee:	83 ec 08             	sub    $0x8,%esp
810042f1:	50                   	push   %eax
810042f2:	ff 75 08             	pushl  0x8(%ebp)
810042f5:	e8 e0 ff ff ff       	call   810042da <cleanup_glue>
810042fa:	83 c4 10             	add    $0x10,%esp
810042fd:	83 ec 08             	sub    $0x8,%esp
81004300:	ff 75 0c             	pushl  0xc(%ebp)
81004303:	ff 75 08             	pushl  0x8(%ebp)
81004306:	e8 4b f7 ff ff       	call   81003a56 <_free_r>
8100430b:	83 c4 10             	add    $0x10,%esp
8100430e:	90                   	nop
8100430f:	c9                   	leave  
81004310:	c3                   	ret    

81004311 <_reclaim_reent>:
81004311:	55                   	push   %ebp
81004312:	89 e5                	mov    %esp,%ebp
81004314:	83 ec 28             	sub    $0x28,%esp
81004317:	a1 84 4f 00 81       	mov    0x81004f84,%eax
8100431c:	39 45 08             	cmp    %eax,0x8(%ebp)
8100431f:	0f 84 49 01 00 00    	je     8100446e <_reclaim_reent+0x15d>
81004325:	8b 45 08             	mov    0x8(%ebp),%eax
81004328:	8b 40 4c             	mov    0x4c(%eax),%eax
8100432b:	85 c0                	test   %eax,%eax
8100432d:	74 64                	je     81004393 <_reclaim_reent+0x82>
8100432f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004336:	eb 3e                	jmp    81004376 <_reclaim_reent+0x65>
81004338:	8b 45 08             	mov    0x8(%ebp),%eax
8100433b:	8b 50 4c             	mov    0x4c(%eax),%edx
8100433e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004341:	c1 e0 02             	shl    $0x2,%eax
81004344:	01 d0                	add    %edx,%eax
81004346:	8b 00                	mov    (%eax),%eax
81004348:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100434b:	eb 1f                	jmp    8100436c <_reclaim_reent+0x5b>
8100434d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004350:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004353:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004356:	8b 00                	mov    (%eax),%eax
81004358:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100435b:	83 ec 08             	sub    $0x8,%esp
8100435e:	ff 75 e8             	pushl  -0x18(%ebp)
81004361:	ff 75 08             	pushl  0x8(%ebp)
81004364:	e8 ed f6 ff ff       	call   81003a56 <_free_r>
81004369:	83 c4 10             	add    $0x10,%esp
8100436c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004370:	75 db                	jne    8100434d <_reclaim_reent+0x3c>
81004372:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004376:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004379:	83 f8 1f             	cmp    $0x1f,%eax
8100437c:	76 ba                	jbe    81004338 <_reclaim_reent+0x27>
8100437e:	8b 45 08             	mov    0x8(%ebp),%eax
81004381:	8b 40 4c             	mov    0x4c(%eax),%eax
81004384:	83 ec 08             	sub    $0x8,%esp
81004387:	50                   	push   %eax
81004388:	ff 75 08             	pushl  0x8(%ebp)
8100438b:	e8 c6 f6 ff ff       	call   81003a56 <_free_r>
81004390:	83 c4 10             	add    $0x10,%esp
81004393:	8b 45 08             	mov    0x8(%ebp),%eax
81004396:	8b 40 40             	mov    0x40(%eax),%eax
81004399:	85 c0                	test   %eax,%eax
8100439b:	74 15                	je     810043b2 <_reclaim_reent+0xa1>
8100439d:	8b 45 08             	mov    0x8(%ebp),%eax
810043a0:	8b 40 40             	mov    0x40(%eax),%eax
810043a3:	83 ec 08             	sub    $0x8,%esp
810043a6:	50                   	push   %eax
810043a7:	ff 75 08             	pushl  0x8(%ebp)
810043aa:	e8 a7 f6 ff ff       	call   81003a56 <_free_r>
810043af:	83 c4 10             	add    $0x10,%esp
810043b2:	8b 45 08             	mov    0x8(%ebp),%eax
810043b5:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043bb:	85 c0                	test   %eax,%eax
810043bd:	74 50                	je     8100440f <_reclaim_reent+0xfe>
810043bf:	8b 45 08             	mov    0x8(%ebp),%eax
810043c2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043c8:	8b 55 08             	mov    0x8(%ebp),%edx
810043cb:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810043d1:	39 d0                	cmp    %edx,%eax
810043d3:	74 3a                	je     8100440f <_reclaim_reent+0xfe>
810043d5:	8b 45 08             	mov    0x8(%ebp),%eax
810043d8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043de:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043e1:	eb 1f                	jmp    81004402 <_reclaim_reent+0xf1>
810043e3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810043e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043ec:	8b 00                	mov    (%eax),%eax
810043ee:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043f1:	83 ec 08             	sub    $0x8,%esp
810043f4:	ff 75 e4             	pushl  -0x1c(%ebp)
810043f7:	ff 75 08             	pushl  0x8(%ebp)
810043fa:	e8 57 f6 ff ff       	call   81003a56 <_free_r>
810043ff:	83 c4 10             	add    $0x10,%esp
81004402:	8b 45 08             	mov    0x8(%ebp),%eax
81004405:	05 4c 01 00 00       	add    $0x14c,%eax
8100440a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100440d:	75 d4                	jne    810043e3 <_reclaim_reent+0xd2>
8100440f:	8b 45 08             	mov    0x8(%ebp),%eax
81004412:	8b 40 54             	mov    0x54(%eax),%eax
81004415:	85 c0                	test   %eax,%eax
81004417:	74 15                	je     8100442e <_reclaim_reent+0x11d>
81004419:	8b 45 08             	mov    0x8(%ebp),%eax
8100441c:	8b 40 54             	mov    0x54(%eax),%eax
8100441f:	83 ec 08             	sub    $0x8,%esp
81004422:	50                   	push   %eax
81004423:	ff 75 08             	pushl  0x8(%ebp)
81004426:	e8 2b f6 ff ff       	call   81003a56 <_free_r>
8100442b:	83 c4 10             	add    $0x10,%esp
8100442e:	8b 45 08             	mov    0x8(%ebp),%eax
81004431:	8b 40 38             	mov    0x38(%eax),%eax
81004434:	85 c0                	test   %eax,%eax
81004436:	74 36                	je     8100446e <_reclaim_reent+0x15d>
81004438:	8b 45 08             	mov    0x8(%ebp),%eax
8100443b:	8b 40 3c             	mov    0x3c(%eax),%eax
8100443e:	83 ec 0c             	sub    $0xc,%esp
81004441:	ff 75 08             	pushl  0x8(%ebp)
81004444:	ff d0                	call   *%eax
81004446:	83 c4 10             	add    $0x10,%esp
81004449:	8b 45 08             	mov    0x8(%ebp),%eax
8100444c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004452:	85 c0                	test   %eax,%eax
81004454:	74 18                	je     8100446e <_reclaim_reent+0x15d>
81004456:	8b 45 08             	mov    0x8(%ebp),%eax
81004459:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100445f:	83 ec 08             	sub    $0x8,%esp
81004462:	50                   	push   %eax
81004463:	ff 75 08             	pushl  0x8(%ebp)
81004466:	e8 6f fe ff ff       	call   810042da <cleanup_glue>
8100446b:	83 c4 10             	add    $0x10,%esp
8100446e:	90                   	nop
8100446f:	c9                   	leave  
81004470:	c3                   	ret    

81004471 <strcmp>:
81004471:	55                   	push   %ebp
81004472:	89 e5                	mov    %esp,%ebp
81004474:	83 ec 10             	sub    $0x10,%esp
81004477:	8b 55 08             	mov    0x8(%ebp),%edx
8100447a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100447d:	09 d0                	or     %edx,%eax
8100447f:	83 e0 03             	and    $0x3,%eax
81004482:	85 c0                	test   %eax,%eax
81004484:	75 5e                	jne    810044e4 <strcmp+0x73>
81004486:	8b 45 08             	mov    0x8(%ebp),%eax
81004489:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100448c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100448f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004492:	eb 2c                	jmp    810044c0 <strcmp+0x4f>
81004494:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004497:	8b 00                	mov    (%eax),%eax
81004499:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100449f:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044a2:	8b 00                	mov    (%eax),%eax
810044a4:	f7 d0                	not    %eax
810044a6:	21 d0                	and    %edx,%eax
810044a8:	25 80 80 80 80       	and    $0x80808080,%eax
810044ad:	85 c0                	test   %eax,%eax
810044af:	74 07                	je     810044b8 <strcmp+0x47>
810044b1:	b8 00 00 00 00       	mov    $0x0,%eax
810044b6:	eb 5c                	jmp    81004514 <strcmp+0xa3>
810044b8:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810044bc:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810044c0:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044c3:	8b 10                	mov    (%eax),%edx
810044c5:	8b 45 f8             	mov    -0x8(%ebp),%eax
810044c8:	8b 00                	mov    (%eax),%eax
810044ca:	39 c2                	cmp    %eax,%edx
810044cc:	74 c6                	je     81004494 <strcmp+0x23>
810044ce:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044d1:	89 45 08             	mov    %eax,0x8(%ebp)
810044d4:	8b 45 f8             	mov    -0x8(%ebp),%eax
810044d7:	89 45 0c             	mov    %eax,0xc(%ebp)
810044da:	eb 08                	jmp    810044e4 <strcmp+0x73>
810044dc:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810044e0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810044e4:	8b 45 08             	mov    0x8(%ebp),%eax
810044e7:	0f b6 00             	movzbl (%eax),%eax
810044ea:	84 c0                	test   %al,%al
810044ec:	74 10                	je     810044fe <strcmp+0x8d>
810044ee:	8b 45 08             	mov    0x8(%ebp),%eax
810044f1:	0f b6 10             	movzbl (%eax),%edx
810044f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810044f7:	0f b6 00             	movzbl (%eax),%eax
810044fa:	38 c2                	cmp    %al,%dl
810044fc:	74 de                	je     810044dc <strcmp+0x6b>
810044fe:	8b 45 08             	mov    0x8(%ebp),%eax
81004501:	0f b6 00             	movzbl (%eax),%eax
81004504:	0f b6 d0             	movzbl %al,%edx
81004507:	8b 45 0c             	mov    0xc(%ebp),%eax
8100450a:	0f b6 00             	movzbl (%eax),%eax
8100450d:	0f b6 c8             	movzbl %al,%ecx
81004510:	89 d0                	mov    %edx,%eax
81004512:	29 c8                	sub    %ecx,%eax
81004514:	c9                   	leave  
81004515:	c3                   	ret    

81004516 <__get_global_locale>:
81004516:	55                   	push   %ebp
81004517:	89 e5                	mov    %esp,%ebp
81004519:	b8 c0 53 00 81       	mov    $0x810053c0,%eax
8100451e:	5d                   	pop    %ebp
8100451f:	c3                   	ret    

81004520 <__get_current_locale>:
81004520:	55                   	push   %ebp
81004521:	89 e5                	mov    %esp,%ebp
81004523:	e8 ee ff ff ff       	call   81004516 <__get_global_locale>
81004528:	5d                   	pop    %ebp
81004529:	c3                   	ret    

8100452a <_wcrtomb_r>:
8100452a:	55                   	push   %ebp
8100452b:	89 e5                	mov    %esp,%ebp
8100452d:	83 ec 18             	sub    $0x18,%esp
81004530:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004537:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100453b:	75 21                	jne    8100455e <_wcrtomb_r+0x34>
8100453d:	e8 de ff ff ff       	call   81004520 <__get_current_locale>
81004542:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004548:	ff 75 14             	pushl  0x14(%ebp)
8100454b:	6a 00                	push   $0x0
8100454d:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004550:	52                   	push   %edx
81004551:	ff 75 08             	pushl  0x8(%ebp)
81004554:	ff d0                	call   *%eax
81004556:	83 c4 10             	add    $0x10,%esp
81004559:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100455c:	eb 1f                	jmp    8100457d <_wcrtomb_r+0x53>
8100455e:	e8 bd ff ff ff       	call   81004520 <__get_current_locale>
81004563:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004569:	ff 75 14             	pushl  0x14(%ebp)
8100456c:	ff 75 10             	pushl  0x10(%ebp)
8100456f:	ff 75 0c             	pushl  0xc(%ebp)
81004572:	ff 75 08             	pushl  0x8(%ebp)
81004575:	ff d0                	call   *%eax
81004577:	83 c4 10             	add    $0x10,%esp
8100457a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100457d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004581:	75 19                	jne    8100459c <_wcrtomb_r+0x72>
81004583:	8b 45 14             	mov    0x14(%ebp),%eax
81004586:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100458c:	8b 45 08             	mov    0x8(%ebp),%eax
8100458f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004595:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100459a:	eb 03                	jmp    8100459f <_wcrtomb_r+0x75>
8100459c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100459f:	c9                   	leave  
810045a0:	c3                   	ret    

810045a1 <wcrtomb>:
810045a1:	55                   	push   %ebp
810045a2:	89 e5                	mov    %esp,%ebp
810045a4:	83 ec 28             	sub    $0x28,%esp
810045a7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810045ae:	a1 84 4f 00 81       	mov    0x81004f84,%eax
810045b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810045b6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810045ba:	75 21                	jne    810045dd <wcrtomb+0x3c>
810045bc:	e8 5f ff ff ff       	call   81004520 <__get_current_locale>
810045c1:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045c7:	ff 75 10             	pushl  0x10(%ebp)
810045ca:	6a 00                	push   $0x0
810045cc:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810045cf:	52                   	push   %edx
810045d0:	ff 75 f0             	pushl  -0x10(%ebp)
810045d3:	ff d0                	call   *%eax
810045d5:	83 c4 10             	add    $0x10,%esp
810045d8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045db:	eb 1f                	jmp    810045fc <wcrtomb+0x5b>
810045dd:	e8 3e ff ff ff       	call   81004520 <__get_current_locale>
810045e2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045e8:	ff 75 10             	pushl  0x10(%ebp)
810045eb:	ff 75 0c             	pushl  0xc(%ebp)
810045ee:	ff 75 08             	pushl  0x8(%ebp)
810045f1:	ff 75 f0             	pushl  -0x10(%ebp)
810045f4:	ff d0                	call   *%eax
810045f6:	83 c4 10             	add    $0x10,%esp
810045f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045fc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004600:	75 19                	jne    8100461b <wcrtomb+0x7a>
81004602:	8b 45 10             	mov    0x10(%ebp),%eax
81004605:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100460b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100460e:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004614:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004619:	eb 03                	jmp    8100461e <wcrtomb+0x7d>
8100461b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100461e:	c9                   	leave  
8100461f:	c3                   	ret    

81004620 <__get_global_locale>:
81004620:	55                   	push   %ebp
81004621:	89 e5                	mov    %esp,%ebp
81004623:	b8 c0 53 00 81       	mov    $0x810053c0,%eax
81004628:	5d                   	pop    %ebp
81004629:	c3                   	ret    

8100462a <__get_current_locale>:
8100462a:	55                   	push   %ebp
8100462b:	89 e5                	mov    %esp,%ebp
8100462d:	e8 ee ff ff ff       	call   81004620 <__get_global_locale>
81004632:	5d                   	pop    %ebp
81004633:	c3                   	ret    

81004634 <_wctomb_r>:
81004634:	55                   	push   %ebp
81004635:	89 e5                	mov    %esp,%ebp
81004637:	83 ec 08             	sub    $0x8,%esp
8100463a:	e8 eb ff ff ff       	call   8100462a <__get_current_locale>
8100463f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004645:	ff 75 14             	pushl  0x14(%ebp)
81004648:	ff 75 10             	pushl  0x10(%ebp)
8100464b:	ff 75 0c             	pushl  0xc(%ebp)
8100464e:	ff 75 08             	pushl  0x8(%ebp)
81004651:	ff d0                	call   *%eax
81004653:	83 c4 10             	add    $0x10,%esp
81004656:	c9                   	leave  
81004657:	c3                   	ret    

81004658 <__ascii_wctomb>:
81004658:	55                   	push   %ebp
81004659:	89 e5                	mov    %esp,%ebp
8100465b:	83 ec 10             	sub    $0x10,%esp
8100465e:	8b 45 10             	mov    0x10(%ebp),%eax
81004661:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004664:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004668:	75 07                	jne    81004671 <__ascii_wctomb+0x19>
8100466a:	b8 00 00 00 00       	mov    $0x0,%eax
8100466f:	eb 28                	jmp    81004699 <__ascii_wctomb+0x41>
81004671:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004678:	76 10                	jbe    8100468a <__ascii_wctomb+0x32>
8100467a:	8b 45 08             	mov    0x8(%ebp),%eax
8100467d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004683:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004688:	eb 0f                	jmp    81004699 <__ascii_wctomb+0x41>
8100468a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100468d:	89 c2                	mov    %eax,%edx
8100468f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004692:	88 10                	mov    %dl,(%eax)
81004694:	b8 01 00 00 00       	mov    $0x1,%eax
81004699:	c9                   	leave  
8100469a:	c3                   	ret    

8100469b <_fstat_r>:
8100469b:	55                   	push   %ebp
8100469c:	89 e5                	mov    %esp,%ebp
8100469e:	83 ec 18             	sub    $0x18,%esp
810046a1:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
810046a8:	00 00 00 
810046ab:	83 ec 08             	sub    $0x8,%esp
810046ae:	ff 75 10             	pushl  0x10(%ebp)
810046b1:	ff 75 0c             	pushl  0xc(%ebp)
810046b4:	e8 1f bd ff ff       	call   810003d8 <fstat>
810046b9:	83 c4 10             	add    $0x10,%esp
810046bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046bf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810046c3:	75 14                	jne    810046d9 <_fstat_r+0x3e>
810046c5:	a1 b0 55 00 81       	mov    0x810055b0,%eax
810046ca:	85 c0                	test   %eax,%eax
810046cc:	74 0b                	je     810046d9 <_fstat_r+0x3e>
810046ce:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
810046d4:	8b 45 08             	mov    0x8(%ebp),%eax
810046d7:	89 10                	mov    %edx,(%eax)
810046d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046dc:	c9                   	leave  
810046dd:	c3                   	ret    

810046de <_isatty_r>:
810046de:	55                   	push   %ebp
810046df:	89 e5                	mov    %esp,%ebp
810046e1:	83 ec 18             	sub    $0x18,%esp
810046e4:	c7 05 b0 55 00 81 00 	movl   $0x0,0x810055b0
810046eb:	00 00 00 
810046ee:	83 ec 0c             	sub    $0xc,%esp
810046f1:	ff 75 0c             	pushl  0xc(%ebp)
810046f4:	e8 be bc ff ff       	call   810003b7 <isatty>
810046f9:	83 c4 10             	add    $0x10,%esp
810046fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046ff:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004703:	75 14                	jne    81004719 <_isatty_r+0x3b>
81004705:	a1 b0 55 00 81       	mov    0x810055b0,%eax
8100470a:	85 c0                	test   %eax,%eax
8100470c:	74 0b                	je     81004719 <_isatty_r+0x3b>
8100470e:	8b 15 b0 55 00 81    	mov    0x810055b0,%edx
81004714:	8b 45 08             	mov    0x8(%ebp),%eax
81004717:	89 10                	mov    %edx,(%eax)
81004719:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100471c:	c9                   	leave  
8100471d:	c3                   	ret    
>>>>>>> 7a60b61c1d68829ee46cfe379676054c4dcbdf6b
