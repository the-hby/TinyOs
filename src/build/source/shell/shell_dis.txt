
E:/CppProject/TinyOs/src/build/source/shell/shell.elf:     file format elf32-i386
E:/CppProject/TinyOs/src/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810000f4

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x0000566c memsz 0x00005c00 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000048a4  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003a1  810048c0  810048c0  000058c0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009ec  81004c80  81004c80  00005c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000580  81005680  81005680  0000666c  2**5
                  ALLOC
  4 .debug_info   00017dc1  00000000  00000000  0000666c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000537f  00000000  00000000  0001e42d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000550  00000000  00000000  000237b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000351d  00000000  00000000  00023d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000122e  00000000  00000000  0002721d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  0002844b  2**0
                  CONTENTS, READONLY
 10 .debug_frame  0000111c  00000000  00000000  00028470  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 00000cc7  00000000  00000000  0002958c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 0000004e  00000000  00000000  0002a253  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
810048c0 l    d  .rodata	00000000 .rodata
81004c80 l    d  .data	00000000 .data
81005680 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81005680 l     O .bss	0000040c cli
81004c80 l     O .data	00000004 prompt
81000000 l     F .text	0000000a do_help
810048ec l     O .rodata	0000000c cmd_list
8100000a l     F .text	00000048 cli_init
81000052 l     F .text	00000033 show_prompt
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000139 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
81000666 l     F .text	000000ad std
81000713 l     F .text	0000001b stdin_init
8100072e l     F .text	0000001b stdout_init
81000749 l     F .text	0000001b stderr_init
81005a8c l     O .bss	00000004 __sfp_recursive_mutex
81005a90 l     O .bss	00000004 __sinit_recursive_mutex
81000a0c l     F .text	0000000a __fp_lock
81000a16 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
81004ca0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
8100113d l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
81005ae8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
8100218c l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81002ddc l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
81003298 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 locale.c
810038eb l     F .text	0000000a __get_global_locale
810038f5 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81003b11 l     F .text	0000000a __get_global_locale
81003b1b l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81003c3d l       .text	00000000 L20
81003bf4 l       .text	00000000 L5
81003c3a l       .text	00000000 L15
81003c00 l       .text	00000000 L8
81003c21 l       .text	00000000 L9
81003c30 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100469c l     F .text	0000000a __get_global_locale
810046a6 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810047a6 l     F .text	0000000a __get_global_locale
810047b0 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81004864 g     F .text	00000040 _isatty_r
81002c45 g     F .text	00000037 cleanup_glue
8100206a g     F .text	00000046 _lseek_r
8100023b g     F .text	0000001b yield
81001cb3 g     F .text	00000035 printf
810046b0 g     F .text	00000077 _wcrtomb_r
81001e51 g     F .text	0000004a __sseek
8100095b g     F .text	00000099 __sinit
8100300a g     F .text	00000112 __swbuf_r
810038ff g     F .text	0000005f _setlocale_r
81000764 g     F .text	0000006f __sfmoreglue
81001c80 g     F .text	00000006 __malloc_unlock
81003c90 g       .text	00000000 memmove
81000941 g     F .text	0000001a _cleanup
81004821 g     F .text	00000043 _fstat_r
81005aec g     O .bss	00000004 errno
81001d4b g     F .text	0000001d __srget
81001dec g     F .text	0000000a __seofread
81001121 g     F .text	0000001c gets
8100020d g     F .text	0000002e execve
810001af g     F .text	0000001b getpid
81003c48 g       .text	00000000 memcpy
81000920 g     F .text	00000021 _cleanup_r
81001c86 g     F .text	0000002d _printf_r
81000325 g     F .text	00000021 isatty
81005aa0 g     O .bss	00000004 __malloc_top_pad
81005680 g       .bss	00000000 __bss_start__
8100344d g     F .text	0000049e __sfvwrite_r
81001d68 g     F .text	00000040 _sbrk_r
81002bff g     F .text	00000046 _read_r
81001f46 g     F .text	00000107 _fclose_r
8100062d g     F .text	00000039 fflush
81005aa4 g     O .bss	00000004 __malloc_max_sbrked_mem
810002f8 g     F .text	0000002d lseek
810048fc g     O .rodata	00000004 _global_impure_ptr
81003d1d g     F .text	000008da _realloc_r
810033ae g     F .text	00000057 _fputwc_r
81000a20 g     F .text	00000024 __fp_lock_all
81002c7c g     F .text	00000160 _reclaim_reent
810002aa g     F .text	0000002d write
81000346 g     F .text	00000027 fstat
810021f2 g     F .text	000000a8 __sfputs_r
810009f4 g     F .text	00000006 __sfp_lock_acquire
81003bb0 g       .text	00000000 memchr
81005af4 g       .bss	00000000 __bss_end__
81000a68 g     F .text	000003db _free_r
810049e0 g     O .rodata	00000180 _ctype_b
8100395e g     F .text	00000014 __locale_mb_cur_max
81001ce8 g     F .text	00000063 __srget_r
810054ec g     O .data	00000004 __malloc_sbrk_base
810000f4 g       .text	00000000 _start
81001077 g     F .text	000000aa _gets_r
8100027d g     F .text	0000002d read
81005ac0 g     O .bss	00000028 __malloc_current_mallinfo
81001c86 g     F .text	0000002d _iprintf_r
81001f06 g     F .text	00000040 _close_r
810001f2 g     F .text	0000001b fork
8100313d g     F .text	0000015b __swsetup_r
810007d3 g     F .text	0000014d __sfp
810050e0 g     O .data	00000408 __malloc_av_
81000a06 g     F .text	00000006 __sinit_lock_release
81001da8 g     F .text	00000044 __sread
81001c7a g     F .text	00000006 __malloc_lock
8100036d g     F .text	00000021 sbrk
810005d5 g     F .text	00000058 _fflush_r
81000104 g     F .text	00000035 cstart
81001bf2 g       .text	00000000 memset
81000085 g     F .text	0000006f main
81005aa8 g     O .bss	00000004 __malloc_max_total_mem
8100311c g     F .text	00000021 __swbuf
81001e9b g     F .text	00000025 __sclose
8100204d g     F .text	0000001d fclose
810013d0 g     F .text	00000822 _malloc_r
810047de g     F .text	00000043 __ascii_wctomb
81005b00 g     O .bss	00000100 cmd_buf
81000fa4 g     F .text	00000068 _fwalk
81003b25 g     F .text	0000002a _mbtowc_r
81000e43 g     F .text	00000161 _malloc_trim_r
810045f7 g     F .text	000000a5 strcmp
8100229a g     F .text	00000025 vfiprintf
8100038e g     F .text	00000021 dup
81001cb3 g     F .text	00000035 iprintf
81005af0 g     O .bss	00000004 _PathLocale
81001ec0 g     F .text	00000046 _write_r
81003972 g     F .text	0000001f setlocale
81002615 g     F .text	0000019b _printf_common
810050c4 g     O .data	00000004 _impure_ptr
810003af g     F .text	00000226 __sflush_r
81002e09 g     F .text	00000201 __srefill_r
81003b4f g     F .text	00000058 __ascii_mbtowc
81000a44 g     F .text	00000024 __fp_unlock_all
810001ca g     F .text	00000028 print_msg
81003a7e g     F .text	00000093 __swhatbuf_r
810032fe g     F .text	000000b0 __fputwc
81001df6 g     F .text	0000005b __swrite
810054e8 g     O .data	00000004 __malloc_trim_threshold
810022bf g     F .text	00000356 _vfiprintf_r
8100100c g     F .text	0000006b _fwalk_reent
810009fa g     F .text	00000006 __sfp_lock_release
81004b60 g     O .rodata	00000101 _ctype_
81003991 g     F .text	000000ed __smakebuf_r
810027b0 g     F .text	0000044f _printf_i
81000256 g     F .text	00000027 open
810020b0 g     F .text	000000dc __sprint_r
810047ba g     F .text	00000024 _wctomb_r
810022bf g     F .text	00000356 _vfprintf_r
81000185 g     F .text	0000002a msleep
81004727 g     F .text	0000007f wcrtomb
810002d7 g     F .text	00000021 close
81005500 g     O .data	0000016c __global_locale
8100229a g     F .text	00000025 vfprintf
81003405 g     F .text	00000048 fputwc
81000a00 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <do_help>:
/// @brief 命令行提示词，在提示词后输入命令
static const char* prompt="sh >>";

char cmd_buf[256];

static int do_help(int argc,char** argv){
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
    return 0;
81000003:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000008:	5d                   	pop    %ebp
81000009:	c3                   	ret    

8100000a <cli_init>:
 * @brief 命令行的初始化函数
 * @param prompt 初始化cli_t结构体的prompt成员变量
 * @param cli_cmd_t 命令列表首地址
 * @param size 命令列表包含元素个数
 */
static void cli_init(const char* prompt,const cli_cmd_t* cmd_list,int size){
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	83 ec 08             	sub    $0x8,%esp
    cli.prompt=prompt;
81000010:	8b 45 08             	mov    0x8(%ebp),%eax
81000013:	a3 88 5a 00 81       	mov    %eax,0x81005a88
    memset(cli.curr_input,0,CLI_INPUT_SIZE);
81000018:	83 ec 04             	sub    $0x4,%esp
8100001b:	68 00 04 00 00       	push   $0x400
81000020:	6a 00                	push   $0x0
81000022:	68 80 56 00 81       	push   $0x81005680
81000027:	e8 c6 1b 00 00       	call   81001bf2 <memset>
8100002c:	83 c4 10             	add    $0x10,%esp
    cli.cmd_start=cmd_list;
8100002f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000032:	a3 80 5a 00 81       	mov    %eax,0x81005a80
    cli.cmd_end=cmd_list+size;
81000037:	8b 55 10             	mov    0x10(%ebp),%edx
8100003a:	89 d0                	mov    %edx,%eax
8100003c:	01 c0                	add    %eax,%eax
8100003e:	01 d0                	add    %edx,%eax
81000040:	c1 e0 02             	shl    $0x2,%eax
81000043:	89 c2                	mov    %eax,%edx
81000045:	8b 45 0c             	mov    0xc(%ebp),%eax
81000048:	01 d0                	add    %edx,%eax
8100004a:	a3 84 5a 00 81       	mov    %eax,0x81005a84
}
8100004f:	90                   	nop
81000050:	c9                   	leave  
81000051:	c3                   	ret    

81000052 <show_prompt>:

/**
 * @brief 显示命令行提示词
 */
static void show_prompt(void){
81000052:	55                   	push   %ebp
81000053:	89 e5                	mov    %esp,%ebp
81000055:	83 ec 08             	sub    $0x8,%esp
    printf("%s",cli.prompt);
81000058:	a1 88 5a 00 81       	mov    0x81005a88,%eax
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	50                   	push   %eax
81000061:	68 f8 48 00 81       	push   $0x810048f8
81000066:	e8 48 1c 00 00       	call   81001cb3 <iprintf>
8100006b:	83 c4 10             	add    $0x10,%esp

    // 清空缓存
    fflush(stdout);
8100006e:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81000073:	8b 40 08             	mov    0x8(%eax),%eax
81000076:	83 ec 0c             	sub    $0xc,%esp
81000079:	50                   	push   %eax
8100007a:	e8 ae 05 00 00       	call   8100062d <fflush>
8100007f:	83 c4 10             	add    $0x10,%esp
}
81000082:	90                   	nop
81000083:	c9                   	leave  
81000084:	c3                   	ret    

81000085 <main>:

int main(int argc,char** argv){
81000085:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000089:	83 e4 f0             	and    $0xfffffff0,%esp
8100008c:	ff 71 fc             	pushl  -0x4(%ecx)
8100008f:	55                   	push   %ebp
81000090:	89 e5                	mov    %esp,%ebp
81000092:	51                   	push   %ecx
81000093:	83 ec 04             	sub    $0x4,%esp
81000096:	89 c8                	mov    %ecx,%eax

    // 打开tty0设备
    open(argv[0],0);
81000098:	8b 40 04             	mov    0x4(%eax),%eax
8100009b:	8b 00                	mov    (%eax),%eax
8100009d:	83 ec 08             	sub    $0x8,%esp
810000a0:	6a 00                	push   $0x0
810000a2:	50                   	push   %eax
810000a3:	e8 ae 01 00 00       	call   81000256 <open>
810000a8:	83 c4 10             	add    $0x10,%esp
    dup(0);
810000ab:	83 ec 0c             	sub    $0xc,%esp
810000ae:	6a 00                	push   $0x0
810000b0:	e8 d9 02 00 00       	call   8100038e <dup>
810000b5:	83 c4 10             	add    $0x10,%esp
    dup(0);
810000b8:	83 ec 0c             	sub    $0xc,%esp
810000bb:	6a 00                	push   $0x0
810000bd:	e8 cc 02 00 00       	call   8100038e <dup>
810000c2:	83 c4 10             	add    $0x10,%esp

    cli_init(prompt,cmd_list,sizeof(cmd_list)/sizeof(cmd_list[0]));
810000c5:	a1 80 4c 00 81       	mov    0x81004c80,%eax
810000ca:	83 ec 04             	sub    $0x4,%esp
810000cd:	6a 01                	push   $0x1
810000cf:	68 ec 48 00 81       	push   $0x810048ec
810000d4:	50                   	push   %eax
810000d5:	e8 30 ff ff ff       	call   8100000a <cli_init>
810000da:	83 c4 10             	add    $0x10,%esp

    for(;;){
        show_prompt();
810000dd:	e8 70 ff ff ff       	call   81000052 <show_prompt>
        gets(cli.curr_input);
810000e2:	83 ec 0c             	sub    $0xc,%esp
810000e5:	68 80 56 00 81       	push   $0x81005680
810000ea:	e8 32 10 00 00       	call   81001121 <gets>
810000ef:	83 c4 10             	add    $0x10,%esp
        show_prompt();
810000f2:	eb e9                	jmp    810000dd <main+0x58>

810000f4 <_start>:
    .text
    .global _start
    .extern cstart
_start:
    mov %ss,%ax
810000f4:	66 8c d0             	mov    %ss,%ax
    mov %ax,%ds
810000f7:	8e d8                	mov    %eax,%ds
    mov %ax,%es
810000f9:	8e c0                	mov    %eax,%es
    mov %ax,%fs
810000fb:	8e e0                	mov    %eax,%fs
    mov %ax,%gs
810000fd:	8e e8                	mov    %eax,%gs
810000ff:	e9 00 00 00 00       	jmp    81000104 <cstart>

81000104 <cstart>:

int main(int argc,char** argv);

extern uint8_t __bss_start__[],__bss_end__[];

void cstart(int argc,char **argv){
81000104:	55                   	push   %ebp
81000105:	89 e5                	mov    %esp,%ebp
81000107:	83 ec 18             	sub    $0x18,%esp
    uint8_t* start=__bss_start__;
8100010a:	c7 45 f4 80 56 00 81 	movl   $0x81005680,-0xc(%ebp)
    
    while(start<__bss_end__){
81000111:	eb 09                	jmp    8100011c <cstart+0x18>
        *start++;     
81000113:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000116:	83 c0 01             	add    $0x1,%eax
81000119:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start<__bss_end__){
8100011c:	81 7d f4 f4 5a 00 81 	cmpl   $0x81005af4,-0xc(%ebp)
81000123:	72 ee                	jb     81000113 <cstart+0xf>
    }

    main(argc,argv);
81000125:	83 ec 08             	sub    $0x8,%esp
81000128:	ff 75 0c             	pushl  0xc(%ebp)
8100012b:	ff 75 08             	pushl  0x8(%ebp)
8100012e:	e8 52 ff ff ff       	call   81000085 <main>
81000133:	83 c4 10             	add    $0x10,%esp
81000136:	90                   	nop
81000137:	c9                   	leave  
81000138:	c3                   	ret    

81000139 <sys_call>:
#include "lib_syscall.h"
#include "comm/types.h"
#include "core/syscall.h"
#include "os_cfg.h"

static inline int sys_call(syscall_args_t*args){
81000139:	55                   	push   %ebp
8100013a:	89 e5                	mov    %esp,%ebp
8100013c:	57                   	push   %edi
8100013d:	56                   	push   %esi
8100013e:	53                   	push   %ebx
8100013f:	83 ec 10             	sub    $0x10,%esp
    uint32_t addr[]={0,SELECTOR_SYSCALL | 0};
81000142:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000149:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcall *(%[a])"
        :"=a"(ret)
        :[a]"r"(addr),
         [arg3]"r"(args->arg3),
81000150:	8b 45 08             	mov    0x8(%ebp),%eax
81000153:	8b 50 10             	mov    0x10(%eax),%edx
         [arg2]"r"(args->arg2),
81000156:	8b 45 08             	mov    0x8(%ebp),%eax
81000159:	8b 48 0c             	mov    0xc(%eax),%ecx
         [arg1]"r"(args->arg1),
8100015c:	8b 45 08             	mov    0x8(%ebp),%eax
8100015f:	8b 58 08             	mov    0x8(%eax),%ebx
         [arg0]"r"(args->arg0),
81000162:	8b 45 08             	mov    0x8(%ebp),%eax
81000165:	8b 70 04             	mov    0x4(%eax),%esi
         [id]"r"(args->id)
81000168:	8b 45 08             	mov    0x8(%ebp),%eax
8100016b:	8b 38                	mov    (%eax),%edi
    __asm__ __volatile__(
8100016d:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000170:	52                   	push   %edx
81000171:	51                   	push   %ecx
81000172:	53                   	push   %ebx
81000173:	56                   	push   %esi
81000174:	57                   	push   %edi
81000175:	ff 18                	lcall  *(%eax)
81000177:	89 45 f0             	mov    %eax,-0x10(%ebp)
    );
    return ret;
8100017a:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100017d:	83 c4 10             	add    $0x10,%esp
81000180:	5b                   	pop    %ebx
81000181:	5e                   	pop    %esi
81000182:	5f                   	pop    %edi
81000183:	5d                   	pop    %ebp
81000184:	c3                   	ret    

81000185 <msleep>:

void msleep(int ms){
81000185:	55                   	push   %ebp
81000186:	89 e5                	mov    %esp,%ebp
81000188:	83 ec 20             	sub    $0x20,%esp
    if(ms<=0){
8100018b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100018f:	7e 1b                	jle    810001ac <msleep+0x27>
        return;
    }

    syscall_args_t args;
    args.id=SYS_SLEEP;
81000191:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0=ms;
81000198:	8b 45 08             	mov    0x8(%ebp),%eax
8100019b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100019e:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001a1:	50                   	push   %eax
810001a2:	e8 92 ff ff ff       	call   81000139 <sys_call>
810001a7:	83 c4 04             	add    $0x4,%esp
810001aa:	eb 01                	jmp    810001ad <msleep+0x28>
        return;
810001ac:	90                   	nop
}
810001ad:	c9                   	leave  
810001ae:	c3                   	ret    

810001af <getpid>:

int getpid(void){
810001af:	55                   	push   %ebp
810001b0:	89 e5                	mov    %esp,%ebp
810001b2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_GETPID;
810001b5:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
810001bc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001bf:	50                   	push   %eax
810001c0:	e8 74 ff ff ff       	call   81000139 <sys_call>
810001c5:	83 c4 04             	add    $0x4,%esp
}
810001c8:	c9                   	leave  
810001c9:	c3                   	ret    

810001ca <print_msg>:

void print_msg(const char* fmt,int arg){
810001ca:	55                   	push   %ebp
810001cb:	89 e5                	mov    %esp,%ebp
810001cd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_PRINT_MSG;
810001d0:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0=(uint32_t)fmt;
810001d7:	8b 45 08             	mov    0x8(%ebp),%eax
810001da:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=arg;
810001dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810001e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
810001e3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001e6:	50                   	push   %eax
810001e7:	e8 4d ff ff ff       	call   81000139 <sys_call>
810001ec:	83 c4 04             	add    $0x4,%esp
}
810001ef:	90                   	nop
810001f0:	c9                   	leave  
810001f1:	c3                   	ret    

810001f2 <fork>:

int fork(void){
810001f2:	55                   	push   %ebp
810001f3:	89 e5                	mov    %esp,%ebp
810001f5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FORK;
810001f8:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
810001ff:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000202:	50                   	push   %eax
81000203:	e8 31 ff ff ff       	call   81000139 <sys_call>
81000208:	83 c4 04             	add    $0x4,%esp
}
8100020b:	c9                   	leave  
8100020c:	c3                   	ret    

8100020d <execve>:

int execve(const char* name,char* const* argv,char* const* env){
8100020d:	55                   	push   %ebp
8100020e:	89 e5                	mov    %esp,%ebp
81000210:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXECVE;
81000213:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0=(int)name;
8100021a:	8b 45 08             	mov    0x8(%ebp),%eax
8100021d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)argv;
81000220:	8b 45 0c             	mov    0xc(%ebp),%eax
81000223:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)env;
81000226:	8b 45 10             	mov    0x10(%ebp),%eax
81000229:	89 45 f8             	mov    %eax,-0x8(%ebp)

    sys_call(&args);
8100022c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100022f:	50                   	push   %eax
81000230:	e8 04 ff ff ff       	call   81000139 <sys_call>
81000235:	83 c4 04             	add    $0x4,%esp
}
81000238:	90                   	nop
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <yield>:

int yield(void){
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_YIELD;
81000241:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000248:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100024b:	50                   	push   %eax
8100024c:	e8 e8 fe ff ff       	call   81000139 <sys_call>
81000251:	83 c4 04             	add    $0x4,%esp
}
81000254:	c9                   	leave  
81000255:	c3                   	ret    

81000256 <open>:

int open(const char*name,int flags, ...){
81000256:	55                   	push   %ebp
81000257:	89 e5                	mov    %esp,%ebp
81000259:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_OPEN;
8100025c:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0=(int)name;
81000263:	8b 45 08             	mov    0x8(%ebp),%eax
81000266:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)flags;
81000269:	8b 45 0c             	mov    0xc(%ebp),%eax
8100026c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100026f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000272:	50                   	push   %eax
81000273:	e8 c1 fe ff ff       	call   81000139 <sys_call>
81000278:	83 c4 04             	add    $0x4,%esp
}
8100027b:	c9                   	leave  
8100027c:	c3                   	ret    

8100027d <read>:

int read(int file,char* ptr,int len){
8100027d:	55                   	push   %ebp
8100027e:	89 e5                	mov    %esp,%ebp
81000280:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_READ;
81000283:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0=(int)file;
8100028a:	8b 45 08             	mov    0x8(%ebp),%eax
8100028d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000290:	8b 45 0c             	mov    0xc(%ebp),%eax
81000293:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000296:	8b 45 10             	mov    0x10(%ebp),%eax
81000299:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100029c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029f:	50                   	push   %eax
810002a0:	e8 94 fe ff ff       	call   81000139 <sys_call>
810002a5:	83 c4 04             	add    $0x4,%esp
}
810002a8:	c9                   	leave  
810002a9:	c3                   	ret    

810002aa <write>:

int write(int file,char*ptr,int len){
810002aa:	55                   	push   %ebp
810002ab:	89 e5                	mov    %esp,%ebp
810002ad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WRITE;
810002b0:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0=(int)file;
810002b7:	8b 45 08             	mov    0x8(%ebp),%eax
810002ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
810002bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810002c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
810002c3:	8b 45 10             	mov    0x10(%ebp),%eax
810002c6:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810002c9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002cc:	50                   	push   %eax
810002cd:	e8 67 fe ff ff       	call   81000139 <sys_call>
810002d2:	83 c4 04             	add    $0x4,%esp
}
810002d5:	c9                   	leave  
810002d6:	c3                   	ret    

810002d7 <close>:

int close(int file){
810002d7:	55                   	push   %ebp
810002d8:	89 e5                	mov    %esp,%ebp
810002da:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_CLOSE;
810002dd:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0=(int)file;
810002e4:	8b 45 08             	mov    0x8(%ebp),%eax
810002e7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810002ea:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002ed:	50                   	push   %eax
810002ee:	e8 46 fe ff ff       	call   81000139 <sys_call>
810002f3:	83 c4 04             	add    $0x4,%esp
}
810002f6:	c9                   	leave  
810002f7:	c3                   	ret    

810002f8 <lseek>:

int lseek(int file,int ptr,int dir){
810002f8:	55                   	push   %ebp
810002f9:	89 e5                	mov    %esp,%ebp
810002fb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_LSEEK;
810002fe:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0=(int)file;
81000305:	8b 45 08             	mov    0x8(%ebp),%eax
81000308:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
8100030b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100030e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)dir;
81000311:	8b 45 10             	mov    0x10(%ebp),%eax
81000314:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000317:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100031a:	50                   	push   %eax
8100031b:	e8 19 fe ff ff       	call   81000139 <sys_call>
81000320:	83 c4 04             	add    $0x4,%esp
}
81000323:	c9                   	leave  
81000324:	c3                   	ret    

81000325 <isatty>:

int isatty(int file){
81000325:	55                   	push   %ebp
81000326:	89 e5                	mov    %esp,%ebp
81000328:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_ISATTY;
8100032b:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0=(int)file;
81000332:	8b 45 08             	mov    0x8(%ebp),%eax
81000335:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000338:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100033b:	50                   	push   %eax
8100033c:	e8 f8 fd ff ff       	call   81000139 <sys_call>
81000341:	83 c4 04             	add    $0x4,%esp
}
81000344:	c9                   	leave  
81000345:	c3                   	ret    

81000346 <fstat>:

int fstat(int file,struct stat* st){
81000346:	55                   	push   %ebp
81000347:	89 e5                	mov    %esp,%ebp
81000349:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FSTAT;
8100034c:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0=(int)file;
81000353:	8b 45 08             	mov    0x8(%ebp),%eax
81000356:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)st;
81000359:	8b 45 0c             	mov    0xc(%ebp),%eax
8100035c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100035f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000362:	50                   	push   %eax
81000363:	e8 d1 fd ff ff       	call   81000139 <sys_call>
81000368:	83 c4 04             	add    $0x4,%esp
}
8100036b:	c9                   	leave  
8100036c:	c3                   	ret    

8100036d <sbrk>:

void* sbrk(ptrdiff_t incr){
8100036d:	55                   	push   %ebp
8100036e:	89 e5                	mov    %esp,%ebp
81000370:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_SBRK;
81000373:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0=(int)incr;
8100037a:	8b 45 08             	mov    0x8(%ebp),%eax
8100037d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (void*)sys_call(&args);
81000380:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000383:	50                   	push   %eax
81000384:	e8 b0 fd ff ff       	call   81000139 <sys_call>
81000389:	83 c4 04             	add    $0x4,%esp
}
8100038c:	c9                   	leave  
8100038d:	c3                   	ret    

8100038e <dup>:
/** 
* @brief 复制文件描述符
* @param file 需要复制的文件描述符
* @return 复制后的文件描述符，失败返回-1
*/
int dup(int file){
8100038e:	55                   	push   %ebp
8100038f:	89 e5                	mov    %esp,%ebp
81000391:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_DUP;
81000394:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0=(int)file;
8100039b:	8b 45 08             	mov    0x8(%ebp),%eax
8100039e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003a1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003a4:	50                   	push   %eax
810003a5:	e8 8f fd ff ff       	call   81000139 <sys_call>
810003aa:	83 c4 04             	add    $0x4,%esp
810003ad:	c9                   	leave  
810003ae:	c3                   	ret    

810003af <__sflush_r>:
810003af:	55                   	push   %ebp
810003b0:	89 e5                	mov    %esp,%ebp
810003b2:	57                   	push   %edi
810003b3:	56                   	push   %esi
810003b4:	53                   	push   %ebx
810003b5:	83 ec 1c             	sub    $0x1c,%esp
810003b8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810003bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810003bf:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810003c3:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810003c7:	83 e0 08             	and    $0x8,%eax
810003ca:	85 c0                	test   %eax,%eax
810003cc:	0f 85 93 01 00 00    	jne    81000565 <__sflush_r+0x1b6>
810003d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810003d6:	80 cc 08             	or     $0x8,%ah
810003d9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810003dd:	8b 43 04             	mov    0x4(%ebx),%eax
810003e0:	85 c0                	test   %eax,%eax
810003e2:	7f 0b                	jg     810003ef <__sflush_r+0x40>
810003e4:	8b 43 3c             	mov    0x3c(%ebx),%eax
810003e7:	85 c0                	test   %eax,%eax
810003e9:	0f 8e 6f 01 00 00    	jle    8100055e <__sflush_r+0x1af>
810003ef:	8b 43 28             	mov    0x28(%ebx),%eax
810003f2:	85 c0                	test   %eax,%eax
810003f4:	0f 84 64 01 00 00    	je     8100055e <__sflush_r+0x1af>
810003fa:	8b 45 08             	mov    0x8(%ebp),%eax
810003fd:	8b 00                	mov    (%eax),%eax
810003ff:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000402:	8b 45 08             	mov    0x8(%ebp),%eax
81000405:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100040b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100040f:	98                   	cwtl   
81000410:	25 00 10 00 00       	and    $0x1000,%eax
81000415:	85 c0                	test   %eax,%eax
81000417:	74 08                	je     81000421 <__sflush_r+0x72>
81000419:	8b 43 50             	mov    0x50(%ebx),%eax
8100041c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100041f:	eb 64                	jmp    81000485 <__sflush_r+0xd6>
81000421:	8b 43 28             	mov    0x28(%ebx),%eax
81000424:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000427:	6a 01                	push   $0x1
81000429:	6a 00                	push   $0x0
8100042b:	52                   	push   %edx
8100042c:	ff 75 08             	pushl  0x8(%ebp)
8100042f:	ff d0                	call   *%eax
81000431:	83 c4 10             	add    $0x10,%esp
81000434:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000437:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100043b:	75 48                	jne    81000485 <__sflush_r+0xd6>
8100043d:	8b 45 08             	mov    0x8(%ebp),%eax
81000440:	8b 00                	mov    (%eax),%eax
81000442:	85 c0                	test   %eax,%eax
81000444:	74 3f                	je     81000485 <__sflush_r+0xd6>
81000446:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
8100044d:	8b 45 08             	mov    0x8(%ebp),%eax
81000450:	8b 00                	mov    (%eax),%eax
81000452:	83 f8 1d             	cmp    $0x1d,%eax
81000455:	74 0a                	je     81000461 <__sflush_r+0xb2>
81000457:	8b 45 08             	mov    0x8(%ebp),%eax
8100045a:	8b 00                	mov    (%eax),%eax
8100045c:	83 f8 16             	cmp    $0x16,%eax
8100045f:	75 11                	jne    81000472 <__sflush_r+0xc3>
81000461:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000468:	8b 45 08             	mov    0x8(%ebp),%eax
8100046b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100046e:	89 10                	mov    %edx,(%eax)
81000470:	eb 0b                	jmp    8100047d <__sflush_r+0xce>
81000472:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000476:	83 c8 40             	or     $0x40,%eax
81000479:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100047d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000480:	e9 48 01 00 00       	jmp    810005cd <__sflush_r+0x21e>
81000485:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000489:	98                   	cwtl   
8100048a:	83 e0 04             	and    $0x4,%eax
8100048d:	85 c0                	test   %eax,%eax
8100048f:	74 13                	je     810004a4 <__sflush_r+0xf5>
81000491:	8b 43 04             	mov    0x4(%ebx),%eax
81000494:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000497:	8b 43 30             	mov    0x30(%ebx),%eax
8100049a:	85 c0                	test   %eax,%eax
8100049c:	74 06                	je     810004a4 <__sflush_r+0xf5>
8100049e:	8b 43 3c             	mov    0x3c(%ebx),%eax
810004a1:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810004a4:	8b 43 28             	mov    0x28(%ebx),%eax
810004a7:	8b 53 1c             	mov    0x1c(%ebx),%edx
810004aa:	6a 00                	push   $0x0
810004ac:	ff 75 e4             	pushl  -0x1c(%ebp)
810004af:	52                   	push   %edx
810004b0:	ff 75 08             	pushl  0x8(%ebp)
810004b3:	ff d0                	call   *%eax
810004b5:	83 c4 10             	add    $0x10,%esp
810004b8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810004bb:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810004bf:	75 1d                	jne    810004de <__sflush_r+0x12f>
810004c1:	8b 45 08             	mov    0x8(%ebp),%eax
810004c4:	8b 00                	mov    (%eax),%eax
810004c6:	85 c0                	test   %eax,%eax
810004c8:	74 14                	je     810004de <__sflush_r+0x12f>
810004ca:	8b 45 08             	mov    0x8(%ebp),%eax
810004cd:	8b 00                	mov    (%eax),%eax
810004cf:	83 f8 1d             	cmp    $0x1d,%eax
810004d2:	74 0a                	je     810004de <__sflush_r+0x12f>
810004d4:	8b 45 08             	mov    0x8(%ebp),%eax
810004d7:	8b 00                	mov    (%eax),%eax
810004d9:	83 f8 16             	cmp    $0x16,%eax
810004dc:	75 6e                	jne    8100054c <__sflush_r+0x19d>
810004de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810004e2:	80 e4 f7             	and    $0xf7,%ah
810004e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810004e9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810004f0:	8b 43 10             	mov    0x10(%ebx),%eax
810004f3:	89 03                	mov    %eax,(%ebx)
810004f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810004f9:	98                   	cwtl   
810004fa:	25 00 10 00 00       	and    $0x1000,%eax
810004ff:	85 c0                	test   %eax,%eax
81000501:	74 15                	je     81000518 <__sflush_r+0x169>
81000503:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000507:	75 09                	jne    81000512 <__sflush_r+0x163>
81000509:	8b 45 08             	mov    0x8(%ebp),%eax
8100050c:	8b 00                	mov    (%eax),%eax
8100050e:	85 c0                	test   %eax,%eax
81000510:	75 06                	jne    81000518 <__sflush_r+0x169>
81000512:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000515:	89 43 50             	mov    %eax,0x50(%ebx)
81000518:	8b 45 08             	mov    0x8(%ebp),%eax
8100051b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100051e:	89 10                	mov    %edx,(%eax)
81000520:	8b 43 30             	mov    0x30(%ebx),%eax
81000523:	85 c0                	test   %eax,%eax
81000525:	74 37                	je     8100055e <__sflush_r+0x1af>
81000527:	8b 53 30             	mov    0x30(%ebx),%edx
8100052a:	8d 43 40             	lea    0x40(%ebx),%eax
8100052d:	39 c2                	cmp    %eax,%edx
8100052f:	74 12                	je     81000543 <__sflush_r+0x194>
81000531:	8b 43 30             	mov    0x30(%ebx),%eax
81000534:	83 ec 08             	sub    $0x8,%esp
81000537:	50                   	push   %eax
81000538:	ff 75 08             	pushl  0x8(%ebp)
8100053b:	e8 28 05 00 00       	call   81000a68 <_free_r>
81000540:	83 c4 10             	add    $0x10,%esp
81000543:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100054a:	eb 12                	jmp    8100055e <__sflush_r+0x1af>
8100054c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000550:	83 c8 40             	or     $0x40,%eax
81000553:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000557:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100055c:	eb 6f                	jmp    810005cd <__sflush_r+0x21e>
8100055e:	b8 00 00 00 00       	mov    $0x0,%eax
81000563:	eb 68                	jmp    810005cd <__sflush_r+0x21e>
81000565:	8b 73 10             	mov    0x10(%ebx),%esi
81000568:	85 f6                	test   %esi,%esi
8100056a:	75 07                	jne    81000573 <__sflush_r+0x1c4>
8100056c:	b8 00 00 00 00       	mov    $0x0,%eax
81000571:	eb 5a                	jmp    810005cd <__sflush_r+0x21e>
81000573:	8b 03                	mov    (%ebx),%eax
81000575:	29 f0                	sub    %esi,%eax
81000577:	89 c7                	mov    %eax,%edi
81000579:	89 33                	mov    %esi,(%ebx)
8100057b:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100057f:	83 e0 03             	and    $0x3,%eax
81000582:	85 c0                	test   %eax,%eax
81000584:	75 05                	jne    8100058b <__sflush_r+0x1dc>
81000586:	8b 43 14             	mov    0x14(%ebx),%eax
81000589:	eb 05                	jmp    81000590 <__sflush_r+0x1e1>
8100058b:	b8 00 00 00 00       	mov    $0x0,%eax
81000590:	89 43 08             	mov    %eax,0x8(%ebx)
81000593:	eb 2f                	jmp    810005c4 <__sflush_r+0x215>
81000595:	8b 43 24             	mov    0x24(%ebx),%eax
81000598:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100059b:	57                   	push   %edi
8100059c:	56                   	push   %esi
8100059d:	52                   	push   %edx
8100059e:	ff 75 08             	pushl  0x8(%ebp)
810005a1:	ff d0                	call   *%eax
810005a3:	83 c4 10             	add    $0x10,%esp
810005a6:	85 c0                	test   %eax,%eax
810005a8:	7f 12                	jg     810005bc <__sflush_r+0x20d>
810005aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810005ae:	83 c8 40             	or     $0x40,%eax
810005b1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810005b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005ba:	eb 11                	jmp    810005cd <__sflush_r+0x21e>
810005bc:	89 c1                	mov    %eax,%ecx
810005be:	89 c8                	mov    %ecx,%eax
810005c0:	01 c6                	add    %eax,%esi
810005c2:	29 cf                	sub    %ecx,%edi
810005c4:	85 ff                	test   %edi,%edi
810005c6:	7f cd                	jg     81000595 <__sflush_r+0x1e6>
810005c8:	b8 00 00 00 00       	mov    $0x0,%eax
810005cd:	8d 65 f4             	lea    -0xc(%ebp),%esp
810005d0:	5b                   	pop    %ebx
810005d1:	5e                   	pop    %esi
810005d2:	5f                   	pop    %edi
810005d3:	5d                   	pop    %ebp
810005d4:	c3                   	ret    

810005d5 <_fflush_r>:
810005d5:	55                   	push   %ebp
810005d6:	89 e5                	mov    %esp,%ebp
810005d8:	53                   	push   %ebx
810005d9:	83 ec 14             	sub    $0x14,%esp
810005dc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810005df:	8b 45 08             	mov    0x8(%ebp),%eax
810005e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005e5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005e9:	74 18                	je     81000603 <_fflush_r+0x2e>
810005eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005ee:	8b 40 38             	mov    0x38(%eax),%eax
810005f1:	85 c0                	test   %eax,%eax
810005f3:	75 0e                	jne    81000603 <_fflush_r+0x2e>
810005f5:	83 ec 0c             	sub    $0xc,%esp
810005f8:	ff 75 f4             	pushl  -0xc(%ebp)
810005fb:	e8 5b 03 00 00       	call   8100095b <__sinit>
81000600:	83 c4 10             	add    $0x10,%esp
81000603:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000607:	66 85 c0             	test   %ax,%ax
8100060a:	75 07                	jne    81000613 <_fflush_r+0x3e>
8100060c:	b8 00 00 00 00       	mov    $0x0,%eax
81000611:	eb 15                	jmp    81000628 <_fflush_r+0x53>
81000613:	83 ec 08             	sub    $0x8,%esp
81000616:	53                   	push   %ebx
81000617:	ff 75 08             	pushl  0x8(%ebp)
8100061a:	e8 90 fd ff ff       	call   810003af <__sflush_r>
8100061f:	83 c4 10             	add    $0x10,%esp
81000622:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000625:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000628:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100062b:	c9                   	leave  
8100062c:	c3                   	ret    

8100062d <fflush>:
8100062d:	55                   	push   %ebp
8100062e:	89 e5                	mov    %esp,%ebp
81000630:	83 ec 08             	sub    $0x8,%esp
81000633:	8b 55 08             	mov    0x8(%ebp),%edx
81000636:	85 d2                	test   %edx,%edx
81000638:	75 18                	jne    81000652 <fflush+0x25>
8100063a:	a1 fc 48 00 81       	mov    0x810048fc,%eax
8100063f:	83 ec 08             	sub    $0x8,%esp
81000642:	68 d5 05 00 81       	push   $0x810005d5
81000647:	50                   	push   %eax
81000648:	e8 bf 09 00 00       	call   8100100c <_fwalk_reent>
8100064d:	83 c4 10             	add    $0x10,%esp
81000650:	eb 12                	jmp    81000664 <fflush+0x37>
81000652:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81000657:	83 ec 08             	sub    $0x8,%esp
8100065a:	52                   	push   %edx
8100065b:	50                   	push   %eax
8100065c:	e8 74 ff ff ff       	call   810005d5 <_fflush_r>
81000661:	83 c4 10             	add    $0x10,%esp
81000664:	c9                   	leave  
81000665:	c3                   	ret    

81000666 <std>:
81000666:	55                   	push   %ebp
81000667:	89 e5                	mov    %esp,%ebp
81000669:	83 ec 08             	sub    $0x8,%esp
8100066c:	8b 45 08             	mov    0x8(%ebp),%eax
8100066f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000675:	8b 45 08             	mov    0x8(%ebp),%eax
81000678:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8100067f:	8b 45 08             	mov    0x8(%ebp),%eax
81000682:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000689:	8b 45 0c             	mov    0xc(%ebp),%eax
8100068c:	89 c2                	mov    %eax,%edx
8100068e:	8b 45 08             	mov    0x8(%ebp),%eax
81000691:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000695:	8b 45 08             	mov    0x8(%ebp),%eax
81000698:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100069f:	8b 45 10             	mov    0x10(%ebp),%eax
810006a2:	89 c2                	mov    %eax,%edx
810006a4:	8b 45 08             	mov    0x8(%ebp),%eax
810006a7:	66 89 50 0e          	mov    %dx,0xe(%eax)
810006ab:	8b 45 08             	mov    0x8(%ebp),%eax
810006ae:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810006b5:	8b 45 08             	mov    0x8(%ebp),%eax
810006b8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810006bf:	8b 45 08             	mov    0x8(%ebp),%eax
810006c2:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810006c9:	8b 45 08             	mov    0x8(%ebp),%eax
810006cc:	83 c0 5c             	add    $0x5c,%eax
810006cf:	83 ec 04             	sub    $0x4,%esp
810006d2:	6a 08                	push   $0x8
810006d4:	6a 00                	push   $0x0
810006d6:	50                   	push   %eax
810006d7:	e8 16 15 00 00       	call   81001bf2 <memset>
810006dc:	83 c4 10             	add    $0x10,%esp
810006df:	8b 45 08             	mov    0x8(%ebp),%eax
810006e2:	8b 55 08             	mov    0x8(%ebp),%edx
810006e5:	89 50 1c             	mov    %edx,0x1c(%eax)
810006e8:	8b 45 08             	mov    0x8(%ebp),%eax
810006eb:	c7 40 20 a8 1d 00 81 	movl   $0x81001da8,0x20(%eax)
810006f2:	8b 45 08             	mov    0x8(%ebp),%eax
810006f5:	c7 40 24 f6 1d 00 81 	movl   $0x81001df6,0x24(%eax)
810006fc:	8b 45 08             	mov    0x8(%ebp),%eax
810006ff:	c7 40 28 51 1e 00 81 	movl   $0x81001e51,0x28(%eax)
81000706:	8b 45 08             	mov    0x8(%ebp),%eax
81000709:	c7 40 2c 9b 1e 00 81 	movl   $0x81001e9b,0x2c(%eax)
81000710:	90                   	nop
81000711:	c9                   	leave  
81000712:	c3                   	ret    

81000713 <stdin_init>:
81000713:	55                   	push   %ebp
81000714:	89 e5                	mov    %esp,%ebp
81000716:	83 ec 08             	sub    $0x8,%esp
81000719:	83 ec 04             	sub    $0x4,%esp
8100071c:	6a 00                	push   $0x0
8100071e:	6a 04                	push   $0x4
81000720:	ff 75 08             	pushl  0x8(%ebp)
81000723:	e8 3e ff ff ff       	call   81000666 <std>
81000728:	83 c4 10             	add    $0x10,%esp
8100072b:	90                   	nop
8100072c:	c9                   	leave  
8100072d:	c3                   	ret    

8100072e <stdout_init>:
8100072e:	55                   	push   %ebp
8100072f:	89 e5                	mov    %esp,%ebp
81000731:	83 ec 08             	sub    $0x8,%esp
81000734:	83 ec 04             	sub    $0x4,%esp
81000737:	6a 01                	push   $0x1
81000739:	6a 09                	push   $0x9
8100073b:	ff 75 08             	pushl  0x8(%ebp)
8100073e:	e8 23 ff ff ff       	call   81000666 <std>
81000743:	83 c4 10             	add    $0x10,%esp
81000746:	90                   	nop
81000747:	c9                   	leave  
81000748:	c3                   	ret    

81000749 <stderr_init>:
81000749:	55                   	push   %ebp
8100074a:	89 e5                	mov    %esp,%ebp
8100074c:	83 ec 08             	sub    $0x8,%esp
8100074f:	83 ec 04             	sub    $0x4,%esp
81000752:	6a 02                	push   $0x2
81000754:	6a 12                	push   $0x12
81000756:	ff 75 08             	pushl  0x8(%ebp)
81000759:	e8 08 ff ff ff       	call   81000666 <std>
8100075e:	83 c4 10             	add    $0x10,%esp
81000761:	90                   	nop
81000762:	c9                   	leave  
81000763:	c3                   	ret    

81000764 <__sfmoreglue>:
81000764:	55                   	push   %ebp
81000765:	89 e5                	mov    %esp,%ebp
81000767:	53                   	push   %ebx
81000768:	83 ec 14             	sub    $0x14,%esp
8100076b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100076e:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000771:	6b c0 68             	imul   $0x68,%eax,%eax
81000774:	83 c0 74             	add    $0x74,%eax
81000777:	83 ec 08             	sub    $0x8,%esp
8100077a:	50                   	push   %eax
8100077b:	ff 75 08             	pushl  0x8(%ebp)
8100077e:	e8 4d 0c 00 00       	call   810013d0 <_malloc_r>
81000783:	83 c4 10             	add    $0x10,%esp
81000786:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000789:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100078d:	75 07                	jne    81000796 <__sfmoreglue+0x32>
8100078f:	b8 00 00 00 00       	mov    $0x0,%eax
81000794:	eb 38                	jmp    810007ce <__sfmoreglue+0x6a>
81000796:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000799:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100079f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a2:	89 58 04             	mov    %ebx,0x4(%eax)
810007a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a8:	8d 50 0c             	lea    0xc(%eax),%edx
810007ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007ae:	89 50 08             	mov    %edx,0x8(%eax)
810007b1:	89 d8                	mov    %ebx,%eax
810007b3:	6b c0 68             	imul   $0x68,%eax,%eax
810007b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810007b9:	83 c2 0c             	add    $0xc,%edx
810007bc:	83 ec 04             	sub    $0x4,%esp
810007bf:	50                   	push   %eax
810007c0:	6a 00                	push   $0x0
810007c2:	52                   	push   %edx
810007c3:	e8 2a 14 00 00       	call   81001bf2 <memset>
810007c8:	83 c4 10             	add    $0x10,%esp
810007cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810007d1:	c9                   	leave  
810007d2:	c3                   	ret    

810007d3 <__sfp>:
810007d3:	55                   	push   %ebp
810007d4:	89 e5                	mov    %esp,%ebp
810007d6:	83 ec 18             	sub    $0x18,%esp
810007d9:	e8 16 02 00 00       	call   810009f4 <__sfp_lock_acquire>
810007de:	a1 fc 48 00 81       	mov    0x810048fc,%eax
810007e3:	8b 40 38             	mov    0x38(%eax),%eax
810007e6:	85 c0                	test   %eax,%eax
810007e8:	75 11                	jne    810007fb <__sfp+0x28>
810007ea:	a1 fc 48 00 81       	mov    0x810048fc,%eax
810007ef:	83 ec 0c             	sub    $0xc,%esp
810007f2:	50                   	push   %eax
810007f3:	e8 63 01 00 00       	call   8100095b <__sinit>
810007f8:	83 c4 10             	add    $0x10,%esp
810007fb:	a1 fc 48 00 81       	mov    0x810048fc,%eax
81000800:	05 e0 02 00 00       	add    $0x2e0,%eax
81000805:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000808:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100080b:	8b 40 08             	mov    0x8(%eax),%eax
8100080e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000811:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000814:	8b 40 04             	mov    0x4(%eax),%eax
81000817:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100081a:	eb 10                	jmp    8100082c <__sfp+0x59>
8100081c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100081f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000823:	66 85 c0             	test   %ax,%ax
81000826:	74 58                	je     81000880 <__sfp+0xad>
81000828:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100082c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000830:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000834:	79 e6                	jns    8100081c <__sfp+0x49>
81000836:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000839:	8b 00                	mov    (%eax),%eax
8100083b:	85 c0                	test   %eax,%eax
8100083d:	75 1e                	jne    8100085d <__sfp+0x8a>
8100083f:	83 ec 08             	sub    $0x8,%esp
81000842:	6a 04                	push   $0x4
81000844:	ff 75 08             	pushl  0x8(%ebp)
81000847:	e8 18 ff ff ff       	call   81000764 <__sfmoreglue>
8100084c:	83 c4 10             	add    $0x10,%esp
8100084f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000852:	89 02                	mov    %eax,(%edx)
81000854:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000857:	8b 00                	mov    (%eax),%eax
81000859:	85 c0                	test   %eax,%eax
8100085b:	74 0a                	je     81000867 <__sfp+0x94>
8100085d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000860:	8b 00                	mov    (%eax),%eax
81000862:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000865:	eb a1                	jmp    81000808 <__sfp+0x35>
81000867:	90                   	nop
81000868:	e8 8d 01 00 00       	call   810009fa <__sfp_lock_release>
8100086d:	8b 45 08             	mov    0x8(%ebp),%eax
81000870:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000876:	b8 00 00 00 00       	mov    $0x0,%eax
8100087b:	e9 9e 00 00 00       	jmp    8100091e <__sfp+0x14b>
81000880:	90                   	nop
81000881:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000884:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100088a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100088d:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000893:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000896:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100089d:	e8 58 01 00 00       	call   810009fa <__sfp_lock_release>
810008a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810008ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008ae:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810008b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008b8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810008bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008c2:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810008c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008cc:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810008d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008d6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810008dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008e0:	83 c0 5c             	add    $0x5c,%eax
810008e3:	83 ec 04             	sub    $0x4,%esp
810008e6:	6a 08                	push   $0x8
810008e8:	6a 00                	push   $0x0
810008ea:	50                   	push   %eax
810008eb:	e8 02 13 00 00       	call   81001bf2 <memset>
810008f0:	83 c4 10             	add    $0x10,%esp
810008f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008f6:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810008fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000900:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000907:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100090a:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000911:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000914:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100091b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100091e:	c9                   	leave  
8100091f:	c3                   	ret    

81000920 <_cleanup_r>:
81000920:	55                   	push   %ebp
81000921:	89 e5                	mov    %esp,%ebp
81000923:	83 ec 18             	sub    $0x18,%esp
81000926:	c7 45 f4 46 1f 00 81 	movl   $0x81001f46,-0xc(%ebp)
8100092d:	83 ec 08             	sub    $0x8,%esp
81000930:	ff 75 f4             	pushl  -0xc(%ebp)
81000933:	ff 75 08             	pushl  0x8(%ebp)
81000936:	e8 d1 06 00 00       	call   8100100c <_fwalk_reent>
8100093b:	83 c4 10             	add    $0x10,%esp
8100093e:	90                   	nop
8100093f:	c9                   	leave  
81000940:	c3                   	ret    

81000941 <_cleanup>:
81000941:	55                   	push   %ebp
81000942:	89 e5                	mov    %esp,%ebp
81000944:	83 ec 08             	sub    $0x8,%esp
81000947:	a1 fc 48 00 81       	mov    0x810048fc,%eax
8100094c:	83 ec 0c             	sub    $0xc,%esp
8100094f:	50                   	push   %eax
81000950:	e8 cb ff ff ff       	call   81000920 <_cleanup_r>
81000955:	83 c4 10             	add    $0x10,%esp
81000958:	90                   	nop
81000959:	c9                   	leave  
8100095a:	c3                   	ret    

8100095b <__sinit>:
8100095b:	55                   	push   %ebp
8100095c:	89 e5                	mov    %esp,%ebp
8100095e:	83 ec 08             	sub    $0x8,%esp
81000961:	e8 9a 00 00 00       	call   81000a00 <__sinit_lock_acquire>
81000966:	8b 45 08             	mov    0x8(%ebp),%eax
81000969:	8b 40 38             	mov    0x38(%eax),%eax
8100096c:	85 c0                	test   %eax,%eax
8100096e:	74 07                	je     81000977 <__sinit+0x1c>
81000970:	e8 91 00 00 00       	call   81000a06 <__sinit_lock_release>
81000975:	eb 7b                	jmp    810009f2 <__sinit+0x97>
81000977:	8b 45 08             	mov    0x8(%ebp),%eax
8100097a:	c7 40 3c 20 09 00 81 	movl   $0x81000920,0x3c(%eax)
81000981:	8b 45 08             	mov    0x8(%ebp),%eax
81000984:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100098b:	00 00 00 
8100098e:	8b 45 08             	mov    0x8(%ebp),%eax
81000991:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000998:	00 00 00 
8100099b:	8b 45 08             	mov    0x8(%ebp),%eax
8100099e:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810009a4:	8b 45 08             	mov    0x8(%ebp),%eax
810009a7:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810009ad:	8b 45 08             	mov    0x8(%ebp),%eax
810009b0:	8b 40 04             	mov    0x4(%eax),%eax
810009b3:	83 ec 0c             	sub    $0xc,%esp
810009b6:	50                   	push   %eax
810009b7:	e8 57 fd ff ff       	call   81000713 <stdin_init>
810009bc:	83 c4 10             	add    $0x10,%esp
810009bf:	8b 45 08             	mov    0x8(%ebp),%eax
810009c2:	8b 40 08             	mov    0x8(%eax),%eax
810009c5:	83 ec 0c             	sub    $0xc,%esp
810009c8:	50                   	push   %eax
810009c9:	e8 60 fd ff ff       	call   8100072e <stdout_init>
810009ce:	83 c4 10             	add    $0x10,%esp
810009d1:	8b 45 08             	mov    0x8(%ebp),%eax
810009d4:	8b 40 0c             	mov    0xc(%eax),%eax
810009d7:	83 ec 0c             	sub    $0xc,%esp
810009da:	50                   	push   %eax
810009db:	e8 69 fd ff ff       	call   81000749 <stderr_init>
810009e0:	83 c4 10             	add    $0x10,%esp
810009e3:	8b 45 08             	mov    0x8(%ebp),%eax
810009e6:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810009ed:	e8 14 00 00 00       	call   81000a06 <__sinit_lock_release>
810009f2:	c9                   	leave  
810009f3:	c3                   	ret    

810009f4 <__sfp_lock_acquire>:
810009f4:	55                   	push   %ebp
810009f5:	89 e5                	mov    %esp,%ebp
810009f7:	90                   	nop
810009f8:	5d                   	pop    %ebp
810009f9:	c3                   	ret    

810009fa <__sfp_lock_release>:
810009fa:	55                   	push   %ebp
810009fb:	89 e5                	mov    %esp,%ebp
810009fd:	90                   	nop
810009fe:	5d                   	pop    %ebp
810009ff:	c3                   	ret    

81000a00 <__sinit_lock_acquire>:
81000a00:	55                   	push   %ebp
81000a01:	89 e5                	mov    %esp,%ebp
81000a03:	90                   	nop
81000a04:	5d                   	pop    %ebp
81000a05:	c3                   	ret    

81000a06 <__sinit_lock_release>:
81000a06:	55                   	push   %ebp
81000a07:	89 e5                	mov    %esp,%ebp
81000a09:	90                   	nop
81000a0a:	5d                   	pop    %ebp
81000a0b:	c3                   	ret    

81000a0c <__fp_lock>:
81000a0c:	55                   	push   %ebp
81000a0d:	89 e5                	mov    %esp,%ebp
81000a0f:	b8 00 00 00 00       	mov    $0x0,%eax
81000a14:	5d                   	pop    %ebp
81000a15:	c3                   	ret    

81000a16 <__fp_unlock>:
81000a16:	55                   	push   %ebp
81000a17:	89 e5                	mov    %esp,%ebp
81000a19:	b8 00 00 00 00       	mov    $0x0,%eax
81000a1e:	5d                   	pop    %ebp
81000a1f:	c3                   	ret    

81000a20 <__fp_lock_all>:
81000a20:	55                   	push   %ebp
81000a21:	89 e5                	mov    %esp,%ebp
81000a23:	83 ec 08             	sub    $0x8,%esp
81000a26:	e8 c9 ff ff ff       	call   810009f4 <__sfp_lock_acquire>
81000a2b:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81000a30:	83 ec 08             	sub    $0x8,%esp
81000a33:	68 0c 0a 00 81       	push   $0x81000a0c
81000a38:	50                   	push   %eax
81000a39:	e8 66 05 00 00       	call   81000fa4 <_fwalk>
81000a3e:	83 c4 10             	add    $0x10,%esp
81000a41:	90                   	nop
81000a42:	c9                   	leave  
81000a43:	c3                   	ret    

81000a44 <__fp_unlock_all>:
81000a44:	55                   	push   %ebp
81000a45:	89 e5                	mov    %esp,%ebp
81000a47:	83 ec 08             	sub    $0x8,%esp
81000a4a:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81000a4f:	83 ec 08             	sub    $0x8,%esp
81000a52:	68 16 0a 00 81       	push   $0x81000a16
81000a57:	50                   	push   %eax
81000a58:	e8 47 05 00 00       	call   81000fa4 <_fwalk>
81000a5d:	83 c4 10             	add    $0x10,%esp
81000a60:	e8 95 ff ff ff       	call   810009fa <__sfp_lock_release>
81000a65:	90                   	nop
81000a66:	c9                   	leave  
81000a67:	c3                   	ret    

81000a68 <_free_r>:
81000a68:	55                   	push   %ebp
81000a69:	89 e5                	mov    %esp,%ebp
81000a6b:	53                   	push   %ebx
81000a6c:	83 ec 34             	sub    $0x34,%esp
81000a6f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81000a73:	0f 84 c4 03 00 00    	je     81000e3d <_free_r+0x3d5>
81000a79:	83 ec 0c             	sub    $0xc,%esp
81000a7c:	ff 75 08             	pushl  0x8(%ebp)
81000a7f:	e8 f6 11 00 00       	call   81001c7a <__malloc_lock>
81000a84:	83 c4 10             	add    $0x10,%esp
81000a87:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a8a:	83 e8 08             	sub    $0x8,%eax
81000a8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000a90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a93:	8b 40 04             	mov    0x4(%eax),%eax
81000a96:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000a99:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000a9c:	83 e0 fe             	and    $0xfffffffe,%eax
81000a9f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000aa2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000aa5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000aa8:	01 d0                	add    %edx,%eax
81000aaa:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000aad:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ab0:	8b 40 04             	mov    0x4(%eax),%eax
81000ab3:	83 e0 fc             	and    $0xfffffffc,%eax
81000ab6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000ab9:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000abe:	8b 40 08             	mov    0x8(%eax),%eax
81000ac1:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81000ac4:	0f 85 94 00 00 00    	jne    81000b5e <_free_r+0xf6>
81000aca:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000acd:	01 45 f0             	add    %eax,-0x10(%ebp)
81000ad0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000ad3:	83 e0 01             	and    $0x1,%eax
81000ad6:	85 c0                	test   %eax,%eax
81000ad8:	75 3a                	jne    81000b14 <_free_r+0xac>
81000ada:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000add:	8b 00                	mov    (%eax),%eax
81000adf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000ae2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000ae5:	f7 d8                	neg    %eax
81000ae7:	01 45 f4             	add    %eax,-0xc(%ebp)
81000aea:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000aed:	01 45 f0             	add    %eax,-0x10(%ebp)
81000af0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000af3:	8b 40 0c             	mov    0xc(%eax),%eax
81000af6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000af9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000afc:	8b 40 08             	mov    0x8(%eax),%eax
81000aff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000b02:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000b05:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000b08:	89 50 0c             	mov    %edx,0xc(%eax)
81000b0b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b0e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000b11:	89 50 08             	mov    %edx,0x8(%eax)
81000b14:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000b17:	83 c8 01             	or     $0x1,%eax
81000b1a:	89 c2                	mov    %eax,%edx
81000b1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b1f:	89 50 04             	mov    %edx,0x4(%eax)
81000b22:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81000b27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b2a:	89 42 08             	mov    %eax,0x8(%edx)
81000b2d:	a1 e8 54 00 81       	mov    0x810054e8,%eax
81000b32:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81000b35:	72 14                	jb     81000b4b <_free_r+0xe3>
81000b37:	a1 a0 5a 00 81       	mov    0x81005aa0,%eax
81000b3c:	83 ec 08             	sub    $0x8,%esp
81000b3f:	50                   	push   %eax
81000b40:	ff 75 08             	pushl  0x8(%ebp)
81000b43:	e8 fb 02 00 00       	call   81000e43 <_malloc_trim_r>
81000b48:	83 c4 10             	add    $0x10,%esp
81000b4b:	83 ec 0c             	sub    $0xc,%esp
81000b4e:	ff 75 08             	pushl  0x8(%ebp)
81000b51:	e8 2a 11 00 00       	call   81001c80 <__malloc_unlock>
81000b56:	83 c4 10             	add    $0x10,%esp
81000b59:	e9 e0 02 00 00       	jmp    81000e3e <_free_r+0x3d6>
81000b5e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000b61:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b64:	89 50 04             	mov    %edx,0x4(%eax)
81000b67:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000b6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000b71:	83 e0 01             	and    $0x1,%eax
81000b74:	85 c0                	test   %eax,%eax
81000b76:	75 52                	jne    81000bca <_free_r+0x162>
81000b78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b7b:	8b 00                	mov    (%eax),%eax
81000b7d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000b80:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000b83:	f7 d8                	neg    %eax
81000b85:	01 45 f4             	add    %eax,-0xc(%ebp)
81000b88:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000b8b:	01 45 f0             	add    %eax,-0x10(%ebp)
81000b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b91:	8b 40 08             	mov    0x8(%eax),%eax
81000b94:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81000b99:	39 d0                	cmp    %edx,%eax
81000b9b:	75 09                	jne    81000ba6 <_free_r+0x13e>
81000b9d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000ba4:	eb 24                	jmp    81000bca <_free_r+0x162>
81000ba6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ba9:	8b 40 0c             	mov    0xc(%eax),%eax
81000bac:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000baf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bb2:	8b 40 08             	mov    0x8(%eax),%eax
81000bb5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000bb8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000bbb:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000bbe:	89 50 0c             	mov    %edx,0xc(%eax)
81000bc1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000bc4:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000bc7:	89 50 08             	mov    %edx,0x8(%eax)
81000bca:	8b 55 dc             	mov    -0x24(%ebp),%edx
81000bcd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bd0:	01 d0                	add    %edx,%eax
81000bd2:	8b 40 04             	mov    0x4(%eax),%eax
81000bd5:	83 e0 01             	and    $0x1,%eax
81000bd8:	85 c0                	test   %eax,%eax
81000bda:	75 75                	jne    81000c51 <_free_r+0x1e9>
81000bdc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bdf:	01 45 f0             	add    %eax,-0x10(%ebp)
81000be2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000be6:	75 45                	jne    81000c2d <_free_r+0x1c5>
81000be8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000beb:	8b 40 08             	mov    0x8(%eax),%eax
81000bee:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81000bf3:	39 d0                	cmp    %edx,%eax
81000bf5:	75 36                	jne    81000c2d <_free_r+0x1c5>
81000bf7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000bfe:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
81000c03:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000c06:	89 50 0c             	mov    %edx,0xc(%eax)
81000c09:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81000c0e:	8b 40 0c             	mov    0xc(%eax),%eax
81000c11:	89 42 08             	mov    %eax,0x8(%edx)
81000c14:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81000c19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c1c:	89 50 0c             	mov    %edx,0xc(%eax)
81000c1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c22:	8b 50 0c             	mov    0xc(%eax),%edx
81000c25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c28:	89 50 08             	mov    %edx,0x8(%eax)
81000c2b:	eb 24                	jmp    81000c51 <_free_r+0x1e9>
81000c2d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c30:	8b 40 0c             	mov    0xc(%eax),%eax
81000c33:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000c36:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c39:	8b 40 08             	mov    0x8(%eax),%eax
81000c3c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000c3f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000c42:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000c45:	89 50 0c             	mov    %edx,0xc(%eax)
81000c48:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000c4b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000c4e:	89 50 08             	mov    %edx,0x8(%eax)
81000c51:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c54:	83 c8 01             	or     $0x1,%eax
81000c57:	89 c2                	mov    %eax,%edx
81000c59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c5c:	89 50 04             	mov    %edx,0x4(%eax)
81000c5f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000c62:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c65:	01 c2                	add    %eax,%edx
81000c67:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c6a:	89 02                	mov    %eax,(%edx)
81000c6c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c70:	0f 85 b7 01 00 00    	jne    81000e2d <_free_r+0x3c5>
81000c76:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81000c7d:	77 7f                	ja     81000cfe <_free_r+0x296>
81000c7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c82:	c1 e8 03             	shr    $0x3,%eax
81000c85:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000c88:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000c8d:	8b 58 04             	mov    0x4(%eax),%ebx
81000c90:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000c93:	8d 50 03             	lea    0x3(%eax),%edx
81000c96:	85 c0                	test   %eax,%eax
81000c98:	0f 48 c2             	cmovs  %edx,%eax
81000c9b:	c1 f8 02             	sar    $0x2,%eax
81000c9e:	ba 01 00 00 00       	mov    $0x1,%edx
81000ca3:	89 c1                	mov    %eax,%ecx
81000ca5:	d3 e2                	shl    %cl,%edx
81000ca7:	89 d0                	mov    %edx,%eax
81000ca9:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81000cae:	09 d8                	or     %ebx,%eax
81000cb0:	89 42 04             	mov    %eax,0x4(%edx)
81000cb3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000cb6:	83 c0 01             	add    $0x1,%eax
81000cb9:	01 c0                	add    %eax,%eax
81000cbb:	c1 e0 02             	shl    $0x2,%eax
81000cbe:	05 e0 50 00 81       	add    $0x810050e0,%eax
81000cc3:	83 e8 08             	sub    $0x8,%eax
81000cc6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000cc9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ccc:	8b 40 08             	mov    0x8(%eax),%eax
81000ccf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000cd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cd5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000cd8:	89 50 0c             	mov    %edx,0xc(%eax)
81000cdb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cde:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000ce1:	89 50 08             	mov    %edx,0x8(%eax)
81000ce4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ce7:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000cea:	89 50 08             	mov    %edx,0x8(%eax)
81000ced:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000cf0:	8b 50 08             	mov    0x8(%eax),%edx
81000cf3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000cf6:	89 50 0c             	mov    %edx,0xc(%eax)
81000cf9:	e9 2f 01 00 00       	jmp    81000e2d <_free_r+0x3c5>
81000cfe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d01:	c1 e8 09             	shr    $0x9,%eax
81000d04:	85 c0                	test   %eax,%eax
81000d06:	75 08                	jne    81000d10 <_free_r+0x2a8>
81000d08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d0b:	c1 e8 03             	shr    $0x3,%eax
81000d0e:	eb 77                	jmp    81000d87 <_free_r+0x31f>
81000d10:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d13:	c1 e8 09             	shr    $0x9,%eax
81000d16:	83 f8 04             	cmp    $0x4,%eax
81000d19:	77 0b                	ja     81000d26 <_free_r+0x2be>
81000d1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d1e:	c1 e8 06             	shr    $0x6,%eax
81000d21:	83 c0 38             	add    $0x38,%eax
81000d24:	eb 61                	jmp    81000d87 <_free_r+0x31f>
81000d26:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d29:	c1 e8 09             	shr    $0x9,%eax
81000d2c:	83 f8 14             	cmp    $0x14,%eax
81000d2f:	77 0b                	ja     81000d3c <_free_r+0x2d4>
81000d31:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d34:	c1 e8 09             	shr    $0x9,%eax
81000d37:	83 c0 5b             	add    $0x5b,%eax
81000d3a:	eb 4b                	jmp    81000d87 <_free_r+0x31f>
81000d3c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d3f:	c1 e8 09             	shr    $0x9,%eax
81000d42:	83 f8 54             	cmp    $0x54,%eax
81000d45:	77 0b                	ja     81000d52 <_free_r+0x2ea>
81000d47:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d4a:	c1 e8 0c             	shr    $0xc,%eax
81000d4d:	83 c0 6e             	add    $0x6e,%eax
81000d50:	eb 35                	jmp    81000d87 <_free_r+0x31f>
81000d52:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d55:	c1 e8 09             	shr    $0x9,%eax
81000d58:	3d 54 01 00 00       	cmp    $0x154,%eax
81000d5d:	77 0b                	ja     81000d6a <_free_r+0x302>
81000d5f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d62:	c1 e8 0f             	shr    $0xf,%eax
81000d65:	83 c0 77             	add    $0x77,%eax
81000d68:	eb 1d                	jmp    81000d87 <_free_r+0x31f>
81000d6a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d6d:	c1 e8 09             	shr    $0x9,%eax
81000d70:	3d 54 05 00 00       	cmp    $0x554,%eax
81000d75:	77 0b                	ja     81000d82 <_free_r+0x31a>
81000d77:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d7a:	c1 e8 12             	shr    $0x12,%eax
81000d7d:	83 c0 7c             	add    $0x7c,%eax
81000d80:	eb 05                	jmp    81000d87 <_free_r+0x31f>
81000d82:	b8 7e 00 00 00       	mov    $0x7e,%eax
81000d87:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000d8a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000d8d:	83 c0 01             	add    $0x1,%eax
81000d90:	01 c0                	add    %eax,%eax
81000d92:	c1 e0 02             	shl    $0x2,%eax
81000d95:	05 e0 50 00 81       	add    $0x810050e0,%eax
81000d9a:	83 e8 08             	sub    $0x8,%eax
81000d9d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000da0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000da3:	8b 40 08             	mov    0x8(%eax),%eax
81000da6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000da9:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000dac:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81000daf:	75 36                	jne    81000de7 <_free_r+0x37f>
81000db1:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000db6:	8b 58 04             	mov    0x4(%eax),%ebx
81000db9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000dbc:	8d 50 03             	lea    0x3(%eax),%edx
81000dbf:	85 c0                	test   %eax,%eax
81000dc1:	0f 48 c2             	cmovs  %edx,%eax
81000dc4:	c1 f8 02             	sar    $0x2,%eax
81000dc7:	ba 01 00 00 00       	mov    $0x1,%edx
81000dcc:	89 c1                	mov    %eax,%ecx
81000dce:	d3 e2                	shl    %cl,%edx
81000dd0:	89 d0                	mov    %edx,%eax
81000dd2:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81000dd7:	09 d8                	or     %ebx,%eax
81000dd9:	89 42 04             	mov    %eax,0x4(%edx)
81000ddc:	eb 28                	jmp    81000e06 <_free_r+0x39e>
81000dde:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000de1:	8b 40 08             	mov    0x8(%eax),%eax
81000de4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000de7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000dea:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81000ded:	74 0e                	je     81000dfd <_free_r+0x395>
81000def:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000df2:	8b 40 04             	mov    0x4(%eax),%eax
81000df5:	83 e0 fc             	and    $0xfffffffc,%eax
81000df8:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81000dfb:	72 e1                	jb     81000dde <_free_r+0x376>
81000dfd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e00:	8b 40 0c             	mov    0xc(%eax),%eax
81000e03:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e09:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000e0c:	89 50 0c             	mov    %edx,0xc(%eax)
81000e0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e12:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000e15:	89 50 08             	mov    %edx,0x8(%eax)
81000e18:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e1b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e1e:	89 50 08             	mov    %edx,0x8(%eax)
81000e21:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e24:	8b 50 08             	mov    0x8(%eax),%edx
81000e27:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e2a:	89 50 0c             	mov    %edx,0xc(%eax)
81000e2d:	83 ec 0c             	sub    $0xc,%esp
81000e30:	ff 75 08             	pushl  0x8(%ebp)
81000e33:	e8 48 0e 00 00       	call   81001c80 <__malloc_unlock>
81000e38:	83 c4 10             	add    $0x10,%esp
81000e3b:	eb 01                	jmp    81000e3e <_free_r+0x3d6>
81000e3d:	90                   	nop
81000e3e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000e41:	c9                   	leave  
81000e42:	c3                   	ret    

81000e43 <_malloc_trim_r>:
81000e43:	55                   	push   %ebp
81000e44:	89 e5                	mov    %esp,%ebp
81000e46:	83 ec 28             	sub    $0x28,%esp
81000e49:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81000e50:	83 ec 0c             	sub    $0xc,%esp
81000e53:	ff 75 08             	pushl  0x8(%ebp)
81000e56:	e8 1f 0e 00 00       	call   81001c7a <__malloc_lock>
81000e5b:	83 c4 10             	add    $0x10,%esp
81000e5e:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000e63:	8b 40 08             	mov    0x8(%eax),%eax
81000e66:	8b 40 04             	mov    0x4(%eax),%eax
81000e69:	83 e0 fc             	and    $0xfffffffc,%eax
81000e6c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000e6f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e72:	2b 45 0c             	sub    0xc(%ebp),%eax
81000e75:	89 c2                	mov    %eax,%edx
81000e77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e7a:	01 d0                	add    %edx,%eax
81000e7c:	83 e8 11             	sub    $0x11,%eax
81000e7f:	ba 00 00 00 00       	mov    $0x0,%edx
81000e84:	f7 75 f4             	divl   -0xc(%ebp)
81000e87:	83 e8 01             	sub    $0x1,%eax
81000e8a:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81000e8e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e94:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81000e97:	7d 18                	jge    81000eb1 <_malloc_trim_r+0x6e>
81000e99:	83 ec 0c             	sub    $0xc,%esp
81000e9c:	ff 75 08             	pushl  0x8(%ebp)
81000e9f:	e8 dc 0d 00 00       	call   81001c80 <__malloc_unlock>
81000ea4:	83 c4 10             	add    $0x10,%esp
81000ea7:	b8 00 00 00 00       	mov    $0x0,%eax
81000eac:	e9 f1 00 00 00       	jmp    81000fa2 <_malloc_trim_r+0x15f>
81000eb1:	83 ec 08             	sub    $0x8,%esp
81000eb4:	6a 00                	push   $0x0
81000eb6:	ff 75 08             	pushl  0x8(%ebp)
81000eb9:	e8 aa 0e 00 00       	call   81001d68 <_sbrk_r>
81000ebe:	83 c4 10             	add    $0x10,%esp
81000ec1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000ec4:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000ec9:	8b 50 08             	mov    0x8(%eax),%edx
81000ecc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000ecf:	01 d0                	add    %edx,%eax
81000ed1:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81000ed4:	74 18                	je     81000eee <_malloc_trim_r+0xab>
81000ed6:	83 ec 0c             	sub    $0xc,%esp
81000ed9:	ff 75 08             	pushl  0x8(%ebp)
81000edc:	e8 9f 0d 00 00       	call   81001c80 <__malloc_unlock>
81000ee1:	83 c4 10             	add    $0x10,%esp
81000ee4:	b8 00 00 00 00       	mov    $0x0,%eax
81000ee9:	e9 b4 00 00 00       	jmp    81000fa2 <_malloc_trim_r+0x15f>
81000eee:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ef1:	f7 d8                	neg    %eax
81000ef3:	83 ec 08             	sub    $0x8,%esp
81000ef6:	50                   	push   %eax
81000ef7:	ff 75 08             	pushl  0x8(%ebp)
81000efa:	e8 69 0e 00 00       	call   81001d68 <_sbrk_r>
81000eff:	83 c4 10             	add    $0x10,%esp
81000f02:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000f05:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000f09:	75 61                	jne    81000f6c <_malloc_trim_r+0x129>
81000f0b:	83 ec 08             	sub    $0x8,%esp
81000f0e:	6a 00                	push   $0x0
81000f10:	ff 75 08             	pushl  0x8(%ebp)
81000f13:	e8 50 0e 00 00       	call   81001d68 <_sbrk_r>
81000f18:	83 c4 10             	add    $0x10,%esp
81000f1b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f1e:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000f23:	8b 50 08             	mov    0x8(%eax),%edx
81000f26:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f29:	29 d0                	sub    %edx,%eax
81000f2b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f2e:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81000f32:	7e 23                	jle    81000f57 <_malloc_trim_r+0x114>
81000f34:	8b 15 ec 54 00 81    	mov    0x810054ec,%edx
81000f3a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f3d:	29 d0                	sub    %edx,%eax
81000f3f:	a3 c0 5a 00 81       	mov    %eax,0x81005ac0
81000f44:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f47:	83 c8 01             	or     $0x1,%eax
81000f4a:	89 c2                	mov    %eax,%edx
81000f4c:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000f51:	8b 40 08             	mov    0x8(%eax),%eax
81000f54:	89 50 04             	mov    %edx,0x4(%eax)
81000f57:	83 ec 0c             	sub    $0xc,%esp
81000f5a:	ff 75 08             	pushl  0x8(%ebp)
81000f5d:	e8 1e 0d 00 00       	call   81001c80 <__malloc_unlock>
81000f62:	83 c4 10             	add    $0x10,%esp
81000f65:	b8 00 00 00 00       	mov    $0x0,%eax
81000f6a:	eb 36                	jmp    81000fa2 <_malloc_trim_r+0x15f>
81000f6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f6f:	2b 45 ec             	sub    -0x14(%ebp),%eax
81000f72:	83 c8 01             	or     $0x1,%eax
81000f75:	89 c2                	mov    %eax,%edx
81000f77:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81000f7c:	8b 40 08             	mov    0x8(%eax),%eax
81000f7f:	89 50 04             	mov    %edx,0x4(%eax)
81000f82:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
81000f87:	2b 45 ec             	sub    -0x14(%ebp),%eax
81000f8a:	a3 c0 5a 00 81       	mov    %eax,0x81005ac0
81000f8f:	83 ec 0c             	sub    $0xc,%esp
81000f92:	ff 75 08             	pushl  0x8(%ebp)
81000f95:	e8 e6 0c 00 00       	call   81001c80 <__malloc_unlock>
81000f9a:	83 c4 10             	add    $0x10,%esp
81000f9d:	b8 01 00 00 00       	mov    $0x1,%eax
81000fa2:	c9                   	leave  
81000fa3:	c3                   	ret    

81000fa4 <_fwalk>:
81000fa4:	55                   	push   %ebp
81000fa5:	89 e5                	mov    %esp,%ebp
81000fa7:	57                   	push   %edi
81000fa8:	56                   	push   %esi
81000fa9:	53                   	push   %ebx
81000faa:	83 ec 1c             	sub    $0x1c,%esp
81000fad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000fb4:	8b 45 08             	mov    0x8(%ebp),%eax
81000fb7:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000fbd:	eb 3e                	jmp    81000ffd <_fwalk+0x59>
81000fbf:	8b 5e 08             	mov    0x8(%esi),%ebx
81000fc2:	8b 7e 04             	mov    0x4(%esi),%edi
81000fc5:	eb 2d                	jmp    81000ff4 <_fwalk+0x50>
81000fc7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fcb:	66 85 c0             	test   %ax,%ax
81000fce:	74 21                	je     81000ff1 <_fwalk+0x4d>
81000fd0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fd4:	66 83 f8 01          	cmp    $0x1,%ax
81000fd8:	74 17                	je     81000ff1 <_fwalk+0x4d>
81000fda:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000fde:	66 83 f8 ff          	cmp    $0xffff,%ax
81000fe2:	74 0d                	je     81000ff1 <_fwalk+0x4d>
81000fe4:	83 ec 0c             	sub    $0xc,%esp
81000fe7:	53                   	push   %ebx
81000fe8:	ff 55 0c             	call   *0xc(%ebp)
81000feb:	83 c4 10             	add    $0x10,%esp
81000fee:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ff1:	83 c3 68             	add    $0x68,%ebx
81000ff4:	83 ef 01             	sub    $0x1,%edi
81000ff7:	85 ff                	test   %edi,%edi
81000ff9:	79 cc                	jns    81000fc7 <_fwalk+0x23>
81000ffb:	8b 36                	mov    (%esi),%esi
81000ffd:	85 f6                	test   %esi,%esi
81000fff:	75 be                	jne    81000fbf <_fwalk+0x1b>
81001001:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001004:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001007:	5b                   	pop    %ebx
81001008:	5e                   	pop    %esi
81001009:	5f                   	pop    %edi
8100100a:	5d                   	pop    %ebp
8100100b:	c3                   	ret    

8100100c <_fwalk_reent>:
8100100c:	55                   	push   %ebp
8100100d:	89 e5                	mov    %esp,%ebp
8100100f:	57                   	push   %edi
81001010:	56                   	push   %esi
81001011:	53                   	push   %ebx
81001012:	83 ec 1c             	sub    $0x1c,%esp
81001015:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100101c:	8b 45 08             	mov    0x8(%ebp),%eax
8100101f:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001025:	eb 41                	jmp    81001068 <_fwalk_reent+0x5c>
81001027:	8b 5e 08             	mov    0x8(%esi),%ebx
8100102a:	8b 7e 04             	mov    0x4(%esi),%edi
8100102d:	eb 30                	jmp    8100105f <_fwalk_reent+0x53>
8100102f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001033:	66 85 c0             	test   %ax,%ax
81001036:	74 24                	je     8100105c <_fwalk_reent+0x50>
81001038:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100103c:	66 83 f8 01          	cmp    $0x1,%ax
81001040:	74 1a                	je     8100105c <_fwalk_reent+0x50>
81001042:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001046:	66 83 f8 ff          	cmp    $0xffff,%ax
8100104a:	74 10                	je     8100105c <_fwalk_reent+0x50>
8100104c:	83 ec 08             	sub    $0x8,%esp
8100104f:	53                   	push   %ebx
81001050:	ff 75 08             	pushl  0x8(%ebp)
81001053:	ff 55 0c             	call   *0xc(%ebp)
81001056:	83 c4 10             	add    $0x10,%esp
81001059:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100105c:	83 c3 68             	add    $0x68,%ebx
8100105f:	83 ef 01             	sub    $0x1,%edi
81001062:	85 ff                	test   %edi,%edi
81001064:	79 c9                	jns    8100102f <_fwalk_reent+0x23>
81001066:	8b 36                	mov    (%esi),%esi
81001068:	85 f6                	test   %esi,%esi
8100106a:	75 bb                	jne    81001027 <_fwalk_reent+0x1b>
8100106c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100106f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001072:	5b                   	pop    %ebx
81001073:	5e                   	pop    %esi
81001074:	5f                   	pop    %edi
81001075:	5d                   	pop    %ebp
81001076:	c3                   	ret    

81001077 <_gets_r>:
81001077:	55                   	push   %ebp
81001078:	89 e5                	mov    %esp,%ebp
8100107a:	56                   	push   %esi
8100107b:	53                   	push   %ebx
8100107c:	83 ec 10             	sub    $0x10,%esp
8100107f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001082:	8b 45 08             	mov    0x8(%ebp),%eax
81001085:	8b 40 04             	mov    0x4(%eax),%eax
81001088:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100108b:	8b 45 08             	mov    0x8(%ebp),%eax
8100108e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001091:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001095:	74 34                	je     810010cb <_gets_r+0x54>
81001097:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100109a:	8b 40 38             	mov    0x38(%eax),%eax
8100109d:	85 c0                	test   %eax,%eax
8100109f:	75 2a                	jne    810010cb <_gets_r+0x54>
810010a1:	83 ec 0c             	sub    $0xc,%esp
810010a4:	ff 75 f0             	pushl  -0x10(%ebp)
810010a7:	e8 af f8 ff ff       	call   8100095b <__sinit>
810010ac:	83 c4 10             	add    $0x10,%esp
810010af:	eb 1a                	jmp    810010cb <_gets_r+0x54>
810010b1:	83 fe ff             	cmp    $0xffffffff,%esi
810010b4:	75 0c                	jne    810010c2 <_gets_r+0x4b>
810010b6:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
810010b9:	75 58                	jne    81001113 <_gets_r+0x9c>
810010bb:	b8 00 00 00 00       	mov    $0x0,%eax
810010c0:	eb 58                	jmp    8100111a <_gets_r+0xa3>
810010c2:	89 d8                	mov    %ebx,%eax
810010c4:	8d 58 01             	lea    0x1(%eax),%ebx
810010c7:	89 f2                	mov    %esi,%edx
810010c9:	88 10                	mov    %dl,(%eax)
810010cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ce:	8b 40 04             	mov    0x4(%eax),%eax
810010d1:	8d 50 ff             	lea    -0x1(%eax),%edx
810010d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d7:	89 50 04             	mov    %edx,0x4(%eax)
810010da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010dd:	8b 40 04             	mov    0x4(%eax),%eax
810010e0:	85 c0                	test   %eax,%eax
810010e2:	79 13                	jns    810010f7 <_gets_r+0x80>
810010e4:	83 ec 08             	sub    $0x8,%esp
810010e7:	ff 75 f4             	pushl  -0xc(%ebp)
810010ea:	ff 75 08             	pushl  0x8(%ebp)
810010ed:	e8 f6 0b 00 00       	call   81001ce8 <__srget_r>
810010f2:	83 c4 10             	add    $0x10,%esp
810010f5:	eb 13                	jmp    8100110a <_gets_r+0x93>
810010f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010fa:	8b 00                	mov    (%eax),%eax
810010fc:	8d 48 01             	lea    0x1(%eax),%ecx
810010ff:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001102:	89 0a                	mov    %ecx,(%edx)
81001104:	0f b6 00             	movzbl (%eax),%eax
81001107:	0f b6 c0             	movzbl %al,%eax
8100110a:	89 c6                	mov    %eax,%esi
8100110c:	83 fe 0a             	cmp    $0xa,%esi
8100110f:	75 a0                	jne    810010b1 <_gets_r+0x3a>
81001111:	eb 01                	jmp    81001114 <_gets_r+0x9d>
81001113:	90                   	nop
81001114:	c6 03 00             	movb   $0x0,(%ebx)
81001117:	8b 45 0c             	mov    0xc(%ebp),%eax
8100111a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100111d:	5b                   	pop    %ebx
8100111e:	5e                   	pop    %esi
8100111f:	5d                   	pop    %ebp
81001120:	c3                   	ret    

81001121 <gets>:
81001121:	55                   	push   %ebp
81001122:	89 e5                	mov    %esp,%ebp
81001124:	83 ec 08             	sub    $0x8,%esp
81001127:	a1 c4 50 00 81       	mov    0x810050c4,%eax
8100112c:	83 ec 08             	sub    $0x8,%esp
8100112f:	ff 75 08             	pushl  0x8(%ebp)
81001132:	50                   	push   %eax
81001133:	e8 3f ff ff ff       	call   81001077 <_gets_r>
81001138:	83 c4 10             	add    $0x10,%esp
8100113b:	c9                   	leave  
8100113c:	c3                   	ret    

8100113d <malloc_extend_top>:
8100113d:	55                   	push   %ebp
8100113e:	89 e5                	mov    %esp,%ebp
81001140:	83 ec 38             	sub    $0x38,%esp
81001143:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100114a:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100114f:	8b 40 08             	mov    0x8(%eax),%eax
81001152:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001155:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001158:	8b 40 04             	mov    0x4(%eax),%eax
8100115b:	83 e0 fc             	and    $0xfffffffc,%eax
8100115e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001161:	8b 55 e0             	mov    -0x20(%ebp),%edx
81001164:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001167:	01 d0                	add    %edx,%eax
81001169:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100116c:	8b 15 a0 5a 00 81    	mov    0x81005aa0,%edx
81001172:	8b 45 0c             	mov    0xc(%ebp),%eax
81001175:	01 d0                	add    %edx,%eax
81001177:	83 c0 10             	add    $0x10,%eax
8100117a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100117d:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81001184:	a1 ec 54 00 81       	mov    0x810054ec,%eax
81001189:	83 f8 ff             	cmp    $0xffffffff,%eax
8100118c:	74 15                	je     810011a3 <malloc_extend_top+0x66>
8100118e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001191:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001194:	01 d0                	add    %edx,%eax
81001196:	8d 50 ff             	lea    -0x1(%eax),%edx
81001199:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100119c:	f7 d8                	neg    %eax
8100119e:	21 d0                	and    %edx,%eax
810011a0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810011a3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810011a6:	83 ec 08             	sub    $0x8,%esp
810011a9:	50                   	push   %eax
810011aa:	ff 75 08             	pushl  0x8(%ebp)
810011ad:	e8 b6 0b 00 00       	call   81001d68 <_sbrk_r>
810011b2:	83 c4 10             	add    $0x10,%esp
810011b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011b8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810011bc:	0f 84 0b 02 00 00    	je     810013cd <malloc_extend_top+0x290>
810011c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011c5:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810011c8:	73 0e                	jae    810011d8 <malloc_extend_top+0x9b>
810011ca:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
810011cf:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810011d2:	0f 85 f5 01 00 00    	jne    810013cd <malloc_extend_top+0x290>
810011d8:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
810011dd:	89 c2                	mov    %eax,%edx
810011df:	8b 45 e8             	mov    -0x18(%ebp),%eax
810011e2:	01 d0                	add    %edx,%eax
810011e4:	a3 c0 5a 00 81       	mov    %eax,0x81005ac0
810011e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011ec:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810011ef:	75 30                	jne    81001221 <malloc_extend_top+0xe4>
810011f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810011f4:	8d 50 ff             	lea    -0x1(%eax),%edx
810011f7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810011fa:	21 d0                	and    %edx,%eax
810011fc:	85 c0                	test   %eax,%eax
810011fe:	75 21                	jne    81001221 <malloc_extend_top+0xe4>
81001200:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001203:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001206:	01 d0                	add    %edx,%eax
81001208:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100120b:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001210:	8b 40 08             	mov    0x8(%eax),%eax
81001213:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001216:	83 ca 01             	or     $0x1,%edx
81001219:	89 50 04             	mov    %edx,0x4(%eax)
8100121c:	e9 76 01 00 00       	jmp    81001397 <malloc_extend_top+0x25a>
81001221:	a1 ec 54 00 81       	mov    0x810054ec,%eax
81001226:	83 f8 ff             	cmp    $0xffffffff,%eax
81001229:	75 0a                	jne    81001235 <malloc_extend_top+0xf8>
8100122b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100122e:	a3 ec 54 00 81       	mov    %eax,0x810054ec
81001233:	eb 13                	jmp    81001248 <malloc_extend_top+0x10b>
81001235:	8b 15 c0 5a 00 81    	mov    0x81005ac0,%edx
8100123b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100123e:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001241:	01 d0                	add    %edx,%eax
81001243:	a3 c0 5a 00 81       	mov    %eax,0x81005ac0
81001248:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100124b:	83 c0 08             	add    $0x8,%eax
8100124e:	83 e0 07             	and    $0x7,%eax
81001251:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001254:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001258:	74 13                	je     8100126d <malloc_extend_top+0x130>
8100125a:	b8 08 00 00 00       	mov    $0x8,%eax
8100125f:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001262:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001265:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001268:	01 45 f4             	add    %eax,-0xc(%ebp)
8100126b:	eb 07                	jmp    81001274 <malloc_extend_top+0x137>
8100126d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001274:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001277:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100127a:	01 d0                	add    %edx,%eax
8100127c:	89 c2                	mov    %eax,%edx
8100127e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001281:	83 e8 01             	sub    $0x1,%eax
81001284:	21 c2                	and    %eax,%edx
81001286:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001289:	29 d0                	sub    %edx,%eax
8100128b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100128e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001291:	83 e8 01             	sub    $0x1,%eax
81001294:	21 45 f0             	and    %eax,-0x10(%ebp)
81001297:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100129a:	83 ec 08             	sub    $0x8,%esp
8100129d:	50                   	push   %eax
8100129e:	ff 75 08             	pushl  0x8(%ebp)
810012a1:	e8 c2 0a 00 00       	call   81001d68 <_sbrk_r>
810012a6:	83 c4 10             	add    $0x10,%esp
810012a9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810012ac:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810012b0:	75 28                	jne    810012da <malloc_extend_top+0x19d>
810012b2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810012b9:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810012c0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012c6:	01 d0                	add    %edx,%eax
810012c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810012cb:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810012cf:	74 09                	je     810012da <malloc_extend_top+0x19d>
810012d1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012d4:	83 e8 08             	sub    $0x8,%eax
810012d7:	01 45 ec             	add    %eax,-0x14(%ebp)
810012da:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
810012df:	89 c2                	mov    %eax,%edx
810012e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012e4:	01 d0                	add    %edx,%eax
810012e6:	a3 c0 5a 00 81       	mov    %eax,0x81005ac0
810012eb:	ba e0 50 00 81       	mov    $0x810050e0,%edx
810012f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f3:	89 42 08             	mov    %eax,0x8(%edx)
810012f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012f9:	2b 45 f4             	sub    -0xc(%ebp),%eax
810012fc:	89 c2                	mov    %eax,%edx
810012fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001301:	01 d0                	add    %edx,%eax
81001303:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001306:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100130b:	8b 40 08             	mov    0x8(%eax),%eax
8100130e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001311:	83 ca 01             	or     $0x1,%edx
81001314:	89 50 04             	mov    %edx,0x4(%eax)
81001317:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100131c:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100131f:	74 76                	je     81001397 <malloc_extend_top+0x25a>
81001321:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001325:	77 14                	ja     8100133b <malloc_extend_top+0x1fe>
81001327:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100132c:	8b 40 08             	mov    0x8(%eax),%eax
8100132f:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001336:	e9 93 00 00 00       	jmp    810013ce <malloc_extend_top+0x291>
8100133b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100133e:	83 e8 0c             	sub    $0xc,%eax
81001341:	83 e0 f8             	and    $0xfffffff8,%eax
81001344:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001347:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100134a:	8b 40 04             	mov    0x4(%eax),%eax
8100134d:	83 e0 01             	and    $0x1,%eax
81001350:	0b 45 dc             	or     -0x24(%ebp),%eax
81001353:	89 c2                	mov    %eax,%edx
81001355:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001358:	89 50 04             	mov    %edx,0x4(%eax)
8100135b:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100135e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001361:	01 d0                	add    %edx,%eax
81001363:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100136a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100136d:	8d 50 04             	lea    0x4(%eax),%edx
81001370:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001373:	01 d0                	add    %edx,%eax
81001375:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100137c:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001380:	76 15                	jbe    81001397 <malloc_extend_top+0x25a>
81001382:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001385:	83 c0 08             	add    $0x8,%eax
81001388:	83 ec 08             	sub    $0x8,%esp
8100138b:	50                   	push   %eax
8100138c:	ff 75 08             	pushl  0x8(%ebp)
8100138f:	e8 d4 f6 ff ff       	call   81000a68 <_free_r>
81001394:	83 c4 10             	add    $0x10,%esp
81001397:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
8100139c:	89 c2                	mov    %eax,%edx
8100139e:	a1 a4 5a 00 81       	mov    0x81005aa4,%eax
810013a3:	39 c2                	cmp    %eax,%edx
810013a5:	76 0a                	jbe    810013b1 <malloc_extend_top+0x274>
810013a7:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
810013ac:	a3 a4 5a 00 81       	mov    %eax,0x81005aa4
810013b1:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
810013b6:	89 c2                	mov    %eax,%edx
810013b8:	a1 a8 5a 00 81       	mov    0x81005aa8,%eax
810013bd:	39 c2                	cmp    %eax,%edx
810013bf:	76 0d                	jbe    810013ce <malloc_extend_top+0x291>
810013c1:	a1 c0 5a 00 81       	mov    0x81005ac0,%eax
810013c6:	a3 a8 5a 00 81       	mov    %eax,0x81005aa8
810013cb:	eb 01                	jmp    810013ce <malloc_extend_top+0x291>
810013cd:	90                   	nop
810013ce:	c9                   	leave  
810013cf:	c3                   	ret    

810013d0 <_malloc_r>:
810013d0:	55                   	push   %ebp
810013d1:	89 e5                	mov    %esp,%ebp
810013d3:	53                   	push   %ebx
810013d4:	83 ec 44             	sub    $0x44,%esp
810013d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810013da:	83 c0 0b             	add    $0xb,%eax
810013dd:	83 f8 16             	cmp    $0x16,%eax
810013e0:	76 0b                	jbe    810013ed <_malloc_r+0x1d>
810013e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810013e5:	83 c0 0b             	add    $0xb,%eax
810013e8:	83 e0 f8             	and    $0xfffffff8,%eax
810013eb:	eb 05                	jmp    810013f2 <_malloc_r+0x22>
810013ed:	b8 10 00 00 00       	mov    $0x10,%eax
810013f2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810013f5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013f8:	85 c0                	test   %eax,%eax
810013fa:	78 08                	js     81001404 <_malloc_r+0x34>
810013fc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013ff:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001402:	73 13                	jae    81001417 <_malloc_r+0x47>
81001404:	8b 45 08             	mov    0x8(%ebp),%eax
81001407:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100140d:	b8 00 00 00 00       	mov    $0x0,%eax
81001412:	e9 d6 07 00 00       	jmp    81001bed <_malloc_r+0x81d>
81001417:	83 ec 0c             	sub    $0xc,%esp
8100141a:	ff 75 08             	pushl  0x8(%ebp)
8100141d:	e8 58 08 00 00       	call   81001c7a <__malloc_lock>
81001422:	83 c4 10             	add    $0x10,%esp
81001425:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100142c:	0f 87 b0 00 00 00    	ja     810014e2 <_malloc_r+0x112>
81001432:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001435:	c1 e8 03             	shr    $0x3,%eax
81001438:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100143b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100143e:	83 c0 01             	add    $0x1,%eax
81001441:	01 c0                	add    %eax,%eax
81001443:	c1 e0 02             	shl    $0x2,%eax
81001446:	05 e0 50 00 81       	add    $0x810050e0,%eax
8100144b:	83 e8 08             	sub    $0x8,%eax
8100144e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001451:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001454:	8b 40 0c             	mov    0xc(%eax),%eax
81001457:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100145a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145d:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001460:	75 0d                	jne    8100146f <_malloc_r+0x9f>
81001462:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001466:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001469:	8b 40 0c             	mov    0xc(%eax),%eax
8100146c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100146f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001472:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001475:	74 62                	je     810014d9 <_malloc_r+0x109>
81001477:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100147a:	8b 40 04             	mov    0x4(%eax),%eax
8100147d:	83 e0 fc             	and    $0xfffffffc,%eax
81001480:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001483:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001486:	8b 40 0c             	mov    0xc(%eax),%eax
81001489:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100148c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148f:	8b 40 08             	mov    0x8(%eax),%eax
81001492:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001495:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001498:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100149b:	89 50 0c             	mov    %edx,0xc(%eax)
8100149e:	8b 45 d8             	mov    -0x28(%ebp),%eax
810014a1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810014a4:	89 50 08             	mov    %edx,0x8(%eax)
810014a7:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014aa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014ad:	01 d0                	add    %edx,%eax
810014af:	8b 50 04             	mov    0x4(%eax),%edx
810014b2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014b8:	01 c8                	add    %ecx,%eax
810014ba:	83 ca 01             	or     $0x1,%edx
810014bd:	89 50 04             	mov    %edx,0x4(%eax)
810014c0:	83 ec 0c             	sub    $0xc,%esp
810014c3:	ff 75 08             	pushl  0x8(%ebp)
810014c6:	e8 b5 07 00 00       	call   81001c80 <__malloc_unlock>
810014cb:	83 c4 10             	add    $0x10,%esp
810014ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d1:	83 c0 08             	add    $0x8,%eax
810014d4:	e9 14 07 00 00       	jmp    81001bed <_malloc_r+0x81d>
810014d9:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810014dd:	e9 46 01 00 00       	jmp    81001628 <_malloc_r+0x258>
810014e2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014e5:	c1 e8 09             	shr    $0x9,%eax
810014e8:	85 c0                	test   %eax,%eax
810014ea:	75 08                	jne    810014f4 <_malloc_r+0x124>
810014ec:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014ef:	c1 e8 03             	shr    $0x3,%eax
810014f2:	eb 77                	jmp    8100156b <_malloc_r+0x19b>
810014f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014f7:	c1 e8 09             	shr    $0x9,%eax
810014fa:	83 f8 04             	cmp    $0x4,%eax
810014fd:	77 0b                	ja     8100150a <_malloc_r+0x13a>
810014ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001502:	c1 e8 06             	shr    $0x6,%eax
81001505:	83 c0 38             	add    $0x38,%eax
81001508:	eb 61                	jmp    8100156b <_malloc_r+0x19b>
8100150a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100150d:	c1 e8 09             	shr    $0x9,%eax
81001510:	83 f8 14             	cmp    $0x14,%eax
81001513:	77 0b                	ja     81001520 <_malloc_r+0x150>
81001515:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001518:	c1 e8 09             	shr    $0x9,%eax
8100151b:	83 c0 5b             	add    $0x5b,%eax
8100151e:	eb 4b                	jmp    8100156b <_malloc_r+0x19b>
81001520:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001523:	c1 e8 09             	shr    $0x9,%eax
81001526:	83 f8 54             	cmp    $0x54,%eax
81001529:	77 0b                	ja     81001536 <_malloc_r+0x166>
8100152b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100152e:	c1 e8 0c             	shr    $0xc,%eax
81001531:	83 c0 6e             	add    $0x6e,%eax
81001534:	eb 35                	jmp    8100156b <_malloc_r+0x19b>
81001536:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001539:	c1 e8 09             	shr    $0x9,%eax
8100153c:	3d 54 01 00 00       	cmp    $0x154,%eax
81001541:	77 0b                	ja     8100154e <_malloc_r+0x17e>
81001543:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001546:	c1 e8 0f             	shr    $0xf,%eax
81001549:	83 c0 77             	add    $0x77,%eax
8100154c:	eb 1d                	jmp    8100156b <_malloc_r+0x19b>
8100154e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001551:	c1 e8 09             	shr    $0x9,%eax
81001554:	3d 54 05 00 00       	cmp    $0x554,%eax
81001559:	77 0b                	ja     81001566 <_malloc_r+0x196>
8100155b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100155e:	c1 e8 12             	shr    $0x12,%eax
81001561:	83 c0 7c             	add    $0x7c,%eax
81001564:	eb 05                	jmp    8100156b <_malloc_r+0x19b>
81001566:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100156b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100156e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001571:	83 c0 01             	add    $0x1,%eax
81001574:	01 c0                	add    %eax,%eax
81001576:	c1 e0 02             	shl    $0x2,%eax
81001579:	05 e0 50 00 81       	add    $0x810050e0,%eax
8100157e:	83 e8 08             	sub    $0x8,%eax
81001581:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001584:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001587:	8b 40 0c             	mov    0xc(%eax),%eax
8100158a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100158d:	e9 86 00 00 00       	jmp    81001618 <_malloc_r+0x248>
81001592:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001595:	8b 40 04             	mov    0x4(%eax),%eax
81001598:	83 e0 fc             	and    $0xfffffffc,%eax
8100159b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100159e:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015a1:	2b 45 d0             	sub    -0x30(%ebp),%eax
810015a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810015a7:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810015ab:	7e 06                	jle    810015b3 <_malloc_r+0x1e3>
810015ad:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810015b1:	eb 71                	jmp    81001624 <_malloc_r+0x254>
810015b3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810015b7:	78 56                	js     8100160f <_malloc_r+0x23f>
810015b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015bc:	8b 40 0c             	mov    0xc(%eax),%eax
810015bf:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015c5:	8b 40 08             	mov    0x8(%eax),%eax
810015c8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015ce:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015d1:	89 50 0c             	mov    %edx,0xc(%eax)
810015d4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015d7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015da:	89 50 08             	mov    %edx,0x8(%eax)
810015dd:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e3:	01 d0                	add    %edx,%eax
810015e5:	8b 50 04             	mov    0x4(%eax),%edx
810015e8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810015eb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ee:	01 c8                	add    %ecx,%eax
810015f0:	83 ca 01             	or     $0x1,%edx
810015f3:	89 50 04             	mov    %edx,0x4(%eax)
810015f6:	83 ec 0c             	sub    $0xc,%esp
810015f9:	ff 75 08             	pushl  0x8(%ebp)
810015fc:	e8 7f 06 00 00       	call   81001c80 <__malloc_unlock>
81001601:	83 c4 10             	add    $0x10,%esp
81001604:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001607:	83 c0 08             	add    $0x8,%eax
8100160a:	e9 de 05 00 00       	jmp    81001bed <_malloc_r+0x81d>
8100160f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001612:	8b 40 0c             	mov    0xc(%eax),%eax
81001615:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001618:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100161b:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100161e:	0f 85 6e ff ff ff    	jne    81001592 <_malloc_r+0x1c2>
81001624:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001628:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
8100162d:	8b 40 08             	mov    0x8(%eax),%eax
81001630:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001633:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
81001638:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100163b:	0f 84 9c 02 00 00    	je     810018dd <_malloc_r+0x50d>
81001641:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001644:	8b 40 04             	mov    0x4(%eax),%eax
81001647:	83 e0 fc             	and    $0xfffffffc,%eax
8100164a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100164d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001650:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001653:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001656:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100165a:	7e 7a                	jle    810016d6 <_malloc_r+0x306>
8100165c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100165f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001662:	01 d0                	add    %edx,%eax
81001664:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001667:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100166a:	83 c8 01             	or     $0x1,%eax
8100166d:	89 c2                	mov    %eax,%edx
8100166f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001672:	89 50 04             	mov    %edx,0x4(%eax)
81001675:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
8100167a:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100167d:	89 50 0c             	mov    %edx,0xc(%eax)
81001680:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81001685:	8b 40 0c             	mov    0xc(%eax),%eax
81001688:	89 42 08             	mov    %eax,0x8(%edx)
8100168b:	ba e8 50 00 81       	mov    $0x810050e8,%edx
81001690:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001693:	89 50 0c             	mov    %edx,0xc(%eax)
81001696:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001699:	8b 50 0c             	mov    0xc(%eax),%edx
8100169c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100169f:	89 50 08             	mov    %edx,0x8(%eax)
810016a2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016a5:	83 c8 01             	or     $0x1,%eax
810016a8:	89 c2                	mov    %eax,%edx
810016aa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016ad:	89 50 04             	mov    %edx,0x4(%eax)
810016b0:	8b 55 e8             	mov    -0x18(%ebp),%edx
810016b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016b6:	01 c2                	add    %eax,%edx
810016b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016bb:	89 02                	mov    %eax,(%edx)
810016bd:	83 ec 0c             	sub    $0xc,%esp
810016c0:	ff 75 08             	pushl  0x8(%ebp)
810016c3:	e8 b8 05 00 00       	call   81001c80 <__malloc_unlock>
810016c8:	83 c4 10             	add    $0x10,%esp
810016cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ce:	83 c0 08             	add    $0x8,%eax
810016d1:	e9 17 05 00 00       	jmp    81001bed <_malloc_r+0x81d>
810016d6:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
810016db:	ba e8 50 00 81       	mov    $0x810050e8,%edx
810016e0:	89 50 0c             	mov    %edx,0xc(%eax)
810016e3:	ba e8 50 00 81       	mov    $0x810050e8,%edx
810016e8:	8b 40 0c             	mov    0xc(%eax),%eax
810016eb:	89 42 08             	mov    %eax,0x8(%edx)
810016ee:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810016f2:	78 32                	js     81001726 <_malloc_r+0x356>
810016f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016f7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016fa:	01 d0                	add    %edx,%eax
810016fc:	8b 50 04             	mov    0x4(%eax),%edx
810016ff:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001702:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001705:	01 c8                	add    %ecx,%eax
81001707:	83 ca 01             	or     $0x1,%edx
8100170a:	89 50 04             	mov    %edx,0x4(%eax)
8100170d:	83 ec 0c             	sub    $0xc,%esp
81001710:	ff 75 08             	pushl  0x8(%ebp)
81001713:	e8 68 05 00 00       	call   81001c80 <__malloc_unlock>
81001718:	83 c4 10             	add    $0x10,%esp
8100171b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171e:	83 c0 08             	add    $0x8,%eax
81001721:	e9 c7 04 00 00       	jmp    81001bed <_malloc_r+0x81d>
81001726:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100172d:	77 7f                	ja     810017ae <_malloc_r+0x3de>
8100172f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001732:	c1 e8 03             	shr    $0x3,%eax
81001735:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001738:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100173d:	8b 58 04             	mov    0x4(%eax),%ebx
81001740:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001743:	8d 50 03             	lea    0x3(%eax),%edx
81001746:	85 c0                	test   %eax,%eax
81001748:	0f 48 c2             	cmovs  %edx,%eax
8100174b:	c1 f8 02             	sar    $0x2,%eax
8100174e:	ba 01 00 00 00       	mov    $0x1,%edx
81001753:	89 c1                	mov    %eax,%ecx
81001755:	d3 e2                	shl    %cl,%edx
81001757:	89 d0                	mov    %edx,%eax
81001759:	ba e0 50 00 81       	mov    $0x810050e0,%edx
8100175e:	09 d8                	or     %ebx,%eax
81001760:	89 42 04             	mov    %eax,0x4(%edx)
81001763:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001766:	83 c0 01             	add    $0x1,%eax
81001769:	01 c0                	add    %eax,%eax
8100176b:	c1 e0 02             	shl    $0x2,%eax
8100176e:	05 e0 50 00 81       	add    $0x810050e0,%eax
81001773:	83 e8 08             	sub    $0x8,%eax
81001776:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001779:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100177c:	8b 40 08             	mov    0x8(%eax),%eax
8100177f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001782:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001785:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001788:	89 50 0c             	mov    %edx,0xc(%eax)
8100178b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100178e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001791:	89 50 08             	mov    %edx,0x8(%eax)
81001794:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001797:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100179a:	89 50 08             	mov    %edx,0x8(%eax)
8100179d:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017a0:	8b 50 08             	mov    0x8(%eax),%edx
810017a3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017a6:	89 50 0c             	mov    %edx,0xc(%eax)
810017a9:	e9 2f 01 00 00       	jmp    810018dd <_malloc_r+0x50d>
810017ae:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017b1:	c1 e8 09             	shr    $0x9,%eax
810017b4:	85 c0                	test   %eax,%eax
810017b6:	75 08                	jne    810017c0 <_malloc_r+0x3f0>
810017b8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017bb:	c1 e8 03             	shr    $0x3,%eax
810017be:	eb 77                	jmp    81001837 <_malloc_r+0x467>
810017c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017c3:	c1 e8 09             	shr    $0x9,%eax
810017c6:	83 f8 04             	cmp    $0x4,%eax
810017c9:	77 0b                	ja     810017d6 <_malloc_r+0x406>
810017cb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017ce:	c1 e8 06             	shr    $0x6,%eax
810017d1:	83 c0 38             	add    $0x38,%eax
810017d4:	eb 61                	jmp    81001837 <_malloc_r+0x467>
810017d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017d9:	c1 e8 09             	shr    $0x9,%eax
810017dc:	83 f8 14             	cmp    $0x14,%eax
810017df:	77 0b                	ja     810017ec <_malloc_r+0x41c>
810017e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017e4:	c1 e8 09             	shr    $0x9,%eax
810017e7:	83 c0 5b             	add    $0x5b,%eax
810017ea:	eb 4b                	jmp    81001837 <_malloc_r+0x467>
810017ec:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017ef:	c1 e8 09             	shr    $0x9,%eax
810017f2:	83 f8 54             	cmp    $0x54,%eax
810017f5:	77 0b                	ja     81001802 <_malloc_r+0x432>
810017f7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017fa:	c1 e8 0c             	shr    $0xc,%eax
810017fd:	83 c0 6e             	add    $0x6e,%eax
81001800:	eb 35                	jmp    81001837 <_malloc_r+0x467>
81001802:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001805:	c1 e8 09             	shr    $0x9,%eax
81001808:	3d 54 01 00 00       	cmp    $0x154,%eax
8100180d:	77 0b                	ja     8100181a <_malloc_r+0x44a>
8100180f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001812:	c1 e8 0f             	shr    $0xf,%eax
81001815:	83 c0 77             	add    $0x77,%eax
81001818:	eb 1d                	jmp    81001837 <_malloc_r+0x467>
8100181a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100181d:	c1 e8 09             	shr    $0x9,%eax
81001820:	3d 54 05 00 00       	cmp    $0x554,%eax
81001825:	77 0b                	ja     81001832 <_malloc_r+0x462>
81001827:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100182a:	c1 e8 12             	shr    $0x12,%eax
8100182d:	83 c0 7c             	add    $0x7c,%eax
81001830:	eb 05                	jmp    81001837 <_malloc_r+0x467>
81001832:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001837:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100183a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100183d:	83 c0 01             	add    $0x1,%eax
81001840:	01 c0                	add    %eax,%eax
81001842:	c1 e0 02             	shl    $0x2,%eax
81001845:	05 e0 50 00 81       	add    $0x810050e0,%eax
8100184a:	83 e8 08             	sub    $0x8,%eax
8100184d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001850:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001853:	8b 40 08             	mov    0x8(%eax),%eax
81001856:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001859:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100185c:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100185f:	75 36                	jne    81001897 <_malloc_r+0x4c7>
81001861:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001866:	8b 58 04             	mov    0x4(%eax),%ebx
81001869:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100186c:	8d 50 03             	lea    0x3(%eax),%edx
8100186f:	85 c0                	test   %eax,%eax
81001871:	0f 48 c2             	cmovs  %edx,%eax
81001874:	c1 f8 02             	sar    $0x2,%eax
81001877:	ba 01 00 00 00       	mov    $0x1,%edx
8100187c:	89 c1                	mov    %eax,%ecx
8100187e:	d3 e2                	shl    %cl,%edx
81001880:	89 d0                	mov    %edx,%eax
81001882:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81001887:	09 d8                	or     %ebx,%eax
81001889:	89 42 04             	mov    %eax,0x4(%edx)
8100188c:	eb 28                	jmp    810018b6 <_malloc_r+0x4e6>
8100188e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001891:	8b 40 08             	mov    0x8(%eax),%eax
81001894:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001897:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100189a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100189d:	74 0e                	je     810018ad <_malloc_r+0x4dd>
8100189f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018a2:	8b 40 04             	mov    0x4(%eax),%eax
810018a5:	83 e0 fc             	and    $0xfffffffc,%eax
810018a8:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810018ab:	72 e1                	jb     8100188e <_malloc_r+0x4be>
810018ad:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018b0:	8b 40 0c             	mov    0xc(%eax),%eax
810018b3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810018b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b9:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018bc:	89 50 0c             	mov    %edx,0xc(%eax)
810018bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c2:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018c5:	89 50 08             	mov    %edx,0x8(%eax)
810018c8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018cb:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018ce:	89 50 08             	mov    %edx,0x8(%eax)
810018d1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018d4:	8b 50 08             	mov    0x8(%eax),%edx
810018d7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018da:	89 50 0c             	mov    %edx,0xc(%eax)
810018dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018e0:	8d 50 03             	lea    0x3(%eax),%edx
810018e3:	85 c0                	test   %eax,%eax
810018e5:	0f 48 c2             	cmovs  %edx,%eax
810018e8:	c1 f8 02             	sar    $0x2,%eax
810018eb:	ba 01 00 00 00       	mov    $0x1,%edx
810018f0:	89 c1                	mov    %eax,%ecx
810018f2:	d3 e2                	shl    %cl,%edx
810018f4:	89 d0                	mov    %edx,%eax
810018f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810018f9:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
810018fe:	8b 40 04             	mov    0x4(%eax),%eax
81001901:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001904:	0f 87 13 02 00 00    	ja     81001b1d <_malloc_r+0x74d>
8100190a:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
8100190f:	8b 40 04             	mov    0x4(%eax),%eax
81001912:	23 45 e4             	and    -0x1c(%ebp),%eax
81001915:	85 c0                	test   %eax,%eax
81001917:	75 27                	jne    81001940 <_malloc_r+0x570>
81001919:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100191c:	83 e0 fc             	and    $0xfffffffc,%eax
8100191f:	83 c0 04             	add    $0x4,%eax
81001922:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001925:	d1 65 e4             	shll   -0x1c(%ebp)
81001928:	eb 07                	jmp    81001931 <_malloc_r+0x561>
8100192a:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100192e:	d1 65 e4             	shll   -0x1c(%ebp)
81001931:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001936:	8b 40 04             	mov    0x4(%eax),%eax
81001939:	23 45 e4             	and    -0x1c(%ebp),%eax
8100193c:	85 c0                	test   %eax,%eax
8100193e:	74 ea                	je     8100192a <_malloc_r+0x55a>
81001940:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001943:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001946:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001949:	83 c0 01             	add    $0x1,%eax
8100194c:	01 c0                	add    %eax,%eax
8100194e:	c1 e0 02             	shl    $0x2,%eax
81001951:	05 e0 50 00 81       	add    $0x810050e0,%eax
81001956:	83 e8 08             	sub    $0x8,%eax
81001959:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100195c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100195f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001962:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001965:	8b 40 0c             	mov    0xc(%eax),%eax
81001968:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100196b:	e9 22 01 00 00       	jmp    81001a92 <_malloc_r+0x6c2>
81001970:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001973:	8b 40 04             	mov    0x4(%eax),%eax
81001976:	83 e0 fc             	and    $0xfffffffc,%eax
81001979:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100197c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100197f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001982:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001985:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001989:	0f 8e 9e 00 00 00    	jle    81001a2d <_malloc_r+0x65d>
8100198f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001992:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001995:	01 d0                	add    %edx,%eax
81001997:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100199a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100199d:	83 c8 01             	or     $0x1,%eax
810019a0:	89 c2                	mov    %eax,%edx
810019a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019a5:	89 50 04             	mov    %edx,0x4(%eax)
810019a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ab:	8b 40 0c             	mov    0xc(%eax),%eax
810019ae:	89 45 d8             	mov    %eax,-0x28(%ebp)
810019b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019b4:	8b 40 08             	mov    0x8(%eax),%eax
810019b7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810019ba:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019bd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810019c0:	89 50 0c             	mov    %edx,0xc(%eax)
810019c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810019c6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810019c9:	89 50 08             	mov    %edx,0x8(%eax)
810019cc:	b8 e8 50 00 81       	mov    $0x810050e8,%eax
810019d1:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810019d4:	89 50 0c             	mov    %edx,0xc(%eax)
810019d7:	ba e8 50 00 81       	mov    $0x810050e8,%edx
810019dc:	8b 40 0c             	mov    0xc(%eax),%eax
810019df:	89 42 08             	mov    %eax,0x8(%edx)
810019e2:	ba e8 50 00 81       	mov    $0x810050e8,%edx
810019e7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810019ea:	89 50 0c             	mov    %edx,0xc(%eax)
810019ed:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810019f0:	8b 50 0c             	mov    0xc(%eax),%edx
810019f3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810019f6:	89 50 08             	mov    %edx,0x8(%eax)
810019f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019fc:	83 c8 01             	or     $0x1,%eax
810019ff:	89 c2                	mov    %eax,%edx
81001a01:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001a04:	89 50 04             	mov    %edx,0x4(%eax)
81001a07:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a0a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001a0d:	01 c2                	add    %eax,%edx
81001a0f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a12:	89 02                	mov    %eax,(%edx)
81001a14:	83 ec 0c             	sub    $0xc,%esp
81001a17:	ff 75 08             	pushl  0x8(%ebp)
81001a1a:	e8 61 02 00 00       	call   81001c80 <__malloc_unlock>
81001a1f:	83 c4 10             	add    $0x10,%esp
81001a22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a25:	83 c0 08             	add    $0x8,%eax
81001a28:	e9 c0 01 00 00       	jmp    81001bed <_malloc_r+0x81d>
81001a2d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001a31:	78 56                	js     81001a89 <_malloc_r+0x6b9>
81001a33:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a36:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a39:	01 d0                	add    %edx,%eax
81001a3b:	8b 50 04             	mov    0x4(%eax),%edx
81001a3e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001a41:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a44:	01 c8                	add    %ecx,%eax
81001a46:	83 ca 01             	or     $0x1,%edx
81001a49:	89 50 04             	mov    %edx,0x4(%eax)
81001a4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a4f:	8b 40 0c             	mov    0xc(%eax),%eax
81001a52:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001a55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a58:	8b 40 08             	mov    0x8(%eax),%eax
81001a5b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001a5e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a61:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001a64:	89 50 0c             	mov    %edx,0xc(%eax)
81001a67:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a6a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001a6d:	89 50 08             	mov    %edx,0x8(%eax)
81001a70:	83 ec 0c             	sub    $0xc,%esp
81001a73:	ff 75 08             	pushl  0x8(%ebp)
81001a76:	e8 05 02 00 00       	call   81001c80 <__malloc_unlock>
81001a7b:	83 c4 10             	add    $0x10,%esp
81001a7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a81:	83 c0 08             	add    $0x8,%eax
81001a84:	e9 64 01 00 00       	jmp    81001bed <_malloc_r+0x81d>
81001a89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a8c:	8b 40 0c             	mov    0xc(%eax),%eax
81001a8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a95:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001a98:	0f 85 d2 fe ff ff    	jne    81001970 <_malloc_r+0x5a0>
81001a9e:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001aa2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001aa6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa9:	83 e0 03             	and    $0x3,%eax
81001aac:	85 c0                	test   %eax,%eax
81001aae:	0f 85 ae fe ff ff    	jne    81001962 <_malloc_r+0x592>
81001ab4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ab7:	83 e0 03             	and    $0x3,%eax
81001aba:	85 c0                	test   %eax,%eax
81001abc:	75 19                	jne    81001ad7 <_malloc_r+0x707>
81001abe:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001ac3:	8b 48 04             	mov    0x4(%eax),%ecx
81001ac6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001ac9:	f7 d0                	not    %eax
81001acb:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81001ad0:	21 c8                	and    %ecx,%eax
81001ad2:	89 42 04             	mov    %eax,0x4(%edx)
81001ad5:	eb 13                	jmp    81001aea <_malloc_r+0x71a>
81001ad7:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81001adb:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81001adf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001ae2:	8b 40 08             	mov    0x8(%eax),%eax
81001ae5:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001ae8:	74 ca                	je     81001ab4 <_malloc_r+0x6e4>
81001aea:	d1 65 e4             	shll   -0x1c(%ebp)
81001aed:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001af2:	8b 40 04             	mov    0x4(%eax),%eax
81001af5:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001af8:	77 23                	ja     81001b1d <_malloc_r+0x74d>
81001afa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001afe:	74 1d                	je     81001b1d <_malloc_r+0x74d>
81001b00:	eb 07                	jmp    81001b09 <_malloc_r+0x739>
81001b02:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001b06:	d1 65 e4             	shll   -0x1c(%ebp)
81001b09:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001b0e:	8b 40 04             	mov    0x4(%eax),%eax
81001b11:	23 45 e4             	and    -0x1c(%ebp),%eax
81001b14:	85 c0                	test   %eax,%eax
81001b16:	74 ea                	je     81001b02 <_malloc_r+0x732>
81001b18:	e9 23 fe ff ff       	jmp    81001940 <_malloc_r+0x570>
81001b1d:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001b22:	8b 40 08             	mov    0x8(%eax),%eax
81001b25:	8b 40 04             	mov    0x4(%eax),%eax
81001b28:	83 e0 fc             	and    $0xfffffffc,%eax
81001b2b:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001b2e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b31:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001b36:	8b 40 08             	mov    0x8(%eax),%eax
81001b39:	8b 40 04             	mov    0x4(%eax),%eax
81001b3c:	83 e0 fc             	and    $0xfffffffc,%eax
81001b3f:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001b42:	77 06                	ja     81001b4a <_malloc_r+0x77a>
81001b44:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001b48:	7f 53                	jg     81001b9d <_malloc_r+0x7cd>
81001b4a:	83 ec 08             	sub    $0x8,%esp
81001b4d:	ff 75 d0             	pushl  -0x30(%ebp)
81001b50:	ff 75 08             	pushl  0x8(%ebp)
81001b53:	e8 e5 f5 ff ff       	call   8100113d <malloc_extend_top>
81001b58:	83 c4 10             	add    $0x10,%esp
81001b5b:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001b60:	8b 40 08             	mov    0x8(%eax),%eax
81001b63:	8b 40 04             	mov    0x4(%eax),%eax
81001b66:	83 e0 fc             	and    $0xfffffffc,%eax
81001b69:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001b6c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b6f:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001b74:	8b 40 08             	mov    0x8(%eax),%eax
81001b77:	8b 40 04             	mov    0x4(%eax),%eax
81001b7a:	83 e0 fc             	and    $0xfffffffc,%eax
81001b7d:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001b80:	77 06                	ja     81001b88 <_malloc_r+0x7b8>
81001b82:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001b86:	7f 15                	jg     81001b9d <_malloc_r+0x7cd>
81001b88:	83 ec 0c             	sub    $0xc,%esp
81001b8b:	ff 75 08             	pushl  0x8(%ebp)
81001b8e:	e8 ed 00 00 00       	call   81001c80 <__malloc_unlock>
81001b93:	83 c4 10             	add    $0x10,%esp
81001b96:	b8 00 00 00 00       	mov    $0x0,%eax
81001b9b:	eb 50                	jmp    81001bed <_malloc_r+0x81d>
81001b9d:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001ba2:	8b 40 08             	mov    0x8(%eax),%eax
81001ba5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ba8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001bab:	83 c8 01             	or     $0x1,%eax
81001bae:	89 c2                	mov    %eax,%edx
81001bb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bb3:	89 50 04             	mov    %edx,0x4(%eax)
81001bb6:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81001bbb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001bbe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001bc1:	01 c8                	add    %ecx,%eax
81001bc3:	89 42 08             	mov    %eax,0x8(%edx)
81001bc6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001bc9:	83 c8 01             	or     $0x1,%eax
81001bcc:	89 c2                	mov    %eax,%edx
81001bce:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81001bd3:	8b 40 08             	mov    0x8(%eax),%eax
81001bd6:	89 50 04             	mov    %edx,0x4(%eax)
81001bd9:	83 ec 0c             	sub    $0xc,%esp
81001bdc:	ff 75 08             	pushl  0x8(%ebp)
81001bdf:	e8 9c 00 00 00       	call   81001c80 <__malloc_unlock>
81001be4:	83 c4 10             	add    $0x10,%esp
81001be7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bea:	83 c0 08             	add    $0x8,%eax
81001bed:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001bf0:	c9                   	leave  
81001bf1:	c3                   	ret    

81001bf2 <memset>:
81001bf2:	55                   	push   %ebp
81001bf3:	89 e5                	mov    %esp,%ebp
81001bf5:	57                   	push   %edi
81001bf6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001bf9:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001bfd:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001c00:	fc                   	cld    
81001c01:	83 f9 10             	cmp    $0x10,%ecx
81001c04:	76 69                	jbe    81001c6f <memset+0x7d>
81001c06:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c0c:	74 4c                	je     81001c5a <memset+0x68>
81001c0e:	88 07                	mov    %al,(%edi)
81001c10:	47                   	inc    %edi
81001c11:	49                   	dec    %ecx
81001c12:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c18:	74 40                	je     81001c5a <memset+0x68>
81001c1a:	88 07                	mov    %al,(%edi)
81001c1c:	47                   	inc    %edi
81001c1d:	49                   	dec    %ecx
81001c1e:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c24:	74 34                	je     81001c5a <memset+0x68>
81001c26:	88 07                	mov    %al,(%edi)
81001c28:	47                   	inc    %edi
81001c29:	49                   	dec    %ecx
81001c2a:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c30:	74 28                	je     81001c5a <memset+0x68>
81001c32:	88 07                	mov    %al,(%edi)
81001c34:	47                   	inc    %edi
81001c35:	49                   	dec    %ecx
81001c36:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c3c:	74 1c                	je     81001c5a <memset+0x68>
81001c3e:	88 07                	mov    %al,(%edi)
81001c40:	47                   	inc    %edi
81001c41:	49                   	dec    %ecx
81001c42:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c48:	74 10                	je     81001c5a <memset+0x68>
81001c4a:	88 07                	mov    %al,(%edi)
81001c4c:	47                   	inc    %edi
81001c4d:	49                   	dec    %ecx
81001c4e:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c54:	74 04                	je     81001c5a <memset+0x68>
81001c56:	88 07                	mov    %al,(%edi)
81001c58:	47                   	inc    %edi
81001c59:	49                   	dec    %ecx
81001c5a:	88 c4                	mov    %al,%ah
81001c5c:	89 c2                	mov    %eax,%edx
81001c5e:	c1 e2 10             	shl    $0x10,%edx
81001c61:	09 d0                	or     %edx,%eax
81001c63:	89 ca                	mov    %ecx,%edx
81001c65:	c1 e9 02             	shr    $0x2,%ecx
81001c68:	83 e2 03             	and    $0x3,%edx
81001c6b:	f3 ab                	rep stos %eax,%es:(%edi)
81001c6d:	89 d1                	mov    %edx,%ecx
81001c6f:	f3 aa                	rep stos %al,%es:(%edi)
81001c71:	8b 45 08             	mov    0x8(%ebp),%eax
81001c74:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001c77:	5f                   	pop    %edi
81001c78:	c9                   	leave  
81001c79:	c3                   	ret    

81001c7a <__malloc_lock>:
81001c7a:	55                   	push   %ebp
81001c7b:	89 e5                	mov    %esp,%ebp
81001c7d:	90                   	nop
81001c7e:	5d                   	pop    %ebp
81001c7f:	c3                   	ret    

81001c80 <__malloc_unlock>:
81001c80:	55                   	push   %ebp
81001c81:	89 e5                	mov    %esp,%ebp
81001c83:	90                   	nop
81001c84:	5d                   	pop    %ebp
81001c85:	c3                   	ret    

81001c86 <_iprintf_r>:
81001c86:	55                   	push   %ebp
81001c87:	89 e5                	mov    %esp,%ebp
81001c89:	83 ec 18             	sub    $0x18,%esp
81001c8c:	8d 45 10             	lea    0x10(%ebp),%eax
81001c8f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c92:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001c95:	8b 45 08             	mov    0x8(%ebp),%eax
81001c98:	8b 40 08             	mov    0x8(%eax),%eax
81001c9b:	52                   	push   %edx
81001c9c:	ff 75 0c             	pushl  0xc(%ebp)
81001c9f:	50                   	push   %eax
81001ca0:	ff 75 08             	pushl  0x8(%ebp)
81001ca3:	e8 17 06 00 00       	call   810022bf <_vfiprintf_r>
81001ca8:	83 c4 10             	add    $0x10,%esp
81001cab:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cb1:	c9                   	leave  
81001cb2:	c3                   	ret    

81001cb3 <iprintf>:
81001cb3:	55                   	push   %ebp
81001cb4:	89 e5                	mov    %esp,%ebp
81001cb6:	83 ec 18             	sub    $0x18,%esp
81001cb9:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81001cbe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cc1:	8d 45 0c             	lea    0xc(%ebp),%eax
81001cc4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001cc7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001cca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ccd:	8b 40 08             	mov    0x8(%eax),%eax
81001cd0:	52                   	push   %edx
81001cd1:	ff 75 08             	pushl  0x8(%ebp)
81001cd4:	50                   	push   %eax
81001cd5:	ff 75 f4             	pushl  -0xc(%ebp)
81001cd8:	e8 e2 05 00 00       	call   810022bf <_vfiprintf_r>
81001cdd:	83 c4 10             	add    $0x10,%esp
81001ce0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ce3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ce6:	c9                   	leave  
81001ce7:	c3                   	ret    

81001ce8 <__srget_r>:
81001ce8:	55                   	push   %ebp
81001ce9:	89 e5                	mov    %esp,%ebp
81001ceb:	53                   	push   %ebx
81001cec:	83 ec 14             	sub    $0x14,%esp
81001cef:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001cf2:	8b 45 08             	mov    0x8(%ebp),%eax
81001cf5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cf8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001cfc:	74 18                	je     81001d16 <__srget_r+0x2e>
81001cfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d01:	8b 40 38             	mov    0x38(%eax),%eax
81001d04:	85 c0                	test   %eax,%eax
81001d06:	75 0e                	jne    81001d16 <__srget_r+0x2e>
81001d08:	83 ec 0c             	sub    $0xc,%esp
81001d0b:	ff 75 f4             	pushl  -0xc(%ebp)
81001d0e:	e8 48 ec ff ff       	call   8100095b <__sinit>
81001d13:	83 c4 10             	add    $0x10,%esp
81001d16:	83 ec 08             	sub    $0x8,%esp
81001d19:	53                   	push   %ebx
81001d1a:	ff 75 08             	pushl  0x8(%ebp)
81001d1d:	e8 e7 10 00 00       	call   81002e09 <__srefill_r>
81001d22:	83 c4 10             	add    $0x10,%esp
81001d25:	85 c0                	test   %eax,%eax
81001d27:	75 18                	jne    81001d41 <__srget_r+0x59>
81001d29:	8b 43 04             	mov    0x4(%ebx),%eax
81001d2c:	83 e8 01             	sub    $0x1,%eax
81001d2f:	89 43 04             	mov    %eax,0x4(%ebx)
81001d32:	8b 03                	mov    (%ebx),%eax
81001d34:	8d 50 01             	lea    0x1(%eax),%edx
81001d37:	89 13                	mov    %edx,(%ebx)
81001d39:	0f b6 00             	movzbl (%eax),%eax
81001d3c:	0f b6 c0             	movzbl %al,%eax
81001d3f:	eb 05                	jmp    81001d46 <__srget_r+0x5e>
81001d41:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d46:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001d49:	c9                   	leave  
81001d4a:	c3                   	ret    

81001d4b <__srget>:
81001d4b:	55                   	push   %ebp
81001d4c:	89 e5                	mov    %esp,%ebp
81001d4e:	83 ec 08             	sub    $0x8,%esp
81001d51:	8b 55 08             	mov    0x8(%ebp),%edx
81001d54:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81001d59:	83 ec 08             	sub    $0x8,%esp
81001d5c:	52                   	push   %edx
81001d5d:	50                   	push   %eax
81001d5e:	e8 85 ff ff ff       	call   81001ce8 <__srget_r>
81001d63:	83 c4 10             	add    $0x10,%esp
81001d66:	c9                   	leave  
81001d67:	c3                   	ret    

81001d68 <_sbrk_r>:
81001d68:	55                   	push   %ebp
81001d69:	89 e5                	mov    %esp,%ebp
81001d6b:	83 ec 18             	sub    $0x18,%esp
81001d6e:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81001d75:	00 00 00 
81001d78:	83 ec 0c             	sub    $0xc,%esp
81001d7b:	ff 75 0c             	pushl  0xc(%ebp)
81001d7e:	e8 ea e5 ff ff       	call   8100036d <sbrk>
81001d83:	83 c4 10             	add    $0x10,%esp
81001d86:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d89:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81001d8d:	75 14                	jne    81001da3 <_sbrk_r+0x3b>
81001d8f:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81001d94:	85 c0                	test   %eax,%eax
81001d96:	74 0b                	je     81001da3 <_sbrk_r+0x3b>
81001d98:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
81001d9e:	8b 45 08             	mov    0x8(%ebp),%eax
81001da1:	89 10                	mov    %edx,(%eax)
81001da3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001da6:	c9                   	leave  
81001da7:	c3                   	ret    

81001da8 <__sread>:
81001da8:	55                   	push   %ebp
81001da9:	89 e5                	mov    %esp,%ebp
81001dab:	56                   	push   %esi
81001dac:	53                   	push   %ebx
81001dad:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001db0:	8b 55 14             	mov    0x14(%ebp),%edx
81001db3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001db7:	98                   	cwtl   
81001db8:	52                   	push   %edx
81001db9:	ff 75 10             	pushl  0x10(%ebp)
81001dbc:	50                   	push   %eax
81001dbd:	ff 75 08             	pushl  0x8(%ebp)
81001dc0:	e8 3a 0e 00 00       	call   81002bff <_read_r>
81001dc5:	83 c4 10             	add    $0x10,%esp
81001dc8:	89 c6                	mov    %eax,%esi
81001dca:	85 f6                	test   %esi,%esi
81001dcc:	78 0a                	js     81001dd8 <__sread+0x30>
81001dce:	8b 43 50             	mov    0x50(%ebx),%eax
81001dd1:	01 f0                	add    %esi,%eax
81001dd3:	89 43 50             	mov    %eax,0x50(%ebx)
81001dd6:	eb 0b                	jmp    81001de3 <__sread+0x3b>
81001dd8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ddc:	80 e4 ef             	and    $0xef,%ah
81001ddf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001de3:	89 f0                	mov    %esi,%eax
81001de5:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001de8:	5b                   	pop    %ebx
81001de9:	5e                   	pop    %esi
81001dea:	5d                   	pop    %ebp
81001deb:	c3                   	ret    

81001dec <__seofread>:
81001dec:	55                   	push   %ebp
81001ded:	89 e5                	mov    %esp,%ebp
81001def:	b8 00 00 00 00       	mov    $0x0,%eax
81001df4:	5d                   	pop    %ebp
81001df5:	c3                   	ret    

81001df6 <__swrite>:
81001df6:	55                   	push   %ebp
81001df7:	89 e5                	mov    %esp,%ebp
81001df9:	53                   	push   %ebx
81001dfa:	83 ec 14             	sub    $0x14,%esp
81001dfd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001e00:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e04:	98                   	cwtl   
81001e05:	25 00 01 00 00       	and    $0x100,%eax
81001e0a:	85 c0                	test   %eax,%eax
81001e0c:	74 15                	je     81001e23 <__swrite+0x2d>
81001e0e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001e12:	98                   	cwtl   
81001e13:	6a 02                	push   $0x2
81001e15:	6a 00                	push   $0x0
81001e17:	50                   	push   %eax
81001e18:	ff 75 08             	pushl  0x8(%ebp)
81001e1b:	e8 4a 02 00 00       	call   8100206a <_lseek_r>
81001e20:	83 c4 10             	add    $0x10,%esp
81001e23:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e27:	80 e4 ef             	and    $0xef,%ah
81001e2a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001e2e:	8b 55 14             	mov    0x14(%ebp),%edx
81001e31:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001e35:	98                   	cwtl   
81001e36:	52                   	push   %edx
81001e37:	ff 75 10             	pushl  0x10(%ebp)
81001e3a:	50                   	push   %eax
81001e3b:	ff 75 08             	pushl  0x8(%ebp)
81001e3e:	e8 7d 00 00 00       	call   81001ec0 <_write_r>
81001e43:	83 c4 10             	add    $0x10,%esp
81001e46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e4c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001e4f:	c9                   	leave  
81001e50:	c3                   	ret    

81001e51 <__sseek>:
81001e51:	55                   	push   %ebp
81001e52:	89 e5                	mov    %esp,%ebp
81001e54:	56                   	push   %esi
81001e55:	53                   	push   %ebx
81001e56:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001e59:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001e5d:	98                   	cwtl   
81001e5e:	ff 75 14             	pushl  0x14(%ebp)
81001e61:	ff 75 10             	pushl  0x10(%ebp)
81001e64:	50                   	push   %eax
81001e65:	ff 75 08             	pushl  0x8(%ebp)
81001e68:	e8 fd 01 00 00       	call   8100206a <_lseek_r>
81001e6d:	83 c4 10             	add    $0x10,%esp
81001e70:	89 c6                	mov    %eax,%esi
81001e72:	83 fe ff             	cmp    $0xffffffff,%esi
81001e75:	75 0d                	jne    81001e84 <__sseek+0x33>
81001e77:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e7b:	80 e4 ef             	and    $0xef,%ah
81001e7e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001e82:	eb 0e                	jmp    81001e92 <__sseek+0x41>
81001e84:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e88:	80 cc 10             	or     $0x10,%ah
81001e8b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001e8f:	89 73 50             	mov    %esi,0x50(%ebx)
81001e92:	89 f0                	mov    %esi,%eax
81001e94:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001e97:	5b                   	pop    %ebx
81001e98:	5e                   	pop    %esi
81001e99:	5d                   	pop    %ebp
81001e9a:	c3                   	ret    

81001e9b <__sclose>:
81001e9b:	55                   	push   %ebp
81001e9c:	89 e5                	mov    %esp,%ebp
81001e9e:	83 ec 18             	sub    $0x18,%esp
81001ea1:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ea4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ea7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eaa:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81001eae:	98                   	cwtl   
81001eaf:	83 ec 08             	sub    $0x8,%esp
81001eb2:	50                   	push   %eax
81001eb3:	ff 75 08             	pushl  0x8(%ebp)
81001eb6:	e8 4b 00 00 00       	call   81001f06 <_close_r>
81001ebb:	83 c4 10             	add    $0x10,%esp
81001ebe:	c9                   	leave  
81001ebf:	c3                   	ret    

81001ec0 <_write_r>:
81001ec0:	55                   	push   %ebp
81001ec1:	89 e5                	mov    %esp,%ebp
81001ec3:	83 ec 18             	sub    $0x18,%esp
81001ec6:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81001ecd:	00 00 00 
81001ed0:	83 ec 04             	sub    $0x4,%esp
81001ed3:	ff 75 14             	pushl  0x14(%ebp)
81001ed6:	ff 75 10             	pushl  0x10(%ebp)
81001ed9:	ff 75 0c             	pushl  0xc(%ebp)
81001edc:	e8 c9 e3 ff ff       	call   810002aa <write>
81001ee1:	83 c4 10             	add    $0x10,%esp
81001ee4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ee7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81001eeb:	75 14                	jne    81001f01 <_write_r+0x41>
81001eed:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81001ef2:	85 c0                	test   %eax,%eax
81001ef4:	74 0b                	je     81001f01 <_write_r+0x41>
81001ef6:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
81001efc:	8b 45 08             	mov    0x8(%ebp),%eax
81001eff:	89 10                	mov    %edx,(%eax)
81001f01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f04:	c9                   	leave  
81001f05:	c3                   	ret    

81001f06 <_close_r>:
81001f06:	55                   	push   %ebp
81001f07:	89 e5                	mov    %esp,%ebp
81001f09:	83 ec 18             	sub    $0x18,%esp
81001f0c:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81001f13:	00 00 00 
81001f16:	83 ec 0c             	sub    $0xc,%esp
81001f19:	ff 75 0c             	pushl  0xc(%ebp)
81001f1c:	e8 b6 e3 ff ff       	call   810002d7 <close>
81001f21:	83 c4 10             	add    $0x10,%esp
81001f24:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f27:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81001f2b:	75 14                	jne    81001f41 <_close_r+0x3b>
81001f2d:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81001f32:	85 c0                	test   %eax,%eax
81001f34:	74 0b                	je     81001f41 <_close_r+0x3b>
81001f36:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
81001f3c:	8b 45 08             	mov    0x8(%ebp),%eax
81001f3f:	89 10                	mov    %edx,(%eax)
81001f41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f44:	c9                   	leave  
81001f45:	c3                   	ret    

81001f46 <_fclose_r>:
81001f46:	55                   	push   %ebp
81001f47:	89 e5                	mov    %esp,%ebp
81001f49:	53                   	push   %ebx
81001f4a:	83 ec 14             	sub    $0x14,%esp
81001f4d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001f50:	85 db                	test   %ebx,%ebx
81001f52:	75 0a                	jne    81001f5e <_fclose_r+0x18>
81001f54:	b8 00 00 00 00       	mov    $0x0,%eax
81001f59:	e9 ea 00 00 00       	jmp    81002048 <_fclose_r+0x102>
81001f5e:	8b 45 08             	mov    0x8(%ebp),%eax
81001f61:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f64:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001f68:	74 18                	je     81001f82 <_fclose_r+0x3c>
81001f6a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f6d:	8b 40 38             	mov    0x38(%eax),%eax
81001f70:	85 c0                	test   %eax,%eax
81001f72:	75 0e                	jne    81001f82 <_fclose_r+0x3c>
81001f74:	83 ec 0c             	sub    $0xc,%esp
81001f77:	ff 75 f0             	pushl  -0x10(%ebp)
81001f7a:	e8 dc e9 ff ff       	call   8100095b <__sinit>
81001f7f:	83 c4 10             	add    $0x10,%esp
81001f82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f86:	66 85 c0             	test   %ax,%ax
81001f89:	75 0a                	jne    81001f95 <_fclose_r+0x4f>
81001f8b:	b8 00 00 00 00       	mov    $0x0,%eax
81001f90:	e9 b3 00 00 00       	jmp    81002048 <_fclose_r+0x102>
81001f95:	83 ec 08             	sub    $0x8,%esp
81001f98:	53                   	push   %ebx
81001f99:	ff 75 08             	pushl  0x8(%ebp)
81001f9c:	e8 0e e4 ff ff       	call   810003af <__sflush_r>
81001fa1:	83 c4 10             	add    $0x10,%esp
81001fa4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001fa7:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001faa:	85 c0                	test   %eax,%eax
81001fac:	74 1d                	je     81001fcb <_fclose_r+0x85>
81001fae:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001fb1:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001fb4:	83 ec 08             	sub    $0x8,%esp
81001fb7:	52                   	push   %edx
81001fb8:	ff 75 08             	pushl  0x8(%ebp)
81001fbb:	ff d0                	call   *%eax
81001fbd:	83 c4 10             	add    $0x10,%esp
81001fc0:	85 c0                	test   %eax,%eax
81001fc2:	79 07                	jns    81001fcb <_fclose_r+0x85>
81001fc4:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81001fcb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001fcf:	98                   	cwtl   
81001fd0:	25 80 00 00 00       	and    $0x80,%eax
81001fd5:	85 c0                	test   %eax,%eax
81001fd7:	74 12                	je     81001feb <_fclose_r+0xa5>
81001fd9:	8b 43 10             	mov    0x10(%ebx),%eax
81001fdc:	83 ec 08             	sub    $0x8,%esp
81001fdf:	50                   	push   %eax
81001fe0:	ff 75 08             	pushl  0x8(%ebp)
81001fe3:	e8 80 ea ff ff       	call   81000a68 <_free_r>
81001fe8:	83 c4 10             	add    $0x10,%esp
81001feb:	8b 43 30             	mov    0x30(%ebx),%eax
81001fee:	85 c0                	test   %eax,%eax
81001ff0:	74 23                	je     81002015 <_fclose_r+0xcf>
81001ff2:	8b 53 30             	mov    0x30(%ebx),%edx
81001ff5:	8d 43 40             	lea    0x40(%ebx),%eax
81001ff8:	39 c2                	cmp    %eax,%edx
81001ffa:	74 12                	je     8100200e <_fclose_r+0xc8>
81001ffc:	8b 43 30             	mov    0x30(%ebx),%eax
81001fff:	83 ec 08             	sub    $0x8,%esp
81002002:	50                   	push   %eax
81002003:	ff 75 08             	pushl  0x8(%ebp)
81002006:	e8 5d ea ff ff       	call   81000a68 <_free_r>
8100200b:	83 c4 10             	add    $0x10,%esp
8100200e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002015:	8b 43 44             	mov    0x44(%ebx),%eax
81002018:	85 c0                	test   %eax,%eax
8100201a:	74 19                	je     81002035 <_fclose_r+0xef>
8100201c:	8b 43 44             	mov    0x44(%ebx),%eax
8100201f:	83 ec 08             	sub    $0x8,%esp
81002022:	50                   	push   %eax
81002023:	ff 75 08             	pushl  0x8(%ebp)
81002026:	e8 3d ea ff ff       	call   81000a68 <_free_r>
8100202b:	83 c4 10             	add    $0x10,%esp
8100202e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002035:	e8 ba e9 ff ff       	call   810009f4 <__sfp_lock_acquire>
8100203a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002040:	e8 b5 e9 ff ff       	call   810009fa <__sfp_lock_release>
81002045:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002048:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100204b:	c9                   	leave  
8100204c:	c3                   	ret    

8100204d <fclose>:
8100204d:	55                   	push   %ebp
8100204e:	89 e5                	mov    %esp,%ebp
81002050:	83 ec 08             	sub    $0x8,%esp
81002053:	8b 55 08             	mov    0x8(%ebp),%edx
81002056:	a1 c4 50 00 81       	mov    0x810050c4,%eax
8100205b:	83 ec 08             	sub    $0x8,%esp
8100205e:	52                   	push   %edx
8100205f:	50                   	push   %eax
81002060:	e8 e1 fe ff ff       	call   81001f46 <_fclose_r>
81002065:	83 c4 10             	add    $0x10,%esp
81002068:	c9                   	leave  
81002069:	c3                   	ret    

8100206a <_lseek_r>:
8100206a:	55                   	push   %ebp
8100206b:	89 e5                	mov    %esp,%ebp
8100206d:	83 ec 18             	sub    $0x18,%esp
81002070:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81002077:	00 00 00 
8100207a:	83 ec 04             	sub    $0x4,%esp
8100207d:	ff 75 14             	pushl  0x14(%ebp)
81002080:	ff 75 10             	pushl  0x10(%ebp)
81002083:	ff 75 0c             	pushl  0xc(%ebp)
81002086:	e8 6d e2 ff ff       	call   810002f8 <lseek>
8100208b:	83 c4 10             	add    $0x10,%esp
8100208e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002091:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002095:	75 14                	jne    810020ab <_lseek_r+0x41>
81002097:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
8100209c:	85 c0                	test   %eax,%eax
8100209e:	74 0b                	je     810020ab <_lseek_r+0x41>
810020a0:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
810020a6:	8b 45 08             	mov    0x8(%ebp),%eax
810020a9:	89 10                	mov    %edx,(%eax)
810020ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020ae:	c9                   	leave  
810020af:	c3                   	ret    

810020b0 <__sprint_r>:
810020b0:	55                   	push   %ebp
810020b1:	89 e5                	mov    %esp,%ebp
810020b3:	56                   	push   %esi
810020b4:	53                   	push   %ebx
810020b5:	83 ec 10             	sub    $0x10,%esp
810020b8:	8b 5d 10             	mov    0x10(%ebp),%ebx
810020bb:	be 00 00 00 00       	mov    $0x0,%esi
810020c0:	8b 43 08             	mov    0x8(%ebx),%eax
810020c3:	85 c0                	test   %eax,%eax
810020c5:	75 11                	jne    810020d8 <__sprint_r+0x28>
810020c7:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810020ce:	b8 00 00 00 00       	mov    $0x0,%eax
810020d3:	e9 ad 00 00 00       	jmp    81002185 <__sprint_r+0xd5>
810020d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810020db:	8b 40 64             	mov    0x64(%eax),%eax
810020de:	25 00 20 00 00       	and    $0x2000,%eax
810020e3:	85 c0                	test   %eax,%eax
810020e5:	74 7a                	je     81002161 <__sprint_r+0xb1>
810020e7:	8b 03                	mov    (%ebx),%eax
810020e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810020ec:	eb 6a                	jmp    81002158 <__sprint_r+0xa8>
810020ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020f1:	8b 00                	mov    (%eax),%eax
810020f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020f9:	8b 40 04             	mov    0x4(%eax),%eax
810020fc:	c1 e8 02             	shr    $0x2,%eax
810020ff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002102:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002109:	eb 33                	jmp    8100213e <__sprint_r+0x8e>
8100210b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100210e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002115:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002118:	01 d0                	add    %edx,%eax
8100211a:	8b 00                	mov    (%eax),%eax
8100211c:	83 ec 04             	sub    $0x4,%esp
8100211f:	ff 75 0c             	pushl  0xc(%ebp)
81002122:	50                   	push   %eax
81002123:	ff 75 08             	pushl  0x8(%ebp)
81002126:	e8 83 12 00 00       	call   810033ae <_fputwc_r>
8100212b:	83 c4 10             	add    $0x10,%esp
8100212e:	83 f8 ff             	cmp    $0xffffffff,%eax
81002131:	75 07                	jne    8100213a <__sprint_r+0x8a>
81002133:	be ff ff ff ff       	mov    $0xffffffff,%esi
81002138:	eb 3b                	jmp    81002175 <__sprint_r+0xc5>
8100213a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100213e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002141:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81002144:	7c c5                	jl     8100210b <__sprint_r+0x5b>
81002146:	8b 43 08             	mov    0x8(%ebx),%eax
81002149:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100214c:	c1 e2 02             	shl    $0x2,%edx
8100214f:	29 d0                	sub    %edx,%eax
81002151:	89 43 08             	mov    %eax,0x8(%ebx)
81002154:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81002158:	8b 43 08             	mov    0x8(%ebx),%eax
8100215b:	85 c0                	test   %eax,%eax
8100215d:	75 8f                	jne    810020ee <__sprint_r+0x3e>
8100215f:	eb 14                	jmp    81002175 <__sprint_r+0xc5>
81002161:	83 ec 04             	sub    $0x4,%esp
81002164:	53                   	push   %ebx
81002165:	ff 75 0c             	pushl  0xc(%ebp)
81002168:	ff 75 08             	pushl  0x8(%ebp)
8100216b:	e8 dd 12 00 00       	call   8100344d <__sfvwrite_r>
81002170:	83 c4 10             	add    $0x10,%esp
81002173:	89 c6                	mov    %eax,%esi
81002175:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100217c:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002183:	89 f0                	mov    %esi,%eax
81002185:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002188:	5b                   	pop    %ebx
81002189:	5e                   	pop    %esi
8100218a:	5d                   	pop    %ebp
8100218b:	c3                   	ret    

8100218c <__sfputc_r>:
8100218c:	55                   	push   %ebp
8100218d:	89 e5                	mov    %esp,%ebp
8100218f:	83 ec 08             	sub    $0x8,%esp
81002192:	8b 45 10             	mov    0x10(%ebp),%eax
81002195:	8b 40 08             	mov    0x8(%eax),%eax
81002198:	8d 50 ff             	lea    -0x1(%eax),%edx
8100219b:	8b 45 10             	mov    0x10(%ebp),%eax
8100219e:	89 50 08             	mov    %edx,0x8(%eax)
810021a1:	8b 45 10             	mov    0x10(%ebp),%eax
810021a4:	8b 40 08             	mov    0x8(%eax),%eax
810021a7:	85 c0                	test   %eax,%eax
810021a9:	79 17                	jns    810021c2 <__sfputc_r+0x36>
810021ab:	8b 45 10             	mov    0x10(%ebp),%eax
810021ae:	8b 50 08             	mov    0x8(%eax),%edx
810021b1:	8b 45 10             	mov    0x10(%ebp),%eax
810021b4:	8b 40 18             	mov    0x18(%eax),%eax
810021b7:	39 c2                	cmp    %eax,%edx
810021b9:	7c 21                	jl     810021dc <__sfputc_r+0x50>
810021bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810021be:	3c 0a                	cmp    $0xa,%al
810021c0:	74 1a                	je     810021dc <__sfputc_r+0x50>
810021c2:	8b 45 10             	mov    0x10(%ebp),%eax
810021c5:	8b 00                	mov    (%eax),%eax
810021c7:	8d 48 01             	lea    0x1(%eax),%ecx
810021ca:	8b 55 10             	mov    0x10(%ebp),%edx
810021cd:	89 0a                	mov    %ecx,(%edx)
810021cf:	8b 55 0c             	mov    0xc(%ebp),%edx
810021d2:	88 10                	mov    %dl,(%eax)
810021d4:	0f b6 00             	movzbl (%eax),%eax
810021d7:	0f b6 c0             	movzbl %al,%eax
810021da:	eb 14                	jmp    810021f0 <__sfputc_r+0x64>
810021dc:	83 ec 04             	sub    $0x4,%esp
810021df:	ff 75 10             	pushl  0x10(%ebp)
810021e2:	ff 75 0c             	pushl  0xc(%ebp)
810021e5:	ff 75 08             	pushl  0x8(%ebp)
810021e8:	e8 1d 0e 00 00       	call   8100300a <__swbuf_r>
810021ed:	83 c4 10             	add    $0x10,%esp
810021f0:	c9                   	leave  
810021f1:	c3                   	ret    

810021f2 <__sfputs_r>:
810021f2:	55                   	push   %ebp
810021f3:	89 e5                	mov    %esp,%ebp
810021f5:	53                   	push   %ebx
810021f6:	83 ec 14             	sub    $0x14,%esp
810021f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810021fc:	8b 40 64             	mov    0x64(%eax),%eax
810021ff:	25 00 20 00 00       	and    $0x2000,%eax
81002204:	85 c0                	test   %eax,%eax
81002206:	74 4c                	je     81002254 <__sfputs_r+0x62>
81002208:	8b 45 10             	mov    0x10(%ebp),%eax
8100220b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100220e:	bb 00 00 00 00       	mov    $0x0,%ebx
81002213:	eb 31                	jmp    81002246 <__sfputs_r+0x54>
81002215:	89 d8                	mov    %ebx,%eax
81002217:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100221e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002221:	01 d0                	add    %edx,%eax
81002223:	8b 00                	mov    (%eax),%eax
81002225:	83 ec 04             	sub    $0x4,%esp
81002228:	ff 75 0c             	pushl  0xc(%ebp)
8100222b:	50                   	push   %eax
8100222c:	ff 75 08             	pushl  0x8(%ebp)
8100222f:	e8 7a 11 00 00       	call   810033ae <_fputwc_r>
81002234:	83 c4 10             	add    $0x10,%esp
81002237:	83 f8 ff             	cmp    $0xffffffff,%eax
8100223a:	75 07                	jne    81002243 <__sfputs_r+0x51>
8100223c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002241:	eb 52                	jmp    81002295 <__sfputs_r+0xa3>
81002243:	83 c3 01             	add    $0x1,%ebx
81002246:	8b 45 14             	mov    0x14(%ebp),%eax
81002249:	c1 e8 02             	shr    $0x2,%eax
8100224c:	89 da                	mov    %ebx,%edx
8100224e:	39 d0                	cmp    %edx,%eax
81002250:	77 c3                	ja     81002215 <__sfputs_r+0x23>
81002252:	eb 3c                	jmp    81002290 <__sfputs_r+0x9e>
81002254:	bb 00 00 00 00       	mov    $0x0,%ebx
81002259:	eb 2e                	jmp    81002289 <__sfputs_r+0x97>
8100225b:	89 da                	mov    %ebx,%edx
8100225d:	8b 45 10             	mov    0x10(%ebp),%eax
81002260:	01 d0                	add    %edx,%eax
81002262:	0f b6 00             	movzbl (%eax),%eax
81002265:	0f be c0             	movsbl %al,%eax
81002268:	83 ec 04             	sub    $0x4,%esp
8100226b:	ff 75 0c             	pushl  0xc(%ebp)
8100226e:	50                   	push   %eax
8100226f:	ff 75 08             	pushl  0x8(%ebp)
81002272:	e8 15 ff ff ff       	call   8100218c <__sfputc_r>
81002277:	83 c4 10             	add    $0x10,%esp
8100227a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100227d:	75 07                	jne    81002286 <__sfputs_r+0x94>
8100227f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002284:	eb 0f                	jmp    81002295 <__sfputs_r+0xa3>
81002286:	83 c3 01             	add    $0x1,%ebx
81002289:	89 d8                	mov    %ebx,%eax
8100228b:	39 45 14             	cmp    %eax,0x14(%ebp)
8100228e:	77 cb                	ja     8100225b <__sfputs_r+0x69>
81002290:	b8 00 00 00 00       	mov    $0x0,%eax
81002295:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002298:	c9                   	leave  
81002299:	c3                   	ret    

8100229a <vfiprintf>:
8100229a:	55                   	push   %ebp
8100229b:	89 e5                	mov    %esp,%ebp
8100229d:	83 ec 18             	sub    $0x18,%esp
810022a0:	a1 c4 50 00 81       	mov    0x810050c4,%eax
810022a5:	ff 75 10             	pushl  0x10(%ebp)
810022a8:	ff 75 0c             	pushl  0xc(%ebp)
810022ab:	ff 75 08             	pushl  0x8(%ebp)
810022ae:	50                   	push   %eax
810022af:	e8 0b 00 00 00       	call   810022bf <_vfiprintf_r>
810022b4:	83 c4 10             	add    $0x10,%esp
810022b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022bd:	c9                   	leave  
810022be:	c3                   	ret    

810022bf <_vfiprintf_r>:
810022bf:	55                   	push   %ebp
810022c0:	89 e5                	mov    %esp,%ebp
810022c2:	57                   	push   %edi
810022c3:	56                   	push   %esi
810022c4:	53                   	push   %ebx
810022c5:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810022cb:	c7 45 e4 f2 21 00 81 	movl   $0x810021f2,-0x1c(%ebp)
810022d2:	8b 45 08             	mov    0x8(%ebp),%eax
810022d5:	89 45 e0             	mov    %eax,-0x20(%ebp)
810022d8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810022dc:	74 18                	je     810022f6 <_vfiprintf_r+0x37>
810022de:	8b 45 e0             	mov    -0x20(%ebp),%eax
810022e1:	8b 40 38             	mov    0x38(%eax),%eax
810022e4:	85 c0                	test   %eax,%eax
810022e6:	75 0e                	jne    810022f6 <_vfiprintf_r+0x37>
810022e8:	83 ec 0c             	sub    $0xc,%esp
810022eb:	ff 75 e0             	pushl  -0x20(%ebp)
810022ee:	e8 68 e6 ff ff       	call   8100095b <__sinit>
810022f3:	83 c4 10             	add    $0x10,%esp
810022f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810022fd:	98                   	cwtl   
810022fe:	83 e0 08             	and    $0x8,%eax
81002301:	85 c0                	test   %eax,%eax
81002303:	74 0a                	je     8100230f <_vfiprintf_r+0x50>
81002305:	8b 45 0c             	mov    0xc(%ebp),%eax
81002308:	8b 40 10             	mov    0x10(%eax),%eax
8100230b:	85 c0                	test   %eax,%eax
8100230d:	75 1f                	jne    8100232e <_vfiprintf_r+0x6f>
8100230f:	83 ec 08             	sub    $0x8,%esp
81002312:	ff 75 0c             	pushl  0xc(%ebp)
81002315:	ff 75 08             	pushl  0x8(%ebp)
81002318:	e8 20 0e 00 00       	call   8100313d <__swsetup_r>
8100231d:	83 c4 10             	add    $0x10,%esp
81002320:	85 c0                	test   %eax,%eax
81002322:	74 0a                	je     8100232e <_vfiprintf_r+0x6f>
81002324:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002329:	e9 df 02 00 00       	jmp    8100260d <_vfiprintf_r+0x34e>
8100232e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81002331:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81002338:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
8100233c:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81002340:	8b 45 14             	mov    0x14(%ebp),%eax
81002343:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002349:	89 de                	mov    %ebx,%esi
8100234b:	eb 03                	jmp    81002350 <_vfiprintf_r+0x91>
8100234d:	83 c3 01             	add    $0x1,%ebx
81002350:	0f b6 03             	movzbl (%ebx),%eax
81002353:	84 c0                	test   %al,%al
81002355:	74 07                	je     8100235e <_vfiprintf_r+0x9f>
81002357:	0f b6 03             	movzbl (%ebx),%eax
8100235a:	3c 25                	cmp    $0x25,%al
8100235c:	75 ef                	jne    8100234d <_vfiprintf_r+0x8e>
8100235e:	89 d8                	mov    %ebx,%eax
81002360:	29 f0                	sub    %esi,%eax
81002362:	85 c0                	test   %eax,%eax
81002364:	74 2b                	je     81002391 <_vfiprintf_r+0xd2>
81002366:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
8100236c:	50                   	push   %eax
8100236d:	56                   	push   %esi
8100236e:	ff 75 0c             	pushl  0xc(%ebp)
81002371:	ff 75 08             	pushl  0x8(%ebp)
81002374:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002377:	ff d0                	call   *%eax
81002379:	83 c4 10             	add    $0x10,%esp
8100237c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100237f:	0f 84 68 02 00 00    	je     810025ed <_vfiprintf_r+0x32e>
81002385:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002388:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8100238e:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002391:	0f b6 03             	movzbl (%ebx),%eax
81002394:	84 c0                	test   %al,%al
81002396:	0f 84 54 02 00 00    	je     810025f0 <_vfiprintf_r+0x331>
8100239c:	83 c3 01             	add    $0x1,%ebx
8100239f:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810023a6:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810023ad:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810023b4:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810023bb:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810023bf:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810023c6:	c7 45 dc 00 49 00 81 	movl   $0x81004900,-0x24(%ebp)
810023cd:	eb 1b                	jmp    810023ea <_vfiprintf_r+0x12b>
810023cf:	8b 55 80             	mov    -0x80(%ebp),%edx
810023d2:	89 f0                	mov    %esi,%eax
810023d4:	2b 45 dc             	sub    -0x24(%ebp),%eax
810023d7:	be 01 00 00 00       	mov    $0x1,%esi
810023dc:	89 c1                	mov    %eax,%ecx
810023de:	d3 e6                	shl    %cl,%esi
810023e0:	89 f0                	mov    %esi,%eax
810023e2:	09 d0                	or     %edx,%eax
810023e4:	89 45 80             	mov    %eax,-0x80(%ebp)
810023e7:	83 c3 01             	add    $0x1,%ebx
810023ea:	0f b6 03             	movzbl (%ebx),%eax
810023ed:	0f be c0             	movsbl %al,%eax
810023f0:	83 ec 04             	sub    $0x4,%esp
810023f3:	6a 05                	push   $0x5
810023f5:	50                   	push   %eax
810023f6:	ff 75 dc             	pushl  -0x24(%ebp)
810023f9:	e8 b2 17 00 00       	call   81003bb0 <memchr>
810023fe:	83 c4 10             	add    $0x10,%esp
81002401:	89 c6                	mov    %eax,%esi
81002403:	85 f6                	test   %esi,%esi
81002405:	75 c8                	jne    810023cf <_vfiprintf_r+0x110>
81002407:	8b 45 80             	mov    -0x80(%ebp),%eax
8100240a:	83 e0 10             	and    $0x10,%eax
8100240d:	85 c0                	test   %eax,%eax
8100240f:	74 04                	je     81002415 <_vfiprintf_r+0x156>
81002411:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81002415:	8b 45 80             	mov    -0x80(%ebp),%eax
81002418:	83 e0 08             	and    $0x8,%eax
8100241b:	85 c0                	test   %eax,%eax
8100241d:	74 04                	je     81002423 <_vfiprintf_r+0x164>
8100241f:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81002423:	0f b6 03             	movzbl (%ebx),%eax
81002426:	3c 2a                	cmp    $0x2a,%al
81002428:	75 50                	jne    8100247a <_vfiprintf_r+0x1bb>
8100242a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002430:	8d 50 04             	lea    0x4(%eax),%edx
81002433:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81002439:	8b 00                	mov    (%eax),%eax
8100243b:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100243e:	8b 45 8c             	mov    -0x74(%ebp),%eax
81002441:	85 c0                	test   %eax,%eax
81002443:	79 11                	jns    81002456 <_vfiprintf_r+0x197>
81002445:	8b 45 8c             	mov    -0x74(%ebp),%eax
81002448:	f7 d8                	neg    %eax
8100244a:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100244d:	8b 45 80             	mov    -0x80(%ebp),%eax
81002450:	83 c8 02             	or     $0x2,%eax
81002453:	89 45 80             	mov    %eax,-0x80(%ebp)
81002456:	83 c3 01             	add    $0x1,%ebx
81002459:	eb 2d                	jmp    81002488 <_vfiprintf_r+0x1c9>
8100245b:	8b 55 8c             	mov    -0x74(%ebp),%edx
8100245e:	89 d0                	mov    %edx,%eax
81002460:	c1 e0 02             	shl    $0x2,%eax
81002463:	01 d0                	add    %edx,%eax
81002465:	01 c0                	add    %eax,%eax
81002467:	89 c2                	mov    %eax,%edx
81002469:	0f b6 03             	movzbl (%ebx),%eax
8100246c:	0f be c0             	movsbl %al,%eax
8100246f:	83 e8 30             	sub    $0x30,%eax
81002472:	01 d0                	add    %edx,%eax
81002474:	89 45 8c             	mov    %eax,-0x74(%ebp)
81002477:	83 c3 01             	add    $0x1,%ebx
8100247a:	0f b6 03             	movzbl (%ebx),%eax
8100247d:	0f be c0             	movsbl %al,%eax
81002480:	83 e8 30             	sub    $0x30,%eax
81002483:	83 f8 09             	cmp    $0x9,%eax
81002486:	76 d3                	jbe    8100245b <_vfiprintf_r+0x19c>
81002488:	0f b6 03             	movzbl (%ebx),%eax
8100248b:	3c 2e                	cmp    $0x2e,%al
8100248d:	75 67                	jne    810024f6 <_vfiprintf_r+0x237>
8100248f:	83 c3 01             	add    $0x1,%ebx
81002492:	0f b6 03             	movzbl (%ebx),%eax
81002495:	3c 2a                	cmp    $0x2a,%al
81002497:	75 27                	jne    810024c0 <_vfiprintf_r+0x201>
81002499:	83 c3 01             	add    $0x1,%ebx
8100249c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810024a2:	8d 50 04             	lea    0x4(%eax),%edx
810024a5:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810024ab:	8b 00                	mov    (%eax),%eax
810024ad:	89 45 84             	mov    %eax,-0x7c(%ebp)
810024b0:	8b 45 84             	mov    -0x7c(%ebp),%eax
810024b3:	85 c0                	test   %eax,%eax
810024b5:	79 3f                	jns    810024f6 <_vfiprintf_r+0x237>
810024b7:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810024be:	eb 36                	jmp    810024f6 <_vfiprintf_r+0x237>
810024c0:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810024c7:	eb 1f                	jmp    810024e8 <_vfiprintf_r+0x229>
810024c9:	8b 55 84             	mov    -0x7c(%ebp),%edx
810024cc:	89 d0                	mov    %edx,%eax
810024ce:	c1 e0 02             	shl    $0x2,%eax
810024d1:	01 d0                	add    %edx,%eax
810024d3:	01 c0                	add    %eax,%eax
810024d5:	89 c2                	mov    %eax,%edx
810024d7:	0f b6 03             	movzbl (%ebx),%eax
810024da:	0f be c0             	movsbl %al,%eax
810024dd:	83 e8 30             	sub    $0x30,%eax
810024e0:	01 d0                	add    %edx,%eax
810024e2:	89 45 84             	mov    %eax,-0x7c(%ebp)
810024e5:	83 c3 01             	add    $0x1,%ebx
810024e8:	0f b6 03             	movzbl (%ebx),%eax
810024eb:	0f be c0             	movsbl %al,%eax
810024ee:	83 e8 30             	sub    $0x30,%eax
810024f1:	83 f8 09             	cmp    $0x9,%eax
810024f4:	76 d3                	jbe    810024c9 <_vfiprintf_r+0x20a>
810024f6:	c7 45 dc 06 49 00 81 	movl   $0x81004906,-0x24(%ebp)
810024fd:	0f b6 03             	movzbl (%ebx),%eax
81002500:	0f be c0             	movsbl %al,%eax
81002503:	83 ec 04             	sub    $0x4,%esp
81002506:	6a 03                	push   $0x3
81002508:	50                   	push   %eax
81002509:	ff 75 dc             	pushl  -0x24(%ebp)
8100250c:	e8 9f 16 00 00       	call   81003bb0 <memchr>
81002511:	83 c4 10             	add    $0x10,%esp
81002514:	89 c6                	mov    %eax,%esi
81002516:	85 f6                	test   %esi,%esi
81002518:	74 1b                	je     81002535 <_vfiprintf_r+0x276>
8100251a:	8b 55 80             	mov    -0x80(%ebp),%edx
8100251d:	89 f0                	mov    %esi,%eax
8100251f:	2b 45 dc             	sub    -0x24(%ebp),%eax
81002522:	be 40 00 00 00       	mov    $0x40,%esi
81002527:	89 c1                	mov    %eax,%ecx
81002529:	d3 e6                	shl    %cl,%esi
8100252b:	89 f0                	mov    %esi,%eax
8100252d:	09 d0                	or     %edx,%eax
8100252f:	89 45 80             	mov    %eax,-0x80(%ebp)
81002532:	83 c3 01             	add    $0x1,%ebx
81002535:	89 d8                	mov    %ebx,%eax
81002537:	8d 58 01             	lea    0x1(%eax),%ebx
8100253a:	0f b6 00             	movzbl (%eax),%eax
8100253d:	88 45 98             	mov    %al,-0x68(%ebp)
81002540:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81002544:	0f be c0             	movsbl %al,%eax
81002547:	83 ec 04             	sub    $0x4,%esp
8100254a:	6a 06                	push   $0x6
8100254c:	50                   	push   %eax
8100254d:	68 0a 49 00 81       	push   $0x8100490a
81002552:	e8 59 16 00 00       	call   81003bb0 <memchr>
81002557:	83 c4 10             	add    $0x10,%esp
8100255a:	89 c6                	mov    %eax,%esi
8100255c:	85 f6                	test   %esi,%esi
8100255e:	74 5a                	je     810025ba <_vfiprintf_r+0x2fb>
81002560:	b8 00 00 00 00       	mov    $0x0,%eax
81002565:	85 c0                	test   %eax,%eax
81002567:	75 2e                	jne    81002597 <_vfiprintf_r+0x2d8>
81002569:	8b 45 80             	mov    -0x80(%ebp),%eax
8100256c:	25 00 01 00 00       	and    $0x100,%eax
81002571:	85 c0                	test   %eax,%eax
81002573:	74 11                	je     81002586 <_vfiprintf_r+0x2c7>
81002575:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100257b:	83 c0 0c             	add    $0xc,%eax
8100257e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002584:	eb 55                	jmp    810025db <_vfiprintf_r+0x31c>
81002586:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100258c:	83 c0 08             	add    $0x8,%eax
8100258f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002595:	eb 44                	jmp    810025db <_vfiprintf_r+0x31c>
81002597:	83 ec 0c             	sub    $0xc,%esp
8100259a:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810025a0:	50                   	push   %eax
810025a1:	ff 75 e4             	pushl  -0x1c(%ebp)
810025a4:	ff 75 0c             	pushl  0xc(%ebp)
810025a7:	8d 45 80             	lea    -0x80(%ebp),%eax
810025aa:	50                   	push   %eax
810025ab:	ff 75 08             	pushl  0x8(%ebp)
810025ae:	e8 4d da ff 7e       	call   0 <do_help-0x81000000>
810025b3:	83 c4 20             	add    $0x20,%esp
810025b6:	89 c7                	mov    %eax,%edi
810025b8:	eb 21                	jmp    810025db <_vfiprintf_r+0x31c>
810025ba:	83 ec 0c             	sub    $0xc,%esp
810025bd:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810025c3:	50                   	push   %eax
810025c4:	ff 75 e4             	pushl  -0x1c(%ebp)
810025c7:	ff 75 0c             	pushl  0xc(%ebp)
810025ca:	8d 45 80             	lea    -0x80(%ebp),%eax
810025cd:	50                   	push   %eax
810025ce:	ff 75 08             	pushl  0x8(%ebp)
810025d1:	e8 da 01 00 00       	call   810027b0 <_printf_i>
810025d6:	83 c4 20             	add    $0x20,%esp
810025d9:	89 c7                	mov    %eax,%edi
810025db:	83 ff ff             	cmp    $0xffffffff,%edi
810025de:	74 13                	je     810025f3 <_vfiprintf_r+0x334>
810025e0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810025e3:	01 f8                	add    %edi,%eax
810025e5:	89 45 94             	mov    %eax,-0x6c(%ebp)
810025e8:	e9 5c fd ff ff       	jmp    81002349 <_vfiprintf_r+0x8a>
810025ed:	90                   	nop
810025ee:	eb 04                	jmp    810025f4 <_vfiprintf_r+0x335>
810025f0:	90                   	nop
810025f1:	eb 01                	jmp    810025f4 <_vfiprintf_r+0x335>
810025f3:	90                   	nop
810025f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810025f7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810025fb:	98                   	cwtl   
810025fc:	83 e0 40             	and    $0x40,%eax
810025ff:	85 c0                	test   %eax,%eax
81002601:	75 05                	jne    81002608 <_vfiprintf_r+0x349>
81002603:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002606:	eb 05                	jmp    8100260d <_vfiprintf_r+0x34e>
81002608:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100260d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002610:	5b                   	pop    %ebx
81002611:	5e                   	pop    %esi
81002612:	5f                   	pop    %edi
81002613:	5d                   	pop    %ebp
81002614:	c3                   	ret    

81002615 <_printf_common>:
81002615:	55                   	push   %ebp
81002616:	89 e5                	mov    %esp,%ebp
81002618:	83 ec 18             	sub    $0x18,%esp
8100261b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100261e:	8b 50 10             	mov    0x10(%eax),%edx
81002621:	8b 45 0c             	mov    0xc(%ebp),%eax
81002624:	8b 40 08             	mov    0x8(%eax),%eax
81002627:	39 c2                	cmp    %eax,%edx
81002629:	0f 4c d0             	cmovl  %eax,%edx
8100262c:	8b 45 10             	mov    0x10(%ebp),%eax
8100262f:	89 10                	mov    %edx,(%eax)
81002631:	8b 45 0c             	mov    0xc(%ebp),%eax
81002634:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002638:	84 c0                	test   %al,%al
8100263a:	74 0d                	je     81002649 <_printf_common+0x34>
8100263c:	8b 45 10             	mov    0x10(%ebp),%eax
8100263f:	8b 00                	mov    (%eax),%eax
81002641:	8d 50 01             	lea    0x1(%eax),%edx
81002644:	8b 45 10             	mov    0x10(%ebp),%eax
81002647:	89 10                	mov    %edx,(%eax)
81002649:	8b 45 0c             	mov    0xc(%ebp),%eax
8100264c:	8b 00                	mov    (%eax),%eax
8100264e:	83 e0 20             	and    $0x20,%eax
81002651:	85 c0                	test   %eax,%eax
81002653:	74 0d                	je     81002662 <_printf_common+0x4d>
81002655:	8b 45 10             	mov    0x10(%ebp),%eax
81002658:	8b 00                	mov    (%eax),%eax
8100265a:	8d 50 02             	lea    0x2(%eax),%edx
8100265d:	8b 45 10             	mov    0x10(%ebp),%eax
81002660:	89 10                	mov    %edx,(%eax)
81002662:	8b 45 0c             	mov    0xc(%ebp),%eax
81002665:	8b 00                	mov    (%eax),%eax
81002667:	83 e0 06             	and    $0x6,%eax
8100266a:	85 c0                	test   %eax,%eax
8100266c:	75 41                	jne    810026af <_printf_common+0x9a>
8100266e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002675:	eb 24                	jmp    8100269b <_printf_common+0x86>
81002677:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267a:	83 c0 19             	add    $0x19,%eax
8100267d:	6a 01                	push   $0x1
8100267f:	50                   	push   %eax
81002680:	ff 75 14             	pushl  0x14(%ebp)
81002683:	ff 75 08             	pushl  0x8(%ebp)
81002686:	8b 45 18             	mov    0x18(%ebp),%eax
81002689:	ff d0                	call   *%eax
8100268b:	83 c4 10             	add    $0x10,%esp
8100268e:	83 f8 ff             	cmp    $0xffffffff,%eax
81002691:	0f 84 0b 01 00 00    	je     810027a2 <_printf_common+0x18d>
81002697:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100269b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100269e:	8b 50 0c             	mov    0xc(%eax),%edx
810026a1:	8b 45 10             	mov    0x10(%ebp),%eax
810026a4:	8b 08                	mov    (%eax),%ecx
810026a6:	89 d0                	mov    %edx,%eax
810026a8:	29 c8                	sub    %ecx,%eax
810026aa:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810026ad:	7c c8                	jl     81002677 <_printf_common+0x62>
810026af:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810026b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810026b9:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810026bd:	84 c0                	test   %al,%al
810026bf:	74 04                	je     810026c5 <_printf_common+0xb0>
810026c1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810026c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810026c8:	8b 00                	mov    (%eax),%eax
810026ca:	83 e0 20             	and    $0x20,%eax
810026cd:	85 c0                	test   %eax,%eax
810026cf:	74 28                	je     810026f9 <_printf_common+0xe4>
810026d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026d4:	8d 50 01             	lea    0x1(%eax),%edx
810026d7:	89 55 f4             	mov    %edx,-0xc(%ebp)
810026da:	8b 55 0c             	mov    0xc(%ebp),%edx
810026dd:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810026e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026e5:	8d 50 01             	lea    0x1(%eax),%edx
810026e8:	89 55 f4             	mov    %edx,-0xc(%ebp)
810026eb:	8b 55 0c             	mov    0xc(%ebp),%edx
810026ee:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810026f2:	8b 55 0c             	mov    0xc(%ebp),%edx
810026f5:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810026f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026fc:	8b 55 0c             	mov    0xc(%ebp),%edx
810026ff:	83 c2 43             	add    $0x43,%edx
81002702:	50                   	push   %eax
81002703:	52                   	push   %edx
81002704:	ff 75 14             	pushl  0x14(%ebp)
81002707:	ff 75 08             	pushl  0x8(%ebp)
8100270a:	8b 45 18             	mov    0x18(%ebp),%eax
8100270d:	ff d0                	call   *%eax
8100270f:	83 c4 10             	add    $0x10,%esp
81002712:	83 f8 ff             	cmp    $0xffffffff,%eax
81002715:	0f 84 8a 00 00 00    	je     810027a5 <_printf_common+0x190>
8100271b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100271e:	8b 50 0c             	mov    0xc(%eax),%edx
81002721:	8b 45 10             	mov    0x10(%ebp),%eax
81002724:	8b 08                	mov    (%eax),%ecx
81002726:	89 d0                	mov    %edx,%eax
81002728:	29 c8                	sub    %ecx,%eax
8100272a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100272d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002730:	8b 00                	mov    (%eax),%eax
81002732:	83 e0 06             	and    $0x6,%eax
81002735:	83 f8 04             	cmp    $0x4,%eax
81002738:	75 06                	jne    81002740 <_printf_common+0x12b>
8100273a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100273e:	79 07                	jns    81002747 <_printf_common+0x132>
81002740:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002747:	8b 45 0c             	mov    0xc(%ebp),%eax
8100274a:	8b 50 08             	mov    0x8(%eax),%edx
8100274d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002750:	8b 40 10             	mov    0x10(%eax),%eax
81002753:	39 c2                	cmp    %eax,%edx
81002755:	7e 13                	jle    8100276a <_printf_common+0x155>
81002757:	8b 45 0c             	mov    0xc(%ebp),%eax
8100275a:	8b 50 08             	mov    0x8(%eax),%edx
8100275d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002760:	8b 48 10             	mov    0x10(%eax),%ecx
81002763:	89 d0                	mov    %edx,%eax
81002765:	29 c8                	sub    %ecx,%eax
81002767:	01 45 f4             	add    %eax,-0xc(%ebp)
8100276a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002771:	eb 20                	jmp    81002793 <_printf_common+0x17e>
81002773:	8b 45 0c             	mov    0xc(%ebp),%eax
81002776:	83 c0 1a             	add    $0x1a,%eax
81002779:	6a 01                	push   $0x1
8100277b:	50                   	push   %eax
8100277c:	ff 75 14             	pushl  0x14(%ebp)
8100277f:	ff 75 08             	pushl  0x8(%ebp)
81002782:	8b 45 18             	mov    0x18(%ebp),%eax
81002785:	ff d0                	call   *%eax
81002787:	83 c4 10             	add    $0x10,%esp
8100278a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100278d:	74 19                	je     810027a8 <_printf_common+0x193>
8100278f:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81002793:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002796:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81002799:	7c d8                	jl     81002773 <_printf_common+0x15e>
8100279b:	b8 00 00 00 00       	mov    $0x0,%eax
810027a0:	eb 0c                	jmp    810027ae <_printf_common+0x199>
810027a2:	90                   	nop
810027a3:	eb 04                	jmp    810027a9 <_printf_common+0x194>
810027a5:	90                   	nop
810027a6:	eb 01                	jmp    810027a9 <_printf_common+0x194>
810027a8:	90                   	nop
810027a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810027ae:	c9                   	leave  
810027af:	c3                   	ret    

810027b0 <_printf_i>:
810027b0:	55                   	push   %ebp
810027b1:	89 e5                	mov    %esp,%ebp
810027b3:	53                   	push   %ebx
810027b4:	83 ec 24             	sub    $0x24,%esp
810027b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810027ba:	83 c0 1b             	add    $0x1b,%eax
810027bd:	83 c0 28             	add    $0x28,%eax
810027c0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027c3:	c7 45 e8 14 49 00 81 	movl   $0x81004914,-0x18(%ebp)
810027ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810027cd:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810027d1:	0f be c0             	movsbl %al,%eax
810027d4:	85 c0                	test   %eax,%eax
810027d6:	0f 84 00 03 00 00    	je     81002adc <_printf_i+0x32c>
810027dc:	85 c0                	test   %eax,%eax
810027de:	0f 88 52 03 00 00    	js     81002b36 <_printf_i+0x386>
810027e4:	83 f8 78             	cmp    $0x78,%eax
810027e7:	0f 8f 49 03 00 00    	jg     81002b36 <_printf_i+0x386>
810027ed:	83 f8 58             	cmp    $0x58,%eax
810027f0:	0f 8c 40 03 00 00    	jl     81002b36 <_printf_i+0x386>
810027f6:	83 e8 58             	sub    $0x58,%eax
810027f9:	83 f8 20             	cmp    $0x20,%eax
810027fc:	0f 87 34 03 00 00    	ja     81002b36 <_printf_i+0x386>
81002802:	8b 04 85 38 49 00 81 	mov    -0x7effb6c8(,%eax,4),%eax
81002809:	ff e0                	jmp    *%eax
8100280b:	8b 45 18             	mov    0x18(%ebp),%eax
8100280e:	8b 00                	mov    (%eax),%eax
81002810:	8d 48 04             	lea    0x4(%eax),%ecx
81002813:	8b 55 18             	mov    0x18(%ebp),%edx
81002816:	89 0a                	mov    %ecx,(%edx)
81002818:	8b 00                	mov    (%eax),%eax
8100281a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100281e:	89 c2                	mov    %eax,%edx
81002820:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002823:	88 10                	mov    %dl,(%eax)
81002825:	8b 45 0c             	mov    0xc(%ebp),%eax
81002828:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100282f:	e9 1c 03 00 00       	jmp    81002b50 <_printf_i+0x3a0>
81002834:	8b 45 0c             	mov    0xc(%ebp),%eax
81002837:	8b 00                	mov    (%eax),%eax
81002839:	25 80 00 00 00       	and    $0x80,%eax
8100283e:	85 c0                	test   %eax,%eax
81002840:	74 11                	je     81002853 <_printf_i+0xa3>
81002842:	8b 45 18             	mov    0x18(%ebp),%eax
81002845:	8b 00                	mov    (%eax),%eax
81002847:	8d 48 04             	lea    0x4(%eax),%ecx
8100284a:	8b 55 18             	mov    0x18(%ebp),%edx
8100284d:	89 0a                	mov    %ecx,(%edx)
8100284f:	8b 00                	mov    (%eax),%eax
81002851:	eb 2d                	jmp    81002880 <_printf_i+0xd0>
81002853:	8b 45 0c             	mov    0xc(%ebp),%eax
81002856:	8b 00                	mov    (%eax),%eax
81002858:	83 e0 40             	and    $0x40,%eax
8100285b:	85 c0                	test   %eax,%eax
8100285d:	74 12                	je     81002871 <_printf_i+0xc1>
8100285f:	8b 45 18             	mov    0x18(%ebp),%eax
81002862:	8b 00                	mov    (%eax),%eax
81002864:	8d 48 04             	lea    0x4(%eax),%ecx
81002867:	8b 55 18             	mov    0x18(%ebp),%edx
8100286a:	89 0a                	mov    %ecx,(%edx)
8100286c:	8b 00                	mov    (%eax),%eax
8100286e:	98                   	cwtl   
8100286f:	eb 0f                	jmp    81002880 <_printf_i+0xd0>
81002871:	8b 45 18             	mov    0x18(%ebp),%eax
81002874:	8b 00                	mov    (%eax),%eax
81002876:	8d 48 04             	lea    0x4(%eax),%ecx
81002879:	8b 55 18             	mov    0x18(%ebp),%edx
8100287c:	89 0a                	mov    %ecx,(%edx)
8100287e:	8b 00                	mov    (%eax),%eax
81002880:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002883:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002886:	85 c0                	test   %eax,%eax
81002888:	79 0a                	jns    81002894 <_printf_i+0xe4>
8100288a:	f7 5d f4             	negl   -0xc(%ebp)
8100288d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002890:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81002894:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100289b:	e9 28 01 00 00       	jmp    810029c8 <_printf_i+0x218>
810028a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810028a3:	8b 00                	mov    (%eax),%eax
810028a5:	25 80 00 00 00       	and    $0x80,%eax
810028aa:	85 c0                	test   %eax,%eax
810028ac:	74 11                	je     810028bf <_printf_i+0x10f>
810028ae:	8b 45 18             	mov    0x18(%ebp),%eax
810028b1:	8b 00                	mov    (%eax),%eax
810028b3:	8d 48 04             	lea    0x4(%eax),%ecx
810028b6:	8b 55 18             	mov    0x18(%ebp),%edx
810028b9:	89 0a                	mov    %ecx,(%edx)
810028bb:	8b 00                	mov    (%eax),%eax
810028bd:	eb 2f                	jmp    810028ee <_printf_i+0x13e>
810028bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810028c2:	8b 00                	mov    (%eax),%eax
810028c4:	83 e0 40             	and    $0x40,%eax
810028c7:	85 c0                	test   %eax,%eax
810028c9:	74 14                	je     810028df <_printf_i+0x12f>
810028cb:	8b 45 18             	mov    0x18(%ebp),%eax
810028ce:	8b 00                	mov    (%eax),%eax
810028d0:	8d 48 04             	lea    0x4(%eax),%ecx
810028d3:	8b 55 18             	mov    0x18(%ebp),%edx
810028d6:	89 0a                	mov    %ecx,(%edx)
810028d8:	8b 00                	mov    (%eax),%eax
810028da:	0f b7 c0             	movzwl %ax,%eax
810028dd:	eb 0f                	jmp    810028ee <_printf_i+0x13e>
810028df:	8b 45 18             	mov    0x18(%ebp),%eax
810028e2:	8b 00                	mov    (%eax),%eax
810028e4:	8d 48 04             	lea    0x4(%eax),%ecx
810028e7:	8b 55 18             	mov    0x18(%ebp),%edx
810028ea:	89 0a                	mov    %ecx,(%edx)
810028ec:	8b 00                	mov    (%eax),%eax
810028ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810028f4:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810028f8:	3c 6f                	cmp    $0x6f,%al
810028fa:	75 07                	jne    81002903 <_printf_i+0x153>
810028fc:	b8 08 00 00 00       	mov    $0x8,%eax
81002901:	eb 05                	jmp    81002908 <_printf_i+0x158>
81002903:	b8 0a 00 00 00       	mov    $0xa,%eax
81002908:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100290b:	e9 b1 00 00 00       	jmp    810029c1 <_printf_i+0x211>
81002910:	8b 45 0c             	mov    0xc(%ebp),%eax
81002913:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002917:	eb 1d                	jmp    81002936 <_printf_i+0x186>
81002919:	8b 45 0c             	mov    0xc(%ebp),%eax
8100291c:	8b 00                	mov    (%eax),%eax
8100291e:	83 c8 20             	or     $0x20,%eax
81002921:	89 c2                	mov    %eax,%edx
81002923:	8b 45 0c             	mov    0xc(%ebp),%eax
81002926:	89 10                	mov    %edx,(%eax)
81002928:	8b 45 0c             	mov    0xc(%ebp),%eax
8100292b:	c6 40 45 78          	movb   $0x78,0x45(%eax)
8100292f:	c7 45 e8 25 49 00 81 	movl   $0x81004925,-0x18(%ebp)
81002936:	8b 45 0c             	mov    0xc(%ebp),%eax
81002939:	8b 00                	mov    (%eax),%eax
8100293b:	25 80 00 00 00       	and    $0x80,%eax
81002940:	85 c0                	test   %eax,%eax
81002942:	74 11                	je     81002955 <_printf_i+0x1a5>
81002944:	8b 45 18             	mov    0x18(%ebp),%eax
81002947:	8b 00                	mov    (%eax),%eax
81002949:	8d 48 04             	lea    0x4(%eax),%ecx
8100294c:	8b 55 18             	mov    0x18(%ebp),%edx
8100294f:	89 0a                	mov    %ecx,(%edx)
81002951:	8b 00                	mov    (%eax),%eax
81002953:	eb 2f                	jmp    81002984 <_printf_i+0x1d4>
81002955:	8b 45 0c             	mov    0xc(%ebp),%eax
81002958:	8b 00                	mov    (%eax),%eax
8100295a:	83 e0 40             	and    $0x40,%eax
8100295d:	85 c0                	test   %eax,%eax
8100295f:	74 14                	je     81002975 <_printf_i+0x1c5>
81002961:	8b 45 18             	mov    0x18(%ebp),%eax
81002964:	8b 00                	mov    (%eax),%eax
81002966:	8d 48 04             	lea    0x4(%eax),%ecx
81002969:	8b 55 18             	mov    0x18(%ebp),%edx
8100296c:	89 0a                	mov    %ecx,(%edx)
8100296e:	8b 00                	mov    (%eax),%eax
81002970:	0f b7 c0             	movzwl %ax,%eax
81002973:	eb 0f                	jmp    81002984 <_printf_i+0x1d4>
81002975:	8b 45 18             	mov    0x18(%ebp),%eax
81002978:	8b 00                	mov    (%eax),%eax
8100297a:	8d 48 04             	lea    0x4(%eax),%ecx
8100297d:	8b 55 18             	mov    0x18(%ebp),%edx
81002980:	89 0a                	mov    %ecx,(%edx)
81002982:	8b 00                	mov    (%eax),%eax
81002984:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002987:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8100298e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002991:	8b 00                	mov    (%eax),%eax
81002993:	83 e0 01             	and    $0x1,%eax
81002996:	85 c0                	test   %eax,%eax
81002998:	74 0f                	je     810029a9 <_printf_i+0x1f9>
8100299a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100299d:	8b 00                	mov    (%eax),%eax
8100299f:	83 c8 20             	or     $0x20,%eax
810029a2:	89 c2                	mov    %eax,%edx
810029a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810029a7:	89 10                	mov    %edx,(%eax)
810029a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810029ad:	75 11                	jne    810029c0 <_printf_i+0x210>
810029af:	8b 45 0c             	mov    0xc(%ebp),%eax
810029b2:	8b 00                	mov    (%eax),%eax
810029b4:	83 e0 df             	and    $0xffffffdf,%eax
810029b7:	89 c2                	mov    %eax,%edx
810029b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810029bc:	89 10                	mov    %edx,(%eax)
810029be:	eb 01                	jmp    810029c1 <_printf_i+0x211>
810029c0:	90                   	nop
810029c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810029c4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810029c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810029cb:	8b 50 04             	mov    0x4(%eax),%edx
810029ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810029d1:	89 50 08             	mov    %edx,0x8(%eax)
810029d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810029d7:	8b 40 08             	mov    0x8(%eax),%eax
810029da:	85 c0                	test   %eax,%eax
810029dc:	78 0f                	js     810029ed <_printf_i+0x23d>
810029de:	8b 45 0c             	mov    0xc(%ebp),%eax
810029e1:	8b 00                	mov    (%eax),%eax
810029e3:	83 e0 fb             	and    $0xfffffffb,%eax
810029e6:	89 c2                	mov    %eax,%edx
810029e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810029eb:	89 10                	mov    %edx,(%eax)
810029ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810029f1:	75 0a                	jne    810029fd <_printf_i+0x24d>
810029f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810029f6:	8b 40 04             	mov    0x4(%eax),%eax
810029f9:	85 c0                	test   %eax,%eax
810029fb:	74 34                	je     81002a31 <_printf_i+0x281>
810029fd:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002a00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a03:	ba 00 00 00 00       	mov    $0x0,%edx
81002a08:	f7 f1                	div    %ecx
81002a0a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a0d:	01 d0                	add    %edx,%eax
81002a0f:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002a13:	0f b6 10             	movzbl (%eax),%edx
81002a16:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a19:	88 10                	mov    %dl,(%eax)
81002a1b:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81002a1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a21:	ba 00 00 00 00       	mov    $0x0,%edx
81002a26:	f7 f3                	div    %ebx
81002a28:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a2b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002a2f:	75 cc                	jne    810029fd <_printf_i+0x24d>
81002a31:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81002a35:	75 26                	jne    81002a5d <_printf_i+0x2ad>
81002a37:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a3a:	8b 00                	mov    (%eax),%eax
81002a3c:	83 e0 01             	and    $0x1,%eax
81002a3f:	85 c0                	test   %eax,%eax
81002a41:	74 1a                	je     81002a5d <_printf_i+0x2ad>
81002a43:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a46:	8b 50 04             	mov    0x4(%eax),%edx
81002a49:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a4c:	8b 40 10             	mov    0x10(%eax),%eax
81002a4f:	39 c2                	cmp    %eax,%edx
81002a51:	7f 0a                	jg     81002a5d <_printf_i+0x2ad>
81002a53:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002a57:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a5a:	c6 00 30             	movb   $0x30,(%eax)
81002a5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a60:	83 c0 1b             	add    $0x1b,%eax
81002a63:	83 c0 28             	add    $0x28,%eax
81002a66:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002a69:	89 c2                	mov    %eax,%edx
81002a6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a6e:	89 50 10             	mov    %edx,0x10(%eax)
81002a71:	e9 e2 00 00 00       	jmp    81002b58 <_printf_i+0x3a8>
81002a76:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a79:	8b 00                	mov    (%eax),%eax
81002a7b:	25 80 00 00 00       	and    $0x80,%eax
81002a80:	85 c0                	test   %eax,%eax
81002a82:	74 19                	je     81002a9d <_printf_i+0x2ed>
81002a84:	8b 45 18             	mov    0x18(%ebp),%eax
81002a87:	8b 00                	mov    (%eax),%eax
81002a89:	8d 48 04             	lea    0x4(%eax),%ecx
81002a8c:	8b 55 18             	mov    0x18(%ebp),%edx
81002a8f:	89 0a                	mov    %ecx,(%edx)
81002a91:	8b 00                	mov    (%eax),%eax
81002a93:	8b 55 0c             	mov    0xc(%ebp),%edx
81002a96:	8b 52 14             	mov    0x14(%edx),%edx
81002a99:	89 10                	mov    %edx,(%eax)
81002a9b:	eb 3f                	jmp    81002adc <_printf_i+0x32c>
81002a9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aa0:	8b 00                	mov    (%eax),%eax
81002aa2:	83 e0 40             	and    $0x40,%eax
81002aa5:	85 c0                	test   %eax,%eax
81002aa7:	74 1c                	je     81002ac5 <_printf_i+0x315>
81002aa9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aac:	8b 58 14             	mov    0x14(%eax),%ebx
81002aaf:	8b 45 18             	mov    0x18(%ebp),%eax
81002ab2:	8b 00                	mov    (%eax),%eax
81002ab4:	8d 48 04             	lea    0x4(%eax),%ecx
81002ab7:	8b 55 18             	mov    0x18(%ebp),%edx
81002aba:	89 0a                	mov    %ecx,(%edx)
81002abc:	8b 00                	mov    (%eax),%eax
81002abe:	89 da                	mov    %ebx,%edx
81002ac0:	66 89 10             	mov    %dx,(%eax)
81002ac3:	eb 17                	jmp    81002adc <_printf_i+0x32c>
81002ac5:	8b 45 18             	mov    0x18(%ebp),%eax
81002ac8:	8b 00                	mov    (%eax),%eax
81002aca:	8d 48 04             	lea    0x4(%eax),%ecx
81002acd:	8b 55 18             	mov    0x18(%ebp),%edx
81002ad0:	89 0a                	mov    %ecx,(%edx)
81002ad2:	8b 00                	mov    (%eax),%eax
81002ad4:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ad7:	8b 52 14             	mov    0x14(%edx),%edx
81002ada:	89 10                	mov    %edx,(%eax)
81002adc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002adf:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002ae6:	eb 70                	jmp    81002b58 <_printf_i+0x3a8>
81002ae8:	8b 45 18             	mov    0x18(%ebp),%eax
81002aeb:	8b 00                	mov    (%eax),%eax
81002aed:	8d 48 04             	lea    0x4(%eax),%ecx
81002af0:	8b 55 18             	mov    0x18(%ebp),%edx
81002af3:	89 0a                	mov    %ecx,(%edx)
81002af5:	8b 00                	mov    (%eax),%eax
81002af7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002afa:	8b 45 0c             	mov    0xc(%ebp),%eax
81002afd:	8b 40 04             	mov    0x4(%eax),%eax
81002b00:	83 ec 04             	sub    $0x4,%esp
81002b03:	50                   	push   %eax
81002b04:	6a 00                	push   $0x0
81002b06:	ff 75 ec             	pushl  -0x14(%ebp)
81002b09:	e8 a2 10 00 00       	call   81003bb0 <memchr>
81002b0e:	83 c4 10             	add    $0x10,%esp
81002b11:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002b14:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002b18:	74 0e                	je     81002b28 <_printf_i+0x378>
81002b1a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b1d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002b20:	89 c2                	mov    %eax,%edx
81002b22:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b25:	89 50 04             	mov    %edx,0x4(%eax)
81002b28:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b2b:	8b 50 04             	mov    0x4(%eax),%edx
81002b2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b31:	89 50 10             	mov    %edx,0x10(%eax)
81002b34:	eb 1a                	jmp    81002b50 <_printf_i+0x3a0>
81002b36:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002b3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b3d:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002b41:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b44:	88 10                	mov    %dl,(%eax)
81002b46:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b49:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002b50:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b53:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002b57:	90                   	nop
81002b58:	83 ec 0c             	sub    $0xc,%esp
81002b5b:	ff 75 14             	pushl  0x14(%ebp)
81002b5e:	ff 75 10             	pushl  0x10(%ebp)
81002b61:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002b64:	50                   	push   %eax
81002b65:	ff 75 0c             	pushl  0xc(%ebp)
81002b68:	ff 75 08             	pushl  0x8(%ebp)
81002b6b:	e8 a5 fa ff ff       	call   81002615 <_printf_common>
81002b70:	83 c4 20             	add    $0x20,%esp
81002b73:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b76:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81002b7a:	74 72                	je     81002bee <_printf_i+0x43e>
81002b7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b7f:	8b 40 10             	mov    0x10(%eax),%eax
81002b82:	50                   	push   %eax
81002b83:	ff 75 ec             	pushl  -0x14(%ebp)
81002b86:	ff 75 10             	pushl  0x10(%ebp)
81002b89:	ff 75 08             	pushl  0x8(%ebp)
81002b8c:	8b 45 14             	mov    0x14(%ebp),%eax
81002b8f:	ff d0                	call   *%eax
81002b91:	83 c4 10             	add    $0x10,%esp
81002b94:	83 f8 ff             	cmp    $0xffffffff,%eax
81002b97:	74 58                	je     81002bf1 <_printf_i+0x441>
81002b99:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b9c:	8b 00                	mov    (%eax),%eax
81002b9e:	83 e0 02             	and    $0x2,%eax
81002ba1:	85 c0                	test   %eax,%eax
81002ba3:	74 39                	je     81002bde <_printf_i+0x42e>
81002ba5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002bac:	eb 20                	jmp    81002bce <_printf_i+0x41e>
81002bae:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bb1:	83 c0 19             	add    $0x19,%eax
81002bb4:	6a 01                	push   $0x1
81002bb6:	50                   	push   %eax
81002bb7:	ff 75 10             	pushl  0x10(%ebp)
81002bba:	ff 75 08             	pushl  0x8(%ebp)
81002bbd:	8b 45 14             	mov    0x14(%ebp),%eax
81002bc0:	ff d0                	call   *%eax
81002bc2:	83 c4 10             	add    $0x10,%esp
81002bc5:	83 f8 ff             	cmp    $0xffffffff,%eax
81002bc8:	74 2a                	je     81002bf4 <_printf_i+0x444>
81002bca:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81002bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bd1:	8b 40 0c             	mov    0xc(%eax),%eax
81002bd4:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002bd7:	29 d0                	sub    %edx,%eax
81002bd9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002bdc:	7c d0                	jl     81002bae <_printf_i+0x3fe>
81002bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81002be1:	8b 50 0c             	mov    0xc(%eax),%edx
81002be4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002be7:	39 c2                	cmp    %eax,%edx
81002be9:	0f 4d c2             	cmovge %edx,%eax
81002bec:	eb 0c                	jmp    81002bfa <_printf_i+0x44a>
81002bee:	90                   	nop
81002bef:	eb 04                	jmp    81002bf5 <_printf_i+0x445>
81002bf1:	90                   	nop
81002bf2:	eb 01                	jmp    81002bf5 <_printf_i+0x445>
81002bf4:	90                   	nop
81002bf5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002bfa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002bfd:	c9                   	leave  
81002bfe:	c3                   	ret    

81002bff <_read_r>:
81002bff:	55                   	push   %ebp
81002c00:	89 e5                	mov    %esp,%ebp
81002c02:	83 ec 18             	sub    $0x18,%esp
81002c05:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81002c0c:	00 00 00 
81002c0f:	83 ec 04             	sub    $0x4,%esp
81002c12:	ff 75 14             	pushl  0x14(%ebp)
81002c15:	ff 75 10             	pushl  0x10(%ebp)
81002c18:	ff 75 0c             	pushl  0xc(%ebp)
81002c1b:	e8 5d d6 ff ff       	call   8100027d <read>
81002c20:	83 c4 10             	add    $0x10,%esp
81002c23:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c26:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002c2a:	75 14                	jne    81002c40 <_read_r+0x41>
81002c2c:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81002c31:	85 c0                	test   %eax,%eax
81002c33:	74 0b                	je     81002c40 <_read_r+0x41>
81002c35:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
81002c3b:	8b 45 08             	mov    0x8(%ebp),%eax
81002c3e:	89 10                	mov    %edx,(%eax)
81002c40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c43:	c9                   	leave  
81002c44:	c3                   	ret    

81002c45 <cleanup_glue>:
81002c45:	55                   	push   %ebp
81002c46:	89 e5                	mov    %esp,%ebp
81002c48:	83 ec 08             	sub    $0x8,%esp
81002c4b:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c4e:	8b 00                	mov    (%eax),%eax
81002c50:	85 c0                	test   %eax,%eax
81002c52:	74 14                	je     81002c68 <cleanup_glue+0x23>
81002c54:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c57:	8b 00                	mov    (%eax),%eax
81002c59:	83 ec 08             	sub    $0x8,%esp
81002c5c:	50                   	push   %eax
81002c5d:	ff 75 08             	pushl  0x8(%ebp)
81002c60:	e8 e0 ff ff ff       	call   81002c45 <cleanup_glue>
81002c65:	83 c4 10             	add    $0x10,%esp
81002c68:	83 ec 08             	sub    $0x8,%esp
81002c6b:	ff 75 0c             	pushl  0xc(%ebp)
81002c6e:	ff 75 08             	pushl  0x8(%ebp)
81002c71:	e8 f2 dd ff ff       	call   81000a68 <_free_r>
81002c76:	83 c4 10             	add    $0x10,%esp
81002c79:	90                   	nop
81002c7a:	c9                   	leave  
81002c7b:	c3                   	ret    

81002c7c <_reclaim_reent>:
81002c7c:	55                   	push   %ebp
81002c7d:	89 e5                	mov    %esp,%ebp
81002c7f:	83 ec 28             	sub    $0x28,%esp
81002c82:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81002c87:	39 45 08             	cmp    %eax,0x8(%ebp)
81002c8a:	0f 84 49 01 00 00    	je     81002dd9 <_reclaim_reent+0x15d>
81002c90:	8b 45 08             	mov    0x8(%ebp),%eax
81002c93:	8b 40 4c             	mov    0x4c(%eax),%eax
81002c96:	85 c0                	test   %eax,%eax
81002c98:	74 64                	je     81002cfe <_reclaim_reent+0x82>
81002c9a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002ca1:	eb 3e                	jmp    81002ce1 <_reclaim_reent+0x65>
81002ca3:	8b 45 08             	mov    0x8(%ebp),%eax
81002ca6:	8b 50 4c             	mov    0x4c(%eax),%edx
81002ca9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cac:	c1 e0 02             	shl    $0x2,%eax
81002caf:	01 d0                	add    %edx,%eax
81002cb1:	8b 00                	mov    (%eax),%eax
81002cb3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002cb6:	eb 1f                	jmp    81002cd7 <_reclaim_reent+0x5b>
81002cb8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cbb:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002cbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cc1:	8b 00                	mov    (%eax),%eax
81002cc3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002cc6:	83 ec 08             	sub    $0x8,%esp
81002cc9:	ff 75 e8             	pushl  -0x18(%ebp)
81002ccc:	ff 75 08             	pushl  0x8(%ebp)
81002ccf:	e8 94 dd ff ff       	call   81000a68 <_free_r>
81002cd4:	83 c4 10             	add    $0x10,%esp
81002cd7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002cdb:	75 db                	jne    81002cb8 <_reclaim_reent+0x3c>
81002cdd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002ce1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ce4:	83 f8 1f             	cmp    $0x1f,%eax
81002ce7:	76 ba                	jbe    81002ca3 <_reclaim_reent+0x27>
81002ce9:	8b 45 08             	mov    0x8(%ebp),%eax
81002cec:	8b 40 4c             	mov    0x4c(%eax),%eax
81002cef:	83 ec 08             	sub    $0x8,%esp
81002cf2:	50                   	push   %eax
81002cf3:	ff 75 08             	pushl  0x8(%ebp)
81002cf6:	e8 6d dd ff ff       	call   81000a68 <_free_r>
81002cfb:	83 c4 10             	add    $0x10,%esp
81002cfe:	8b 45 08             	mov    0x8(%ebp),%eax
81002d01:	8b 40 40             	mov    0x40(%eax),%eax
81002d04:	85 c0                	test   %eax,%eax
81002d06:	74 15                	je     81002d1d <_reclaim_reent+0xa1>
81002d08:	8b 45 08             	mov    0x8(%ebp),%eax
81002d0b:	8b 40 40             	mov    0x40(%eax),%eax
81002d0e:	83 ec 08             	sub    $0x8,%esp
81002d11:	50                   	push   %eax
81002d12:	ff 75 08             	pushl  0x8(%ebp)
81002d15:	e8 4e dd ff ff       	call   81000a68 <_free_r>
81002d1a:	83 c4 10             	add    $0x10,%esp
81002d1d:	8b 45 08             	mov    0x8(%ebp),%eax
81002d20:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81002d26:	85 c0                	test   %eax,%eax
81002d28:	74 50                	je     81002d7a <_reclaim_reent+0xfe>
81002d2a:	8b 45 08             	mov    0x8(%ebp),%eax
81002d2d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81002d33:	8b 55 08             	mov    0x8(%ebp),%edx
81002d36:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81002d3c:	39 d0                	cmp    %edx,%eax
81002d3e:	74 3a                	je     81002d7a <_reclaim_reent+0xfe>
81002d40:	8b 45 08             	mov    0x8(%ebp),%eax
81002d43:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81002d49:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d4c:	eb 1f                	jmp    81002d6d <_reclaim_reent+0xf1>
81002d4e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d51:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002d54:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d57:	8b 00                	mov    (%eax),%eax
81002d59:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d5c:	83 ec 08             	sub    $0x8,%esp
81002d5f:	ff 75 e4             	pushl  -0x1c(%ebp)
81002d62:	ff 75 08             	pushl  0x8(%ebp)
81002d65:	e8 fe dc ff ff       	call   81000a68 <_free_r>
81002d6a:	83 c4 10             	add    $0x10,%esp
81002d6d:	8b 45 08             	mov    0x8(%ebp),%eax
81002d70:	05 4c 01 00 00       	add    $0x14c,%eax
81002d75:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002d78:	75 d4                	jne    81002d4e <_reclaim_reent+0xd2>
81002d7a:	8b 45 08             	mov    0x8(%ebp),%eax
81002d7d:	8b 40 54             	mov    0x54(%eax),%eax
81002d80:	85 c0                	test   %eax,%eax
81002d82:	74 15                	je     81002d99 <_reclaim_reent+0x11d>
81002d84:	8b 45 08             	mov    0x8(%ebp),%eax
81002d87:	8b 40 54             	mov    0x54(%eax),%eax
81002d8a:	83 ec 08             	sub    $0x8,%esp
81002d8d:	50                   	push   %eax
81002d8e:	ff 75 08             	pushl  0x8(%ebp)
81002d91:	e8 d2 dc ff ff       	call   81000a68 <_free_r>
81002d96:	83 c4 10             	add    $0x10,%esp
81002d99:	8b 45 08             	mov    0x8(%ebp),%eax
81002d9c:	8b 40 38             	mov    0x38(%eax),%eax
81002d9f:	85 c0                	test   %eax,%eax
81002da1:	74 36                	je     81002dd9 <_reclaim_reent+0x15d>
81002da3:	8b 45 08             	mov    0x8(%ebp),%eax
81002da6:	8b 40 3c             	mov    0x3c(%eax),%eax
81002da9:	83 ec 0c             	sub    $0xc,%esp
81002dac:	ff 75 08             	pushl  0x8(%ebp)
81002daf:	ff d0                	call   *%eax
81002db1:	83 c4 10             	add    $0x10,%esp
81002db4:	8b 45 08             	mov    0x8(%ebp),%eax
81002db7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81002dbd:	85 c0                	test   %eax,%eax
81002dbf:	74 18                	je     81002dd9 <_reclaim_reent+0x15d>
81002dc1:	8b 45 08             	mov    0x8(%ebp),%eax
81002dc4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81002dca:	83 ec 08             	sub    $0x8,%esp
81002dcd:	50                   	push   %eax
81002dce:	ff 75 08             	pushl  0x8(%ebp)
81002dd1:	e8 6f fe ff ff       	call   81002c45 <cleanup_glue>
81002dd6:	83 c4 10             	add    $0x10,%esp
81002dd9:	90                   	nop
81002dda:	c9                   	leave  
81002ddb:	c3                   	ret    

81002ddc <lflush>:
81002ddc:	55                   	push   %ebp
81002ddd:	89 e5                	mov    %esp,%ebp
81002ddf:	83 ec 08             	sub    $0x8,%esp
81002de2:	8b 45 08             	mov    0x8(%ebp),%eax
81002de5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002de9:	98                   	cwtl   
81002dea:	83 e0 09             	and    $0x9,%eax
81002ded:	83 f8 09             	cmp    $0x9,%eax
81002df0:	75 10                	jne    81002e02 <lflush+0x26>
81002df2:	83 ec 0c             	sub    $0xc,%esp
81002df5:	ff 75 08             	pushl  0x8(%ebp)
81002df8:	e8 30 d8 ff ff       	call   8100062d <fflush>
81002dfd:	83 c4 10             	add    $0x10,%esp
81002e00:	eb 05                	jmp    81002e07 <lflush+0x2b>
81002e02:	b8 00 00 00 00       	mov    $0x0,%eax
81002e07:	c9                   	leave  
81002e08:	c3                   	ret    

81002e09 <__srefill_r>:
81002e09:	55                   	push   %ebp
81002e0a:	89 e5                	mov    %esp,%ebp
81002e0c:	56                   	push   %esi
81002e0d:	53                   	push   %ebx
81002e0e:	83 ec 10             	sub    $0x10,%esp
81002e11:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002e14:	8b 45 08             	mov    0x8(%ebp),%eax
81002e17:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e1a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002e1e:	74 18                	je     81002e38 <__srefill_r+0x2f>
81002e20:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e23:	8b 40 38             	mov    0x38(%eax),%eax
81002e26:	85 c0                	test   %eax,%eax
81002e28:	75 0e                	jne    81002e38 <__srefill_r+0x2f>
81002e2a:	83 ec 0c             	sub    $0xc,%esp
81002e2d:	ff 75 f4             	pushl  -0xc(%ebp)
81002e30:	e8 26 db ff ff       	call   8100095b <__sinit>
81002e35:	83 c4 10             	add    $0x10,%esp
81002e38:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e3c:	98                   	cwtl   
81002e3d:	25 00 20 00 00       	and    $0x2000,%eax
81002e42:	85 c0                	test   %eax,%eax
81002e44:	75 14                	jne    81002e5a <__srefill_r+0x51>
81002e46:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e4a:	80 cc 20             	or     $0x20,%ah
81002e4d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002e51:	8b 43 64             	mov    0x64(%ebx),%eax
81002e54:	80 e4 df             	and    $0xdf,%ah
81002e57:	89 43 64             	mov    %eax,0x64(%ebx)
81002e5a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002e61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e65:	98                   	cwtl   
81002e66:	83 e0 20             	and    $0x20,%eax
81002e69:	85 c0                	test   %eax,%eax
81002e6b:	74 0a                	je     81002e77 <__srefill_r+0x6e>
81002e6d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e72:	e9 8c 01 00 00       	jmp    81003003 <__srefill_r+0x1fa>
81002e77:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e7b:	98                   	cwtl   
81002e7c:	83 e0 04             	and    $0x4,%eax
81002e7f:	85 c0                	test   %eax,%eax
81002e81:	75 79                	jne    81002efc <__srefill_r+0xf3>
81002e83:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e87:	98                   	cwtl   
81002e88:	83 e0 10             	and    $0x10,%eax
81002e8b:	85 c0                	test   %eax,%eax
81002e8d:	75 1e                	jne    81002ead <__srefill_r+0xa4>
81002e8f:	8b 45 08             	mov    0x8(%ebp),%eax
81002e92:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002e98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e9c:	83 c8 40             	or     $0x40,%eax
81002e9f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ea3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ea8:	e9 56 01 00 00       	jmp    81003003 <__srefill_r+0x1fa>
81002ead:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002eb1:	98                   	cwtl   
81002eb2:	83 e0 08             	and    $0x8,%eax
81002eb5:	85 c0                	test   %eax,%eax
81002eb7:	74 36                	je     81002eef <__srefill_r+0xe6>
81002eb9:	83 ec 08             	sub    $0x8,%esp
81002ebc:	53                   	push   %ebx
81002ebd:	ff 75 08             	pushl  0x8(%ebp)
81002ec0:	e8 10 d7 ff ff       	call   810005d5 <_fflush_r>
81002ec5:	83 c4 10             	add    $0x10,%esp
81002ec8:	85 c0                	test   %eax,%eax
81002eca:	74 0a                	je     81002ed6 <__srefill_r+0xcd>
81002ecc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ed1:	e9 2d 01 00 00       	jmp    81003003 <__srefill_r+0x1fa>
81002ed6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002eda:	83 e0 f7             	and    $0xfffffff7,%eax
81002edd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ee1:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002ee8:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81002eef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ef3:	83 c8 04             	or     $0x4,%eax
81002ef6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002efa:	eb 46                	jmp    81002f42 <__srefill_r+0x139>
81002efc:	8b 43 30             	mov    0x30(%ebx),%eax
81002eff:	85 c0                	test   %eax,%eax
81002f01:	74 3f                	je     81002f42 <__srefill_r+0x139>
81002f03:	8b 53 30             	mov    0x30(%ebx),%edx
81002f06:	8d 43 40             	lea    0x40(%ebx),%eax
81002f09:	39 c2                	cmp    %eax,%edx
81002f0b:	74 12                	je     81002f1f <__srefill_r+0x116>
81002f0d:	8b 43 30             	mov    0x30(%ebx),%eax
81002f10:	83 ec 08             	sub    $0x8,%esp
81002f13:	50                   	push   %eax
81002f14:	ff 75 08             	pushl  0x8(%ebp)
81002f17:	e8 4c db ff ff       	call   81000a68 <_free_r>
81002f1c:	83 c4 10             	add    $0x10,%esp
81002f1f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002f26:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002f29:	89 43 04             	mov    %eax,0x4(%ebx)
81002f2c:	8b 43 04             	mov    0x4(%ebx),%eax
81002f2f:	85 c0                	test   %eax,%eax
81002f31:	74 0f                	je     81002f42 <__srefill_r+0x139>
81002f33:	8b 43 38             	mov    0x38(%ebx),%eax
81002f36:	89 03                	mov    %eax,(%ebx)
81002f38:	b8 00 00 00 00       	mov    $0x0,%eax
81002f3d:	e9 c1 00 00 00       	jmp    81003003 <__srefill_r+0x1fa>
81002f42:	8b 43 10             	mov    0x10(%ebx),%eax
81002f45:	85 c0                	test   %eax,%eax
81002f47:	75 0f                	jne    81002f58 <__srefill_r+0x14f>
81002f49:	83 ec 08             	sub    $0x8,%esp
81002f4c:	53                   	push   %ebx
81002f4d:	ff 75 08             	pushl  0x8(%ebp)
81002f50:	e8 3c 0a 00 00       	call   81003991 <__smakebuf_r>
81002f55:	83 c4 10             	add    $0x10,%esp
81002f58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002f5c:	98                   	cwtl   
81002f5d:	83 e0 03             	and    $0x3,%eax
81002f60:	85 c0                	test   %eax,%eax
81002f62:	74 48                	je     81002fac <__srefill_r+0x1a3>
81002f64:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002f68:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81002f6c:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002f72:	a1 fc 48 00 81       	mov    0x810048fc,%eax
81002f77:	83 ec 08             	sub    $0x8,%esp
81002f7a:	68 dc 2d 00 81       	push   $0x81002ddc
81002f7f:	50                   	push   %eax
81002f80:	e8 1f e0 ff ff       	call   81000fa4 <_fwalk>
81002f85:	83 c4 10             	add    $0x10,%esp
81002f88:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81002f8c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002f90:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002f94:	98                   	cwtl   
81002f95:	83 e0 09             	and    $0x9,%eax
81002f98:	83 f8 09             	cmp    $0x9,%eax
81002f9b:	75 0f                	jne    81002fac <__srefill_r+0x1a3>
81002f9d:	83 ec 08             	sub    $0x8,%esp
81002fa0:	53                   	push   %ebx
81002fa1:	ff 75 08             	pushl  0x8(%ebp)
81002fa4:	e8 06 d4 ff ff       	call   810003af <__sflush_r>
81002fa9:	83 c4 10             	add    $0x10,%esp
81002fac:	8b 43 10             	mov    0x10(%ebx),%eax
81002faf:	89 03                	mov    %eax,(%ebx)
81002fb1:	8b 43 20             	mov    0x20(%ebx),%eax
81002fb4:	8b 73 14             	mov    0x14(%ebx),%esi
81002fb7:	8b 0b                	mov    (%ebx),%ecx
81002fb9:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002fbc:	56                   	push   %esi
81002fbd:	51                   	push   %ecx
81002fbe:	52                   	push   %edx
81002fbf:	ff 75 08             	pushl  0x8(%ebp)
81002fc2:	ff d0                	call   *%eax
81002fc4:	83 c4 10             	add    $0x10,%esp
81002fc7:	89 43 04             	mov    %eax,0x4(%ebx)
81002fca:	8b 43 04             	mov    0x4(%ebx),%eax
81002fcd:	85 c0                	test   %eax,%eax
81002fcf:	7f 2d                	jg     81002ffe <__srefill_r+0x1f5>
81002fd1:	8b 43 04             	mov    0x4(%ebx),%eax
81002fd4:	85 c0                	test   %eax,%eax
81002fd6:	75 0d                	jne    81002fe5 <__srefill_r+0x1dc>
81002fd8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002fdc:	83 c8 20             	or     $0x20,%eax
81002fdf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002fe3:	eb 12                	jmp    81002ff7 <__srefill_r+0x1ee>
81002fe5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002fec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ff0:	83 c8 40             	or     $0x40,%eax
81002ff3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ff7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ffc:	eb 05                	jmp    81003003 <__srefill_r+0x1fa>
81002ffe:	b8 00 00 00 00       	mov    $0x0,%eax
81003003:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003006:	5b                   	pop    %ebx
81003007:	5e                   	pop    %esi
81003008:	5d                   	pop    %ebp
81003009:	c3                   	ret    

8100300a <__swbuf_r>:
8100300a:	55                   	push   %ebp
8100300b:	89 e5                	mov    %esp,%ebp
8100300d:	57                   	push   %edi
8100300e:	56                   	push   %esi
8100300f:	53                   	push   %ebx
81003010:	83 ec 1c             	sub    $0x1c,%esp
81003013:	8b 7d 0c             	mov    0xc(%ebp),%edi
81003016:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003019:	8b 45 08             	mov    0x8(%ebp),%eax
8100301c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100301f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003023:	74 18                	je     8100303d <__swbuf_r+0x33>
81003025:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003028:	8b 40 38             	mov    0x38(%eax),%eax
8100302b:	85 c0                	test   %eax,%eax
8100302d:	75 0e                	jne    8100303d <__swbuf_r+0x33>
8100302f:	83 ec 0c             	sub    $0xc,%esp
81003032:	ff 75 e4             	pushl  -0x1c(%ebp)
81003035:	e8 21 d9 ff ff       	call   8100095b <__sinit>
8100303a:	83 c4 10             	add    $0x10,%esp
8100303d:	8b 43 18             	mov    0x18(%ebx),%eax
81003040:	89 43 08             	mov    %eax,0x8(%ebx)
81003043:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003047:	98                   	cwtl   
81003048:	83 e0 08             	and    $0x8,%eax
8100304b:	85 c0                	test   %eax,%eax
8100304d:	74 07                	je     81003056 <__swbuf_r+0x4c>
8100304f:	8b 43 10             	mov    0x10(%ebx),%eax
81003052:	85 c0                	test   %eax,%eax
81003054:	75 1d                	jne    81003073 <__swbuf_r+0x69>
81003056:	83 ec 08             	sub    $0x8,%esp
81003059:	53                   	push   %ebx
8100305a:	ff 75 08             	pushl  0x8(%ebp)
8100305d:	e8 db 00 00 00       	call   8100313d <__swsetup_r>
81003062:	83 c4 10             	add    $0x10,%esp
81003065:	85 c0                	test   %eax,%eax
81003067:	74 0a                	je     81003073 <__swbuf_r+0x69>
81003069:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100306e:	e9 a1 00 00 00       	jmp    81003114 <__swbuf_r+0x10a>
81003073:	89 f8                	mov    %edi,%eax
81003075:	0f b6 f8             	movzbl %al,%edi
81003078:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100307c:	98                   	cwtl   
8100307d:	25 00 20 00 00       	and    $0x2000,%eax
81003082:	85 c0                	test   %eax,%eax
81003084:	75 14                	jne    8100309a <__swbuf_r+0x90>
81003086:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100308a:	80 cc 20             	or     $0x20,%ah
8100308d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003091:	8b 43 64             	mov    0x64(%ebx),%eax
81003094:	80 e4 df             	and    $0xdf,%ah
81003097:	89 43 64             	mov    %eax,0x64(%ebx)
8100309a:	8b 03                	mov    (%ebx),%eax
8100309c:	8b 53 10             	mov    0x10(%ebx),%edx
8100309f:	29 d0                	sub    %edx,%eax
810030a1:	89 c6                	mov    %eax,%esi
810030a3:	8b 43 14             	mov    0x14(%ebx),%eax
810030a6:	39 c6                	cmp    %eax,%esi
810030a8:	7c 1f                	jl     810030c9 <__swbuf_r+0xbf>
810030aa:	83 ec 08             	sub    $0x8,%esp
810030ad:	53                   	push   %ebx
810030ae:	ff 75 08             	pushl  0x8(%ebp)
810030b1:	e8 1f d5 ff ff       	call   810005d5 <_fflush_r>
810030b6:	83 c4 10             	add    $0x10,%esp
810030b9:	85 c0                	test   %eax,%eax
810030bb:	74 07                	je     810030c4 <__swbuf_r+0xba>
810030bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810030c2:	eb 50                	jmp    81003114 <__swbuf_r+0x10a>
810030c4:	be 00 00 00 00       	mov    $0x0,%esi
810030c9:	8b 43 08             	mov    0x8(%ebx),%eax
810030cc:	83 e8 01             	sub    $0x1,%eax
810030cf:	89 43 08             	mov    %eax,0x8(%ebx)
810030d2:	8b 03                	mov    (%ebx),%eax
810030d4:	8d 50 01             	lea    0x1(%eax),%edx
810030d7:	89 13                	mov    %edx,(%ebx)
810030d9:	89 fa                	mov    %edi,%edx
810030db:	88 10                	mov    %dl,(%eax)
810030dd:	83 c6 01             	add    $0x1,%esi
810030e0:	8b 43 14             	mov    0x14(%ebx),%eax
810030e3:	39 c6                	cmp    %eax,%esi
810030e5:	74 11                	je     810030f8 <__swbuf_r+0xee>
810030e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030eb:	98                   	cwtl   
810030ec:	83 e0 01             	and    $0x1,%eax
810030ef:	85 c0                	test   %eax,%eax
810030f1:	74 1f                	je     81003112 <__swbuf_r+0x108>
810030f3:	83 ff 0a             	cmp    $0xa,%edi
810030f6:	75 1a                	jne    81003112 <__swbuf_r+0x108>
810030f8:	83 ec 08             	sub    $0x8,%esp
810030fb:	53                   	push   %ebx
810030fc:	ff 75 08             	pushl  0x8(%ebp)
810030ff:	e8 d1 d4 ff ff       	call   810005d5 <_fflush_r>
81003104:	83 c4 10             	add    $0x10,%esp
81003107:	85 c0                	test   %eax,%eax
81003109:	74 07                	je     81003112 <__swbuf_r+0x108>
8100310b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003110:	eb 02                	jmp    81003114 <__swbuf_r+0x10a>
81003112:	89 f8                	mov    %edi,%eax
81003114:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003117:	5b                   	pop    %ebx
81003118:	5e                   	pop    %esi
81003119:	5f                   	pop    %edi
8100311a:	5d                   	pop    %ebp
8100311b:	c3                   	ret    

8100311c <__swbuf>:
8100311c:	55                   	push   %ebp
8100311d:	89 e5                	mov    %esp,%ebp
8100311f:	83 ec 08             	sub    $0x8,%esp
81003122:	8b 55 08             	mov    0x8(%ebp),%edx
81003125:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81003128:	a1 c4 50 00 81       	mov    0x810050c4,%eax
8100312d:	83 ec 04             	sub    $0x4,%esp
81003130:	51                   	push   %ecx
81003131:	52                   	push   %edx
81003132:	50                   	push   %eax
81003133:	e8 d2 fe ff ff       	call   8100300a <__swbuf_r>
81003138:	83 c4 10             	add    $0x10,%esp
8100313b:	c9                   	leave  
8100313c:	c3                   	ret    

8100313d <__swsetup_r>:
8100313d:	55                   	push   %ebp
8100313e:	89 e5                	mov    %esp,%ebp
81003140:	53                   	push   %ebx
81003141:	83 ec 14             	sub    $0x14,%esp
81003144:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003147:	a1 c4 50 00 81       	mov    0x810050c4,%eax
8100314c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100314f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003153:	74 18                	je     8100316d <__swsetup_r+0x30>
81003155:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003158:	8b 40 38             	mov    0x38(%eax),%eax
8100315b:	85 c0                	test   %eax,%eax
8100315d:	75 0e                	jne    8100316d <__swsetup_r+0x30>
8100315f:	83 ec 0c             	sub    $0xc,%esp
81003162:	ff 75 f4             	pushl  -0xc(%ebp)
81003165:	e8 f1 d7 ff ff       	call   8100095b <__sinit>
8100316a:	83 c4 10             	add    $0x10,%esp
8100316d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003171:	98                   	cwtl   
81003172:	83 e0 08             	and    $0x8,%eax
81003175:	85 c0                	test   %eax,%eax
81003177:	0f 85 82 00 00 00    	jne    810031ff <__swsetup_r+0xc2>
8100317d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003181:	98                   	cwtl   
81003182:	83 e0 10             	and    $0x10,%eax
81003185:	85 c0                	test   %eax,%eax
81003187:	75 1e                	jne    810031a7 <__swsetup_r+0x6a>
81003189:	8b 45 08             	mov    0x8(%ebp),%eax
8100318c:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003192:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003196:	83 c8 40             	or     $0x40,%eax
81003199:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100319d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031a2:	e9 ec 00 00 00       	jmp    81003293 <__swsetup_r+0x156>
810031a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031ab:	98                   	cwtl   
810031ac:	83 e0 04             	and    $0x4,%eax
810031af:	85 c0                	test   %eax,%eax
810031b1:	74 41                	je     810031f4 <__swsetup_r+0xb7>
810031b3:	8b 43 30             	mov    0x30(%ebx),%eax
810031b6:	85 c0                	test   %eax,%eax
810031b8:	74 23                	je     810031dd <__swsetup_r+0xa0>
810031ba:	8b 53 30             	mov    0x30(%ebx),%edx
810031bd:	8d 43 40             	lea    0x40(%ebx),%eax
810031c0:	39 c2                	cmp    %eax,%edx
810031c2:	74 12                	je     810031d6 <__swsetup_r+0x99>
810031c4:	8b 43 30             	mov    0x30(%ebx),%eax
810031c7:	83 ec 08             	sub    $0x8,%esp
810031ca:	50                   	push   %eax
810031cb:	ff 75 08             	pushl  0x8(%ebp)
810031ce:	e8 95 d8 ff ff       	call   81000a68 <_free_r>
810031d3:	83 c4 10             	add    $0x10,%esp
810031d6:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810031dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031e1:	83 e0 db             	and    $0xffffffdb,%eax
810031e4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810031e8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810031ef:	8b 43 10             	mov    0x10(%ebx),%eax
810031f2:	89 03                	mov    %eax,(%ebx)
810031f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031f8:	83 c8 08             	or     $0x8,%eax
810031fb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810031ff:	8b 43 10             	mov    0x10(%ebx),%eax
81003202:	85 c0                	test   %eax,%eax
81003204:	75 2b                	jne    81003231 <__swsetup_r+0xf4>
81003206:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100320a:	98                   	cwtl   
8100320b:	25 00 02 00 00       	and    $0x200,%eax
81003210:	85 c0                	test   %eax,%eax
81003212:	74 0e                	je     81003222 <__swsetup_r+0xe5>
81003214:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003218:	98                   	cwtl   
81003219:	25 80 00 00 00       	and    $0x80,%eax
8100321e:	85 c0                	test   %eax,%eax
81003220:	74 0f                	je     81003231 <__swsetup_r+0xf4>
81003222:	83 ec 08             	sub    $0x8,%esp
81003225:	53                   	push   %ebx
81003226:	ff 75 08             	pushl  0x8(%ebp)
81003229:	e8 63 07 00 00       	call   81003991 <__smakebuf_r>
8100322e:	83 c4 10             	add    $0x10,%esp
81003231:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003235:	98                   	cwtl   
81003236:	83 e0 01             	and    $0x1,%eax
81003239:	85 c0                	test   %eax,%eax
8100323b:	74 11                	je     8100324e <__swsetup_r+0x111>
8100323d:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003244:	8b 43 14             	mov    0x14(%ebx),%eax
81003247:	f7 d8                	neg    %eax
81003249:	89 43 18             	mov    %eax,0x18(%ebx)
8100324c:	eb 19                	jmp    81003267 <__swsetup_r+0x12a>
8100324e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003252:	98                   	cwtl   
81003253:	83 e0 02             	and    $0x2,%eax
81003256:	85 c0                	test   %eax,%eax
81003258:	75 05                	jne    8100325f <__swsetup_r+0x122>
8100325a:	8b 43 14             	mov    0x14(%ebx),%eax
8100325d:	eb 05                	jmp    81003264 <__swsetup_r+0x127>
8100325f:	b8 00 00 00 00       	mov    $0x0,%eax
81003264:	89 43 08             	mov    %eax,0x8(%ebx)
81003267:	8b 43 10             	mov    0x10(%ebx),%eax
8100326a:	85 c0                	test   %eax,%eax
8100326c:	75 20                	jne    8100328e <__swsetup_r+0x151>
8100326e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003272:	98                   	cwtl   
81003273:	25 80 00 00 00       	and    $0x80,%eax
81003278:	85 c0                	test   %eax,%eax
8100327a:	74 12                	je     8100328e <__swsetup_r+0x151>
8100327c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003280:	83 c8 40             	or     $0x40,%eax
81003283:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003287:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100328c:	eb 05                	jmp    81003293 <__swsetup_r+0x156>
8100328e:	b8 00 00 00 00       	mov    $0x0,%eax
81003293:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003296:	c9                   	leave  
81003297:	c3                   	ret    

81003298 <__sputc_r>:
81003298:	55                   	push   %ebp
81003299:	89 e5                	mov    %esp,%ebp
8100329b:	83 ec 08             	sub    $0x8,%esp
8100329e:	8b 45 10             	mov    0x10(%ebp),%eax
810032a1:	8b 40 08             	mov    0x8(%eax),%eax
810032a4:	8d 50 ff             	lea    -0x1(%eax),%edx
810032a7:	8b 45 10             	mov    0x10(%ebp),%eax
810032aa:	89 50 08             	mov    %edx,0x8(%eax)
810032ad:	8b 45 10             	mov    0x10(%ebp),%eax
810032b0:	8b 40 08             	mov    0x8(%eax),%eax
810032b3:	85 c0                	test   %eax,%eax
810032b5:	79 17                	jns    810032ce <__sputc_r+0x36>
810032b7:	8b 45 10             	mov    0x10(%ebp),%eax
810032ba:	8b 50 08             	mov    0x8(%eax),%edx
810032bd:	8b 45 10             	mov    0x10(%ebp),%eax
810032c0:	8b 40 18             	mov    0x18(%eax),%eax
810032c3:	39 c2                	cmp    %eax,%edx
810032c5:	7c 21                	jl     810032e8 <__sputc_r+0x50>
810032c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810032ca:	3c 0a                	cmp    $0xa,%al
810032cc:	74 1a                	je     810032e8 <__sputc_r+0x50>
810032ce:	8b 45 10             	mov    0x10(%ebp),%eax
810032d1:	8b 00                	mov    (%eax),%eax
810032d3:	8d 48 01             	lea    0x1(%eax),%ecx
810032d6:	8b 55 10             	mov    0x10(%ebp),%edx
810032d9:	89 0a                	mov    %ecx,(%edx)
810032db:	8b 55 0c             	mov    0xc(%ebp),%edx
810032de:	88 10                	mov    %dl,(%eax)
810032e0:	0f b6 00             	movzbl (%eax),%eax
810032e3:	0f b6 c0             	movzbl %al,%eax
810032e6:	eb 14                	jmp    810032fc <__sputc_r+0x64>
810032e8:	83 ec 04             	sub    $0x4,%esp
810032eb:	ff 75 10             	pushl  0x10(%ebp)
810032ee:	ff 75 0c             	pushl  0xc(%ebp)
810032f1:	ff 75 08             	pushl  0x8(%ebp)
810032f4:	e8 11 fd ff ff       	call   8100300a <__swbuf_r>
810032f9:	83 c4 10             	add    $0x10,%esp
810032fc:	c9                   	leave  
810032fd:	c3                   	ret    

810032fe <__fputwc>:
810032fe:	55                   	push   %ebp
810032ff:	89 e5                	mov    %esp,%ebp
81003301:	83 ec 18             	sub    $0x18,%esp
81003304:	e8 55 06 00 00       	call   8100395e <__locale_mb_cur_max>
81003309:	83 f8 01             	cmp    $0x1,%eax
8100330c:	75 1e                	jne    8100332c <__fputwc+0x2e>
8100330e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003312:	7e 18                	jle    8100332c <__fputwc+0x2e>
81003314:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
8100331b:	7f 0f                	jg     8100332c <__fputwc+0x2e>
8100331d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003320:	88 45 ef             	mov    %al,-0x11(%ebp)
81003323:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8100332a:	eb 3c                	jmp    81003368 <__fputwc+0x6a>
8100332c:	8b 45 10             	mov    0x10(%ebp),%eax
8100332f:	83 c0 5c             	add    $0x5c,%eax
81003332:	50                   	push   %eax
81003333:	ff 75 0c             	pushl  0xc(%ebp)
81003336:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003339:	50                   	push   %eax
8100333a:	ff 75 08             	pushl  0x8(%ebp)
8100333d:	e8 6e 13 00 00       	call   810046b0 <_wcrtomb_r>
81003342:	83 c4 10             	add    $0x10,%esp
81003345:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003348:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100334c:	75 1a                	jne    81003368 <__fputwc+0x6a>
8100334e:	8b 45 10             	mov    0x10(%ebp),%eax
81003351:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003355:	83 c8 40             	or     $0x40,%eax
81003358:	89 c2                	mov    %eax,%edx
8100335a:	8b 45 10             	mov    0x10(%ebp),%eax
8100335d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003361:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003366:	eb 44                	jmp    810033ac <__fputwc+0xae>
81003368:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100336f:	eb 30                	jmp    810033a1 <__fputwc+0xa3>
81003371:	8d 55 ef             	lea    -0x11(%ebp),%edx
81003374:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003377:	01 d0                	add    %edx,%eax
81003379:	0f b6 00             	movzbl (%eax),%eax
8100337c:	0f b6 c0             	movzbl %al,%eax
8100337f:	83 ec 04             	sub    $0x4,%esp
81003382:	ff 75 10             	pushl  0x10(%ebp)
81003385:	50                   	push   %eax
81003386:	ff 75 08             	pushl  0x8(%ebp)
81003389:	e8 0a ff ff ff       	call   81003298 <__sputc_r>
8100338e:	83 c4 10             	add    $0x10,%esp
81003391:	83 f8 ff             	cmp    $0xffffffff,%eax
81003394:	75 07                	jne    8100339d <__fputwc+0x9f>
81003396:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100339b:	eb 0f                	jmp    810033ac <__fputwc+0xae>
8100339d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810033a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033a4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810033a7:	72 c8                	jb     81003371 <__fputwc+0x73>
810033a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810033ac:	c9                   	leave  
810033ad:	c3                   	ret    

810033ae <_fputwc_r>:
810033ae:	55                   	push   %ebp
810033af:	89 e5                	mov    %esp,%ebp
810033b1:	83 ec 18             	sub    $0x18,%esp
810033b4:	8b 45 10             	mov    0x10(%ebp),%eax
810033b7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810033bb:	98                   	cwtl   
810033bc:	25 00 20 00 00       	and    $0x2000,%eax
810033c1:	85 c0                	test   %eax,%eax
810033c3:	75 24                	jne    810033e9 <_fputwc_r+0x3b>
810033c5:	8b 45 10             	mov    0x10(%ebp),%eax
810033c8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810033cc:	80 cc 20             	or     $0x20,%ah
810033cf:	89 c2                	mov    %eax,%edx
810033d1:	8b 45 10             	mov    0x10(%ebp),%eax
810033d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810033d8:	8b 45 10             	mov    0x10(%ebp),%eax
810033db:	8b 40 64             	mov    0x64(%eax),%eax
810033de:	80 cc 20             	or     $0x20,%ah
810033e1:	89 c2                	mov    %eax,%edx
810033e3:	8b 45 10             	mov    0x10(%ebp),%eax
810033e6:	89 50 64             	mov    %edx,0x64(%eax)
810033e9:	83 ec 04             	sub    $0x4,%esp
810033ec:	ff 75 10             	pushl  0x10(%ebp)
810033ef:	ff 75 0c             	pushl  0xc(%ebp)
810033f2:	ff 75 08             	pushl  0x8(%ebp)
810033f5:	e8 04 ff ff ff       	call   810032fe <__fputwc>
810033fa:	83 c4 10             	add    $0x10,%esp
810033fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003400:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003403:	c9                   	leave  
81003404:	c3                   	ret    

81003405 <fputwc>:
81003405:	55                   	push   %ebp
81003406:	89 e5                	mov    %esp,%ebp
81003408:	83 ec 18             	sub    $0x18,%esp
8100340b:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81003410:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003413:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003416:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003419:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100341d:	74 18                	je     81003437 <fputwc+0x32>
8100341f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003422:	8b 40 38             	mov    0x38(%eax),%eax
81003425:	85 c0                	test   %eax,%eax
81003427:	75 0e                	jne    81003437 <fputwc+0x32>
81003429:	83 ec 0c             	sub    $0xc,%esp
8100342c:	ff 75 f0             	pushl  -0x10(%ebp)
8100342f:	e8 27 d5 ff ff       	call   8100095b <__sinit>
81003434:	83 c4 10             	add    $0x10,%esp
81003437:	83 ec 04             	sub    $0x4,%esp
8100343a:	ff 75 0c             	pushl  0xc(%ebp)
8100343d:	ff 75 08             	pushl  0x8(%ebp)
81003440:	ff 75 f4             	pushl  -0xc(%ebp)
81003443:	e8 66 ff ff ff       	call   810033ae <_fputwc_r>
81003448:	83 c4 10             	add    $0x10,%esp
8100344b:	c9                   	leave  
8100344c:	c3                   	ret    

8100344d <__sfvwrite_r>:
8100344d:	55                   	push   %ebp
8100344e:	89 e5                	mov    %esp,%ebp
81003450:	57                   	push   %edi
81003451:	56                   	push   %esi
81003452:	53                   	push   %ebx
81003453:	83 ec 3c             	sub    $0x3c,%esp
81003456:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003459:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81003460:	8b 45 10             	mov    0x10(%ebp),%eax
81003463:	8b 78 08             	mov    0x8(%eax),%edi
81003466:	85 ff                	test   %edi,%edi
81003468:	75 0a                	jne    81003474 <__sfvwrite_r+0x27>
8100346a:	b8 00 00 00 00       	mov    $0x0,%eax
8100346f:	e9 6f 04 00 00       	jmp    810038e3 <__sfvwrite_r+0x496>
81003474:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003478:	98                   	cwtl   
81003479:	83 e0 08             	and    $0x8,%eax
8100347c:	85 c0                	test   %eax,%eax
8100347e:	74 07                	je     81003487 <__sfvwrite_r+0x3a>
81003480:	8b 43 10             	mov    0x10(%ebx),%eax
81003483:	85 c0                	test   %eax,%eax
81003485:	75 1d                	jne    810034a4 <__sfvwrite_r+0x57>
81003487:	83 ec 08             	sub    $0x8,%esp
8100348a:	53                   	push   %ebx
8100348b:	ff 75 08             	pushl  0x8(%ebp)
8100348e:	e8 aa fc ff ff       	call   8100313d <__swsetup_r>
81003493:	83 c4 10             	add    $0x10,%esp
81003496:	85 c0                	test   %eax,%eax
81003498:	74 0a                	je     810034a4 <__sfvwrite_r+0x57>
8100349a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100349f:	e9 3f 04 00 00       	jmp    810038e3 <__sfvwrite_r+0x496>
810034a4:	8b 45 10             	mov    0x10(%ebp),%eax
810034a7:	8b 00                	mov    (%eax),%eax
810034a9:	89 45 c0             	mov    %eax,-0x40(%ebp)
810034ac:	bf 00 00 00 00       	mov    $0x0,%edi
810034b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034b5:	98                   	cwtl   
810034b6:	83 e0 02             	and    $0x2,%eax
810034b9:	85 c0                	test   %eax,%eax
810034bb:	74 68                	je     81003525 <__sfvwrite_r+0xd8>
810034bd:	eb 11                	jmp    810034d0 <__sfvwrite_r+0x83>
810034bf:	8b 45 c0             	mov    -0x40(%ebp),%eax
810034c2:	8b 08                	mov    (%eax),%ecx
810034c4:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810034c7:	8b 78 04             	mov    0x4(%eax),%edi
810034ca:	83 c0 08             	add    $0x8,%eax
810034cd:	89 45 c0             	mov    %eax,-0x40(%ebp)
810034d0:	85 ff                	test   %edi,%edi
810034d2:	74 eb                	je     810034bf <__sfvwrite_r+0x72>
810034d4:	8b 4b 24             	mov    0x24(%ebx),%ecx
810034d7:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810034dc:	39 c7                	cmp    %eax,%edi
810034de:	0f 46 c7             	cmovbe %edi,%eax
810034e1:	89 c2                	mov    %eax,%edx
810034e3:	8b 43 1c             	mov    0x1c(%ebx),%eax
810034e6:	52                   	push   %edx
810034e7:	ff 75 c4             	pushl  -0x3c(%ebp)
810034ea:	50                   	push   %eax
810034eb:	ff 75 08             	pushl  0x8(%ebp)
810034ee:	ff d1                	call   *%ecx
810034f0:	83 c4 10             	add    $0x10,%esp
810034f3:	89 c6                	mov    %eax,%esi
810034f5:	85 f6                	test   %esi,%esi
810034f7:	0f 8e cf 03 00 00    	jle    810038cc <__sfvwrite_r+0x47f>
810034fd:	89 f0                	mov    %esi,%eax
810034ff:	01 45 c4             	add    %eax,-0x3c(%ebp)
81003502:	89 f0                	mov    %esi,%eax
81003504:	29 c7                	sub    %eax,%edi
81003506:	8b 45 10             	mov    0x10(%ebp),%eax
81003509:	8b 40 08             	mov    0x8(%eax),%eax
8100350c:	89 f2                	mov    %esi,%edx
8100350e:	29 d0                	sub    %edx,%eax
81003510:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003513:	89 41 08             	mov    %eax,0x8(%ecx)
81003516:	8b 45 10             	mov    0x10(%ebp),%eax
81003519:	8b 40 08             	mov    0x8(%eax),%eax
8100351c:	85 c0                	test   %eax,%eax
8100351e:	75 b0                	jne    810034d0 <__sfvwrite_r+0x83>
81003520:	e9 a0 03 00 00       	jmp    810038c5 <__sfvwrite_r+0x478>
81003525:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003529:	98                   	cwtl   
8100352a:	83 e0 01             	and    $0x1,%eax
8100352d:	85 c0                	test   %eax,%eax
8100352f:	0f 85 44 02 00 00    	jne    81003779 <__sfvwrite_r+0x32c>
81003535:	eb 11                	jmp    81003548 <__sfvwrite_r+0xfb>
81003537:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100353a:	8b 08                	mov    (%eax),%ecx
8100353c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100353f:	8b 78 04             	mov    0x4(%eax),%edi
81003542:	83 c0 08             	add    $0x8,%eax
81003545:	89 45 c0             	mov    %eax,-0x40(%ebp)
81003548:	85 ff                	test   %edi,%edi
8100354a:	74 eb                	je     81003537 <__sfvwrite_r+0xea>
8100354c:	8b 73 08             	mov    0x8(%ebx),%esi
8100354f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003553:	98                   	cwtl   
81003554:	25 00 02 00 00       	and    $0x200,%eax
81003559:	85 c0                	test   %eax,%eax
8100355b:	0f 84 4f 01 00 00    	je     810036b0 <__sfvwrite_r+0x263>
81003561:	89 f0                	mov    %esi,%eax
81003563:	39 c7                	cmp    %eax,%edi
81003565:	0f 82 12 01 00 00    	jb     8100367d <__sfvwrite_r+0x230>
8100356b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100356f:	98                   	cwtl   
81003570:	25 80 04 00 00       	and    $0x480,%eax
81003575:	85 c0                	test   %eax,%eax
81003577:	0f 84 00 01 00 00    	je     8100367d <__sfvwrite_r+0x230>
8100357d:	8b 03                	mov    (%ebx),%eax
8100357f:	8b 53 10             	mov    0x10(%ebx),%edx
81003582:	29 d0                	sub    %edx,%eax
81003584:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003587:	8b 53 14             	mov    0x14(%ebx),%edx
8100358a:	89 d0                	mov    %edx,%eax
8100358c:	01 c0                	add    %eax,%eax
8100358e:	01 d0                	add    %edx,%eax
81003590:	89 c2                	mov    %eax,%edx
81003592:	c1 ea 1f             	shr    $0x1f,%edx
81003595:	01 d0                	add    %edx,%eax
81003597:	d1 f8                	sar    %eax
81003599:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100359c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100359f:	01 f8                	add    %edi,%eax
810035a1:	8d 50 01             	lea    0x1(%eax),%edx
810035a4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810035a7:	39 c2                	cmp    %eax,%edx
810035a9:	76 0b                	jbe    810035b6 <__sfvwrite_r+0x169>
810035ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810035ae:	01 f8                	add    %edi,%eax
810035b0:	83 c0 01             	add    $0x1,%eax
810035b3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810035b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035ba:	98                   	cwtl   
810035bb:	25 00 04 00 00       	and    $0x400,%eax
810035c0:	85 c0                	test   %eax,%eax
810035c2:	74 4f                	je     81003613 <__sfvwrite_r+0x1c6>
810035c4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810035c7:	83 ec 08             	sub    $0x8,%esp
810035ca:	50                   	push   %eax
810035cb:	ff 75 08             	pushl  0x8(%ebp)
810035ce:	e8 fd dd ff ff       	call   810013d0 <_malloc_r>
810035d3:	83 c4 10             	add    $0x10,%esp
810035d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810035d9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810035dd:	75 0e                	jne    810035ed <__sfvwrite_r+0x1a0>
810035df:	8b 45 08             	mov    0x8(%ebp),%eax
810035e2:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810035e8:	e9 e6 02 00 00       	jmp    810038d3 <__sfvwrite_r+0x486>
810035ed:	8b 55 d0             	mov    -0x30(%ebp),%edx
810035f0:	8b 43 10             	mov    0x10(%ebx),%eax
810035f3:	83 ec 04             	sub    $0x4,%esp
810035f6:	52                   	push   %edx
810035f7:	50                   	push   %eax
810035f8:	ff 75 dc             	pushl  -0x24(%ebp)
810035fb:	e8 48 06 00 00       	call   81003c48 <memcpy>
81003600:	83 c4 10             	add    $0x10,%esp
81003603:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003607:	66 25 7f fb          	and    $0xfb7f,%ax
8100360b:	0c 80                	or     $0x80,%al
8100360d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003611:	eb 49                	jmp    8100365c <__sfvwrite_r+0x20f>
81003613:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003616:	8b 43 10             	mov    0x10(%ebx),%eax
81003619:	83 ec 04             	sub    $0x4,%esp
8100361c:	52                   	push   %edx
8100361d:	50                   	push   %eax
8100361e:	ff 75 08             	pushl  0x8(%ebp)
81003621:	e8 f7 06 00 00       	call   81003d1d <_realloc_r>
81003626:	83 c4 10             	add    $0x10,%esp
81003629:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100362c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003630:	75 2a                	jne    8100365c <__sfvwrite_r+0x20f>
81003632:	8b 43 10             	mov    0x10(%ebx),%eax
81003635:	83 ec 08             	sub    $0x8,%esp
81003638:	50                   	push   %eax
81003639:	ff 75 08             	pushl  0x8(%ebp)
8100363c:	e8 27 d4 ff ff       	call   81000a68 <_free_r>
81003641:	83 c4 10             	add    $0x10,%esp
81003644:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003648:	24 7f                	and    $0x7f,%al
8100364a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100364e:	8b 45 08             	mov    0x8(%ebp),%eax
81003651:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003657:	e9 77 02 00 00       	jmp    810038d3 <__sfvwrite_r+0x486>
8100365c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100365f:	89 43 10             	mov    %eax,0x10(%ebx)
81003662:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003665:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003668:	01 d0                	add    %edx,%eax
8100366a:	89 03                	mov    %eax,(%ebx)
8100366c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100366f:	89 43 14             	mov    %eax,0x14(%ebx)
81003672:	89 fe                	mov    %edi,%esi
81003674:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003677:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100367a:	89 43 08             	mov    %eax,0x8(%ebx)
8100367d:	89 f0                	mov    %esi,%eax
8100367f:	39 c7                	cmp    %eax,%edi
81003681:	73 02                	jae    81003685 <__sfvwrite_r+0x238>
81003683:	89 fe                	mov    %edi,%esi
81003685:	89 f2                	mov    %esi,%edx
81003687:	8b 03                	mov    (%ebx),%eax
81003689:	83 ec 04             	sub    $0x4,%esp
8100368c:	52                   	push   %edx
8100368d:	ff 75 c4             	pushl  -0x3c(%ebp)
81003690:	50                   	push   %eax
81003691:	e8 fa 05 00 00       	call   81003c90 <memmove>
81003696:	83 c4 10             	add    $0x10,%esp
81003699:	8b 43 08             	mov    0x8(%ebx),%eax
8100369c:	29 f0                	sub    %esi,%eax
8100369e:	89 43 08             	mov    %eax,0x8(%ebx)
810036a1:	8b 03                	mov    (%ebx),%eax
810036a3:	89 f2                	mov    %esi,%edx
810036a5:	01 d0                	add    %edx,%eax
810036a7:	89 03                	mov    %eax,(%ebx)
810036a9:	89 fe                	mov    %edi,%esi
810036ab:	e9 9d 00 00 00       	jmp    8100374d <__sfvwrite_r+0x300>
810036b0:	8b 13                	mov    (%ebx),%edx
810036b2:	8b 43 10             	mov    0x10(%ebx),%eax
810036b5:	39 c2                	cmp    %eax,%edx
810036b7:	77 07                	ja     810036c0 <__sfvwrite_r+0x273>
810036b9:	8b 43 14             	mov    0x14(%ebx),%eax
810036bc:	39 c7                	cmp    %eax,%edi
810036be:	73 4c                	jae    8100370c <__sfvwrite_r+0x2bf>
810036c0:	89 f0                	mov    %esi,%eax
810036c2:	39 c7                	cmp    %eax,%edi
810036c4:	0f 46 c7             	cmovbe %edi,%eax
810036c7:	89 c6                	mov    %eax,%esi
810036c9:	89 f2                	mov    %esi,%edx
810036cb:	8b 03                	mov    (%ebx),%eax
810036cd:	83 ec 04             	sub    $0x4,%esp
810036d0:	52                   	push   %edx
810036d1:	ff 75 c4             	pushl  -0x3c(%ebp)
810036d4:	50                   	push   %eax
810036d5:	e8 b6 05 00 00       	call   81003c90 <memmove>
810036da:	83 c4 10             	add    $0x10,%esp
810036dd:	8b 43 08             	mov    0x8(%ebx),%eax
810036e0:	29 f0                	sub    %esi,%eax
810036e2:	89 43 08             	mov    %eax,0x8(%ebx)
810036e5:	8b 03                	mov    (%ebx),%eax
810036e7:	89 f2                	mov    %esi,%edx
810036e9:	01 d0                	add    %edx,%eax
810036eb:	89 03                	mov    %eax,(%ebx)
810036ed:	8b 43 08             	mov    0x8(%ebx),%eax
810036f0:	85 c0                	test   %eax,%eax
810036f2:	75 58                	jne    8100374c <__sfvwrite_r+0x2ff>
810036f4:	83 ec 08             	sub    $0x8,%esp
810036f7:	53                   	push   %ebx
810036f8:	ff 75 08             	pushl  0x8(%ebp)
810036fb:	e8 d5 ce ff ff       	call   810005d5 <_fflush_r>
81003700:	83 c4 10             	add    $0x10,%esp
81003703:	85 c0                	test   %eax,%eax
81003705:	74 45                	je     8100374c <__sfvwrite_r+0x2ff>
81003707:	e9 c7 01 00 00       	jmp    810038d3 <__sfvwrite_r+0x486>
8100370c:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81003712:	77 04                	ja     81003718 <__sfvwrite_r+0x2cb>
81003714:	89 f8                	mov    %edi,%eax
81003716:	eb 05                	jmp    8100371d <__sfvwrite_r+0x2d0>
81003718:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8100371d:	8b 4b 14             	mov    0x14(%ebx),%ecx
81003720:	99                   	cltd   
81003721:	f7 f9                	idiv   %ecx
81003723:	89 c2                	mov    %eax,%edx
81003725:	8b 43 14             	mov    0x14(%ebx),%eax
81003728:	89 d6                	mov    %edx,%esi
8100372a:	0f af f0             	imul   %eax,%esi
8100372d:	8b 53 24             	mov    0x24(%ebx),%edx
81003730:	8b 43 1c             	mov    0x1c(%ebx),%eax
81003733:	56                   	push   %esi
81003734:	ff 75 c4             	pushl  -0x3c(%ebp)
81003737:	50                   	push   %eax
81003738:	ff 75 08             	pushl  0x8(%ebp)
8100373b:	ff d2                	call   *%edx
8100373d:	83 c4 10             	add    $0x10,%esp
81003740:	89 c6                	mov    %eax,%esi
81003742:	85 f6                	test   %esi,%esi
81003744:	0f 8e 85 01 00 00    	jle    810038cf <__sfvwrite_r+0x482>
8100374a:	eb 01                	jmp    8100374d <__sfvwrite_r+0x300>
8100374c:	90                   	nop
8100374d:	89 f0                	mov    %esi,%eax
8100374f:	01 45 c4             	add    %eax,-0x3c(%ebp)
81003752:	89 f0                	mov    %esi,%eax
81003754:	29 c7                	sub    %eax,%edi
81003756:	8b 45 10             	mov    0x10(%ebp),%eax
81003759:	8b 40 08             	mov    0x8(%eax),%eax
8100375c:	89 f2                	mov    %esi,%edx
8100375e:	29 d0                	sub    %edx,%eax
81003760:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003763:	89 41 08             	mov    %eax,0x8(%ecx)
81003766:	8b 45 10             	mov    0x10(%ebp),%eax
81003769:	8b 40 08             	mov    0x8(%eax),%eax
8100376c:	85 c0                	test   %eax,%eax
8100376e:	0f 85 d4 fd ff ff    	jne    81003548 <__sfvwrite_r+0xfb>
81003774:	e9 4c 01 00 00       	jmp    810038c5 <__sfvwrite_r+0x478>
81003779:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003780:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003787:	eb 18                	jmp    810037a1 <__sfvwrite_r+0x354>
81003789:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003790:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003793:	8b 08                	mov    (%eax),%ecx
81003795:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81003798:	8b 78 04             	mov    0x4(%eax),%edi
8100379b:	83 c0 08             	add    $0x8,%eax
8100379e:	89 45 c0             	mov    %eax,-0x40(%ebp)
810037a1:	85 ff                	test   %edi,%edi
810037a3:	74 e4                	je     81003789 <__sfvwrite_r+0x33c>
810037a5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810037a9:	75 32                	jne    810037dd <__sfvwrite_r+0x390>
810037ab:	83 ec 04             	sub    $0x4,%esp
810037ae:	57                   	push   %edi
810037af:	6a 0a                	push   $0xa
810037b1:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810037b4:	56                   	push   %esi
810037b5:	e8 f6 03 00 00       	call   81003bb0 <memchr>
810037ba:	83 c4 10             	add    $0x10,%esp
810037bd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810037c0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810037c4:	74 0a                	je     810037d0 <__sfvwrite_r+0x383>
810037c6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810037c9:	83 c0 01             	add    $0x1,%eax
810037cc:	29 f0                	sub    %esi,%eax
810037ce:	eb 03                	jmp    810037d3 <__sfvwrite_r+0x386>
810037d0:	8d 47 01             	lea    0x1(%edi),%eax
810037d3:	89 45 e0             	mov    %eax,-0x20(%ebp)
810037d6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810037dd:	8b 45 e0             	mov    -0x20(%ebp),%eax
810037e0:	39 c7                	cmp    %eax,%edi
810037e2:	0f 46 c7             	cmovbe %edi,%eax
810037e5:	89 c1                	mov    %eax,%ecx
810037e7:	8b 53 08             	mov    0x8(%ebx),%edx
810037ea:	8b 43 14             	mov    0x14(%ebx),%eax
810037ed:	8d 34 02             	lea    (%edx,%eax,1),%esi
810037f0:	8b 13                	mov    (%ebx),%edx
810037f2:	8b 43 10             	mov    0x10(%ebx),%eax
810037f5:	39 c2                	cmp    %eax,%edx
810037f7:	76 38                	jbe    81003831 <__sfvwrite_r+0x3e4>
810037f9:	39 f1                	cmp    %esi,%ecx
810037fb:	7e 34                	jle    81003831 <__sfvwrite_r+0x3e4>
810037fd:	89 f2                	mov    %esi,%edx
810037ff:	8b 03                	mov    (%ebx),%eax
81003801:	83 ec 04             	sub    $0x4,%esp
81003804:	52                   	push   %edx
81003805:	ff 75 c4             	pushl  -0x3c(%ebp)
81003808:	50                   	push   %eax
81003809:	e8 82 04 00 00       	call   81003c90 <memmove>
8100380e:	83 c4 10             	add    $0x10,%esp
81003811:	8b 03                	mov    (%ebx),%eax
81003813:	89 f2                	mov    %esi,%edx
81003815:	01 d0                	add    %edx,%eax
81003817:	89 03                	mov    %eax,(%ebx)
81003819:	83 ec 08             	sub    $0x8,%esp
8100381c:	53                   	push   %ebx
8100381d:	ff 75 08             	pushl  0x8(%ebp)
81003820:	e8 b0 cd ff ff       	call   810005d5 <_fflush_r>
81003825:	83 c4 10             	add    $0x10,%esp
81003828:	85 c0                	test   %eax,%eax
8100382a:	74 4f                	je     8100387b <__sfvwrite_r+0x42e>
8100382c:	e9 a2 00 00 00       	jmp    810038d3 <__sfvwrite_r+0x486>
81003831:	8b 73 14             	mov    0x14(%ebx),%esi
81003834:	89 c8                	mov    %ecx,%eax
81003836:	39 c6                	cmp    %eax,%esi
81003838:	7f 1b                	jg     81003855 <__sfvwrite_r+0x408>
8100383a:	8b 53 24             	mov    0x24(%ebx),%edx
8100383d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81003840:	56                   	push   %esi
81003841:	ff 75 c4             	pushl  -0x3c(%ebp)
81003844:	50                   	push   %eax
81003845:	ff 75 08             	pushl  0x8(%ebp)
81003848:	ff d2                	call   *%edx
8100384a:	83 c4 10             	add    $0x10,%esp
8100384d:	89 c6                	mov    %eax,%esi
8100384f:	85 f6                	test   %esi,%esi
81003851:	7f 28                	jg     8100387b <__sfvwrite_r+0x42e>
81003853:	eb 7e                	jmp    810038d3 <__sfvwrite_r+0x486>
81003855:	89 ce                	mov    %ecx,%esi
81003857:	89 f2                	mov    %esi,%edx
81003859:	8b 03                	mov    (%ebx),%eax
8100385b:	83 ec 04             	sub    $0x4,%esp
8100385e:	52                   	push   %edx
8100385f:	ff 75 c4             	pushl  -0x3c(%ebp)
81003862:	50                   	push   %eax
81003863:	e8 28 04 00 00       	call   81003c90 <memmove>
81003868:	83 c4 10             	add    $0x10,%esp
8100386b:	8b 43 08             	mov    0x8(%ebx),%eax
8100386e:	29 f0                	sub    %esi,%eax
81003870:	89 43 08             	mov    %eax,0x8(%ebx)
81003873:	8b 03                	mov    (%ebx),%eax
81003875:	89 f2                	mov    %esi,%edx
81003877:	01 d0                	add    %edx,%eax
81003879:	89 03                	mov    %eax,(%ebx)
8100387b:	29 75 e0             	sub    %esi,-0x20(%ebp)
8100387e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003882:	75 1a                	jne    8100389e <__sfvwrite_r+0x451>
81003884:	83 ec 08             	sub    $0x8,%esp
81003887:	53                   	push   %ebx
81003888:	ff 75 08             	pushl  0x8(%ebp)
8100388b:	e8 45 cd ff ff       	call   810005d5 <_fflush_r>
81003890:	83 c4 10             	add    $0x10,%esp
81003893:	85 c0                	test   %eax,%eax
81003895:	75 3b                	jne    810038d2 <__sfvwrite_r+0x485>
81003897:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100389e:	89 f0                	mov    %esi,%eax
810038a0:	01 45 c4             	add    %eax,-0x3c(%ebp)
810038a3:	89 f0                	mov    %esi,%eax
810038a5:	29 c7                	sub    %eax,%edi
810038a7:	8b 45 10             	mov    0x10(%ebp),%eax
810038aa:	8b 40 08             	mov    0x8(%eax),%eax
810038ad:	89 f2                	mov    %esi,%edx
810038af:	29 d0                	sub    %edx,%eax
810038b1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810038b4:	89 41 08             	mov    %eax,0x8(%ecx)
810038b7:	8b 45 10             	mov    0x10(%ebp),%eax
810038ba:	8b 40 08             	mov    0x8(%eax),%eax
810038bd:	85 c0                	test   %eax,%eax
810038bf:	0f 85 dc fe ff ff    	jne    810037a1 <__sfvwrite_r+0x354>
810038c5:	b8 00 00 00 00       	mov    $0x0,%eax
810038ca:	eb 17                	jmp    810038e3 <__sfvwrite_r+0x496>
810038cc:	90                   	nop
810038cd:	eb 04                	jmp    810038d3 <__sfvwrite_r+0x486>
810038cf:	90                   	nop
810038d0:	eb 01                	jmp    810038d3 <__sfvwrite_r+0x486>
810038d2:	90                   	nop
810038d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810038d7:	83 c8 40             	or     $0x40,%eax
810038da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810038de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810038e3:	8d 65 f4             	lea    -0xc(%ebp),%esp
810038e6:	5b                   	pop    %ebx
810038e7:	5e                   	pop    %esi
810038e8:	5f                   	pop    %edi
810038e9:	5d                   	pop    %ebp
810038ea:	c3                   	ret    

810038eb <__get_global_locale>:
810038eb:	55                   	push   %ebp
810038ec:	89 e5                	mov    %esp,%ebp
810038ee:	b8 00 55 00 81       	mov    $0x81005500,%eax
810038f3:	5d                   	pop    %ebp
810038f4:	c3                   	ret    

810038f5 <__get_current_locale>:
810038f5:	55                   	push   %ebp
810038f6:	89 e5                	mov    %esp,%ebp
810038f8:	e8 ee ff ff ff       	call   810038eb <__get_global_locale>
810038fd:	5d                   	pop    %ebp
810038fe:	c3                   	ret    

810038ff <_setlocale_r>:
810038ff:	55                   	push   %ebp
81003900:	89 e5                	mov    %esp,%ebp
81003902:	83 ec 08             	sub    $0x8,%esp
81003905:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003909:	74 4c                	je     81003957 <_setlocale_r+0x58>
8100390b:	83 ec 08             	sub    $0x8,%esp
8100390e:	68 bf 49 00 81       	push   $0x810049bf
81003913:	ff 75 10             	pushl  0x10(%ebp)
81003916:	e8 dc 0c 00 00       	call   810045f7 <strcmp>
8100391b:	83 c4 10             	add    $0x10,%esp
8100391e:	85 c0                	test   %eax,%eax
81003920:	74 35                	je     81003957 <_setlocale_r+0x58>
81003922:	83 ec 08             	sub    $0x8,%esp
81003925:	68 c5 49 00 81       	push   $0x810049c5
8100392a:	ff 75 10             	pushl  0x10(%ebp)
8100392d:	e8 c5 0c 00 00       	call   810045f7 <strcmp>
81003932:	83 c4 10             	add    $0x10,%esp
81003935:	85 c0                	test   %eax,%eax
81003937:	74 1e                	je     81003957 <_setlocale_r+0x58>
81003939:	83 ec 08             	sub    $0x8,%esp
8100393c:	68 be 49 00 81       	push   $0x810049be
81003941:	ff 75 10             	pushl  0x10(%ebp)
81003944:	e8 ae 0c 00 00       	call   810045f7 <strcmp>
81003949:	83 c4 10             	add    $0x10,%esp
8100394c:	85 c0                	test   %eax,%eax
8100394e:	74 07                	je     81003957 <_setlocale_r+0x58>
81003950:	b8 00 00 00 00       	mov    $0x0,%eax
81003955:	eb 05                	jmp    8100395c <_setlocale_r+0x5d>
81003957:	b8 c5 49 00 81       	mov    $0x810049c5,%eax
8100395c:	c9                   	leave  
8100395d:	c3                   	ret    

8100395e <__locale_mb_cur_max>:
8100395e:	55                   	push   %ebp
8100395f:	89 e5                	mov    %esp,%ebp
81003961:	e8 8f ff ff ff       	call   810038f5 <__get_current_locale>
81003966:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100396d:	0f be c0             	movsbl %al,%eax
81003970:	5d                   	pop    %ebp
81003971:	c3                   	ret    

81003972 <setlocale>:
81003972:	55                   	push   %ebp
81003973:	89 e5                	mov    %esp,%ebp
81003975:	83 ec 08             	sub    $0x8,%esp
81003978:	a1 c4 50 00 81       	mov    0x810050c4,%eax
8100397d:	83 ec 04             	sub    $0x4,%esp
81003980:	ff 75 0c             	pushl  0xc(%ebp)
81003983:	ff 75 08             	pushl  0x8(%ebp)
81003986:	50                   	push   %eax
81003987:	e8 73 ff ff ff       	call   810038ff <_setlocale_r>
8100398c:	83 c4 10             	add    $0x10,%esp
8100398f:	c9                   	leave  
81003990:	c3                   	ret    

81003991 <__smakebuf_r>:
81003991:	55                   	push   %ebp
81003992:	89 e5                	mov    %esp,%ebp
81003994:	56                   	push   %esi
81003995:	53                   	push   %ebx
81003996:	83 ec 10             	sub    $0x10,%esp
81003999:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100399c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810039a0:	98                   	cwtl   
810039a1:	83 e0 02             	and    $0x2,%eax
810039a4:	85 c0                	test   %eax,%eax
810039a6:	74 16                	je     810039be <__smakebuf_r+0x2d>
810039a8:	8d 43 43             	lea    0x43(%ebx),%eax
810039ab:	89 03                	mov    %eax,(%ebx)
810039ad:	8b 03                	mov    (%ebx),%eax
810039af:	89 43 10             	mov    %eax,0x10(%ebx)
810039b2:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810039b9:	e9 b9 00 00 00       	jmp    81003a77 <__smakebuf_r+0xe6>
810039be:	8d 45 ec             	lea    -0x14(%ebp),%eax
810039c1:	50                   	push   %eax
810039c2:	8d 45 f0             	lea    -0x10(%ebp),%eax
810039c5:	50                   	push   %eax
810039c6:	53                   	push   %ebx
810039c7:	ff 75 08             	pushl  0x8(%ebp)
810039ca:	e8 af 00 00 00       	call   81003a7e <__swhatbuf_r>
810039cf:	83 c4 10             	add    $0x10,%esp
810039d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039d8:	83 ec 08             	sub    $0x8,%esp
810039db:	50                   	push   %eax
810039dc:	ff 75 08             	pushl  0x8(%ebp)
810039df:	e8 ec d9 ff ff       	call   810013d0 <_malloc_r>
810039e4:	83 c4 10             	add    $0x10,%esp
810039e7:	89 c6                	mov    %eax,%esi
810039e9:	85 f6                	test   %esi,%esi
810039eb:	75 2f                	jne    81003a1c <__smakebuf_r+0x8b>
810039ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810039f1:	98                   	cwtl   
810039f2:	25 00 02 00 00       	and    $0x200,%eax
810039f7:	85 c0                	test   %eax,%eax
810039f9:	75 7c                	jne    81003a77 <__smakebuf_r+0xe6>
810039fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810039ff:	83 e0 fc             	and    $0xfffffffc,%eax
81003a02:	83 c8 02             	or     $0x2,%eax
81003a05:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003a09:	8d 43 43             	lea    0x43(%ebx),%eax
81003a0c:	89 03                	mov    %eax,(%ebx)
81003a0e:	8b 03                	mov    (%ebx),%eax
81003a10:	89 43 10             	mov    %eax,0x10(%ebx)
81003a13:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003a1a:	eb 5b                	jmp    81003a77 <__smakebuf_r+0xe6>
81003a1c:	8b 45 08             	mov    0x8(%ebp),%eax
81003a1f:	c7 40 3c 20 09 00 81 	movl   $0x81000920,0x3c(%eax)
81003a26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003a2a:	0c 80                	or     $0x80,%al
81003a2c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003a30:	89 33                	mov    %esi,(%ebx)
81003a32:	8b 03                	mov    (%ebx),%eax
81003a34:	89 43 10             	mov    %eax,0x10(%ebx)
81003a37:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a3a:	89 43 14             	mov    %eax,0x14(%ebx)
81003a3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a40:	85 c0                	test   %eax,%eax
81003a42:	74 26                	je     81003a6a <__smakebuf_r+0xd9>
81003a44:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003a48:	98                   	cwtl   
81003a49:	83 ec 08             	sub    $0x8,%esp
81003a4c:	50                   	push   %eax
81003a4d:	ff 75 08             	pushl  0x8(%ebp)
81003a50:	e8 0f 0e 00 00       	call   81004864 <_isatty_r>
81003a55:	83 c4 10             	add    $0x10,%esp
81003a58:	85 c0                	test   %eax,%eax
81003a5a:	74 0e                	je     81003a6a <__smakebuf_r+0xd9>
81003a5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003a60:	83 e0 fc             	and    $0xfffffffc,%eax
81003a63:	83 c8 01             	or     $0x1,%eax
81003a66:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003a6a:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003a6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a71:	09 d0                	or     %edx,%eax
81003a73:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003a77:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003a7a:	5b                   	pop    %ebx
81003a7b:	5e                   	pop    %esi
81003a7c:	5d                   	pop    %ebp
81003a7d:	c3                   	ret    

81003a7e <__swhatbuf_r>:
81003a7e:	55                   	push   %ebp
81003a7f:	89 e5                	mov    %esp,%ebp
81003a81:	83 ec 58             	sub    $0x58,%esp
81003a84:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003a8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a8e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003a92:	66 85 c0             	test   %ax,%ax
81003a95:	78 1f                	js     81003ab6 <__swhatbuf_r+0x38>
81003a97:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a9a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003a9e:	98                   	cwtl   
81003a9f:	83 ec 04             	sub    $0x4,%esp
81003aa2:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003aa5:	52                   	push   %edx
81003aa6:	50                   	push   %eax
81003aa7:	ff 75 08             	pushl  0x8(%ebp)
81003aaa:	e8 72 0d 00 00       	call   81004821 <_fstat_r>
81003aaf:	83 c4 10             	add    $0x10,%esp
81003ab2:	85 c0                	test   %eax,%eax
81003ab4:	79 35                	jns    81003aeb <__swhatbuf_r+0x6d>
81003ab6:	8b 45 14             	mov    0x14(%ebp),%eax
81003ab9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003abf:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ac2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003ac6:	98                   	cwtl   
81003ac7:	25 80 00 00 00       	and    $0x80,%eax
81003acc:	85 c0                	test   %eax,%eax
81003ace:	74 0b                	je     81003adb <__swhatbuf_r+0x5d>
81003ad0:	8b 45 10             	mov    0x10(%ebp),%eax
81003ad3:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003ad9:	eb 09                	jmp    81003ae4 <__swhatbuf_r+0x66>
81003adb:	8b 45 10             	mov    0x10(%ebp),%eax
81003ade:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ae4:	b8 00 00 00 00       	mov    $0x0,%eax
81003ae9:	eb 24                	jmp    81003b0f <__swhatbuf_r+0x91>
81003aeb:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003aee:	25 00 f0 00 00       	and    $0xf000,%eax
81003af3:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003af8:	0f 94 c0             	sete   %al
81003afb:	0f b6 d0             	movzbl %al,%edx
81003afe:	8b 45 14             	mov    0x14(%ebp),%eax
81003b01:	89 10                	mov    %edx,(%eax)
81003b03:	8b 45 10             	mov    0x10(%ebp),%eax
81003b06:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b0f:	c9                   	leave  
81003b10:	c3                   	ret    

81003b11 <__get_global_locale>:
81003b11:	55                   	push   %ebp
81003b12:	89 e5                	mov    %esp,%ebp
81003b14:	b8 00 55 00 81       	mov    $0x81005500,%eax
81003b19:	5d                   	pop    %ebp
81003b1a:	c3                   	ret    

81003b1b <__get_current_locale>:
81003b1b:	55                   	push   %ebp
81003b1c:	89 e5                	mov    %esp,%ebp
81003b1e:	e8 ee ff ff ff       	call   81003b11 <__get_global_locale>
81003b23:	5d                   	pop    %ebp
81003b24:	c3                   	ret    

81003b25 <_mbtowc_r>:
81003b25:	55                   	push   %ebp
81003b26:	89 e5                	mov    %esp,%ebp
81003b28:	83 ec 08             	sub    $0x8,%esp
81003b2b:	e8 eb ff ff ff       	call   81003b1b <__get_current_locale>
81003b30:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81003b36:	83 ec 0c             	sub    $0xc,%esp
81003b39:	ff 75 18             	pushl  0x18(%ebp)
81003b3c:	ff 75 14             	pushl  0x14(%ebp)
81003b3f:	ff 75 10             	pushl  0x10(%ebp)
81003b42:	ff 75 0c             	pushl  0xc(%ebp)
81003b45:	ff 75 08             	pushl  0x8(%ebp)
81003b48:	ff d0                	call   *%eax
81003b4a:	83 c4 20             	add    $0x20,%esp
81003b4d:	c9                   	leave  
81003b4e:	c3                   	ret    

81003b4f <__ascii_mbtowc>:
81003b4f:	55                   	push   %ebp
81003b50:	89 e5                	mov    %esp,%ebp
81003b52:	83 ec 10             	sub    $0x10,%esp
81003b55:	8b 45 10             	mov    0x10(%ebp),%eax
81003b58:	89 45 fc             	mov    %eax,-0x4(%ebp)
81003b5b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003b5f:	75 06                	jne    81003b67 <__ascii_mbtowc+0x18>
81003b61:	8d 45 f8             	lea    -0x8(%ebp),%eax
81003b64:	89 45 0c             	mov    %eax,0xc(%ebp)
81003b67:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003b6b:	75 07                	jne    81003b74 <__ascii_mbtowc+0x25>
81003b6d:	b8 00 00 00 00       	mov    $0x0,%eax
81003b72:	eb 31                	jmp    81003ba5 <__ascii_mbtowc+0x56>
81003b74:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81003b78:	75 07                	jne    81003b81 <__ascii_mbtowc+0x32>
81003b7a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81003b7f:	eb 24                	jmp    81003ba5 <__ascii_mbtowc+0x56>
81003b81:	8b 45 fc             	mov    -0x4(%ebp),%eax
81003b84:	0f b6 00             	movzbl (%eax),%eax
81003b87:	0f b6 d0             	movzbl %al,%edx
81003b8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b8d:	89 10                	mov    %edx,(%eax)
81003b8f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81003b92:	0f b6 00             	movzbl (%eax),%eax
81003b95:	84 c0                	test   %al,%al
81003b97:	75 07                	jne    81003ba0 <__ascii_mbtowc+0x51>
81003b99:	b8 00 00 00 00       	mov    $0x0,%eax
81003b9e:	eb 05                	jmp    81003ba5 <__ascii_mbtowc+0x56>
81003ba0:	b8 01 00 00 00       	mov    $0x1,%eax
81003ba5:	c9                   	leave  
81003ba6:	c3                   	ret    
81003ba7:	66 90                	xchg   %ax,%ax
81003ba9:	66 90                	xchg   %ax,%ax
81003bab:	66 90                	xchg   %ax,%ax
81003bad:	66 90                	xchg   %ax,%ax
81003baf:	90                   	nop

81003bb0 <memchr>:
81003bb0:	55                   	push   %ebp
81003bb1:	89 e5                	mov    %esp,%ebp
81003bb3:	57                   	push   %edi
81003bb4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003bb8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003bbb:	8b 7d 08             	mov    0x8(%ebp),%edi
81003bbe:	31 d2                	xor    %edx,%edx
81003bc0:	85 c9                	test   %ecx,%ecx
81003bc2:	74 79                	je     81003c3d <L20>
81003bc4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003bca:	74 28                	je     81003bf4 <L5>
81003bcc:	3a 07                	cmp    (%edi),%al
81003bce:	74 6a                	je     81003c3a <L15>
81003bd0:	47                   	inc    %edi
81003bd1:	49                   	dec    %ecx
81003bd2:	74 69                	je     81003c3d <L20>
81003bd4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003bda:	74 18                	je     81003bf4 <L5>
81003bdc:	3a 07                	cmp    (%edi),%al
81003bde:	74 5a                	je     81003c3a <L15>
81003be0:	47                   	inc    %edi
81003be1:	49                   	dec    %ecx
81003be2:	74 59                	je     81003c3d <L20>
81003be4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003bea:	74 08                	je     81003bf4 <L5>
81003bec:	3a 07                	cmp    (%edi),%al
81003bee:	74 4a                	je     81003c3a <L15>
81003bf0:	47                   	inc    %edi
81003bf1:	49                   	dec    %ecx
81003bf2:	74 49                	je     81003c3d <L20>

81003bf4 <L5>:
81003bf4:	88 c4                	mov    %al,%ah
81003bf6:	89 c2                	mov    %eax,%edx
81003bf8:	c1 e2 10             	shl    $0x10,%edx
81003bfb:	09 d0                	or     %edx,%eax
81003bfd:	53                   	push   %ebx
81003bfe:	66 90                	xchg   %ax,%ax

81003c00 <L8>:
81003c00:	83 e9 04             	sub    $0x4,%ecx
81003c03:	72 1c                	jb     81003c21 <L9>
81003c05:	8b 17                	mov    (%edi),%edx
81003c07:	83 c7 04             	add    $0x4,%edi
81003c0a:	31 c2                	xor    %eax,%edx
81003c0c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003c12:	f7 d2                	not    %edx
81003c14:	21 d3                	and    %edx,%ebx
81003c16:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81003c1c:	74 e2                	je     81003c00 <L8>
81003c1e:	83 ef 04             	sub    $0x4,%edi

81003c21 <L9>:
81003c21:	5b                   	pop    %ebx
81003c22:	31 d2                	xor    %edx,%edx
81003c24:	83 c1 04             	add    $0x4,%ecx
81003c27:	74 14                	je     81003c3d <L20>
81003c29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003c30 <L10>:
81003c30:	3a 07                	cmp    (%edi),%al
81003c32:	74 06                	je     81003c3a <L15>
81003c34:	47                   	inc    %edi
81003c35:	49                   	dec    %ecx
81003c36:	75 f8                	jne    81003c30 <L10>
81003c38:	31 ff                	xor    %edi,%edi

81003c3a <L15>:
81003c3a:	4a                   	dec    %edx
81003c3b:	21 fa                	and    %edi,%edx

81003c3d <L20>:
81003c3d:	89 d0                	mov    %edx,%eax
81003c3f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003c42:	5f                   	pop    %edi
81003c43:	c9                   	leave  
81003c44:	c3                   	ret    
81003c45:	66 90                	xchg   %ax,%ax
81003c47:	90                   	nop

81003c48 <memcpy>:
81003c48:	55                   	push   %ebp
81003c49:	89 e5                	mov    %esp,%ebp
81003c4b:	56                   	push   %esi
81003c4c:	57                   	push   %edi
81003c4d:	53                   	push   %ebx
81003c4e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003c51:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003c54:	8b 75 0c             	mov    0xc(%ebp),%esi
81003c57:	fc                   	cld    
81003c58:	83 f9 08             	cmp    $0x8,%ecx
81003c5b:	76 26                	jbe    81003c83 <memcpy+0x3b>
81003c5d:	89 fa                	mov    %edi,%edx
81003c5f:	89 cb                	mov    %ecx,%ebx
81003c61:	83 e2 03             	and    $0x3,%edx
81003c64:	74 10                	je     81003c76 <memcpy+0x2e>
81003c66:	b9 04 00 00 00       	mov    $0x4,%ecx
81003c6b:	29 d1                	sub    %edx,%ecx
81003c6d:	83 e1 03             	and    $0x3,%ecx
81003c70:	29 cb                	sub    %ecx,%ebx
81003c72:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003c74:	89 d9                	mov    %ebx,%ecx
81003c76:	c1 e9 02             	shr    $0x2,%ecx
81003c79:	8d 76 00             	lea    0x0(%esi),%esi
81003c7c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003c7e:	89 d9                	mov    %ebx,%ecx
81003c80:	83 e1 03             	and    $0x3,%ecx
81003c83:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003c85:	8b 45 08             	mov    0x8(%ebp),%eax
81003c88:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003c8b:	5b                   	pop    %ebx
81003c8c:	5f                   	pop    %edi
81003c8d:	5e                   	pop    %esi
81003c8e:	c9                   	leave  
81003c8f:	c3                   	ret    

81003c90 <memmove>:
81003c90:	55                   	push   %ebp
81003c91:	89 e5                	mov    %esp,%ebp
81003c93:	56                   	push   %esi
81003c94:	57                   	push   %edi
81003c95:	53                   	push   %ebx
81003c96:	8b 7d 08             	mov    0x8(%ebp),%edi
81003c99:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003c9c:	8b 75 0c             	mov    0xc(%ebp),%esi
81003c9f:	fc                   	cld    
81003ca0:	39 fe                	cmp    %edi,%esi
81003ca2:	73 43                	jae    81003ce7 <memmove+0x57>
81003ca4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81003ca8:	39 df                	cmp    %ebx,%edi
81003caa:	77 3b                	ja     81003ce7 <memmove+0x57>
81003cac:	01 ce                	add    %ecx,%esi
81003cae:	01 cf                	add    %ecx,%edi
81003cb0:	fd                   	std    
81003cb1:	83 f9 08             	cmp    $0x8,%ecx
81003cb4:	76 2b                	jbe    81003ce1 <memmove+0x51>
81003cb6:	89 fa                	mov    %edi,%edx
81003cb8:	89 cb                	mov    %ecx,%ebx
81003cba:	83 e2 03             	and    $0x3,%edx
81003cbd:	74 0c                	je     81003ccb <memmove+0x3b>
81003cbf:	89 d1                	mov    %edx,%ecx
81003cc1:	4e                   	dec    %esi
81003cc2:	4f                   	dec    %edi
81003cc3:	29 cb                	sub    %ecx,%ebx
81003cc5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003cc7:	89 d9                	mov    %ebx,%ecx
81003cc9:	46                   	inc    %esi
81003cca:	47                   	inc    %edi
81003ccb:	c1 e9 02             	shr    $0x2,%ecx
81003cce:	83 ee 04             	sub    $0x4,%esi
81003cd1:	83 ef 04             	sub    $0x4,%edi
81003cd4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003cd6:	83 c6 04             	add    $0x4,%esi
81003cd9:	83 c7 04             	add    $0x4,%edi
81003cdc:	89 d9                	mov    %ebx,%ecx
81003cde:	83 e1 03             	and    $0x3,%ecx
81003ce1:	4e                   	dec    %esi
81003ce2:	4f                   	dec    %edi
81003ce3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003ce5:	eb 2a                	jmp    81003d11 <memmove+0x81>
81003ce7:	83 f9 08             	cmp    $0x8,%ecx
81003cea:	76 23                	jbe    81003d0f <memmove+0x7f>
81003cec:	89 fa                	mov    %edi,%edx
81003cee:	89 cb                	mov    %ecx,%ebx
81003cf0:	83 e2 03             	and    $0x3,%edx
81003cf3:	74 10                	je     81003d05 <memmove+0x75>
81003cf5:	b9 04 00 00 00       	mov    $0x4,%ecx
81003cfa:	29 d1                	sub    %edx,%ecx
81003cfc:	83 e1 03             	and    $0x3,%ecx
81003cff:	29 cb                	sub    %ecx,%ebx
81003d01:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003d03:	89 d9                	mov    %ebx,%ecx
81003d05:	c1 e9 02             	shr    $0x2,%ecx
81003d08:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003d0a:	89 d9                	mov    %ebx,%ecx
81003d0c:	83 e1 03             	and    $0x3,%ecx
81003d0f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003d11:	8b 45 08             	mov    0x8(%ebp),%eax
81003d14:	fc                   	cld    
81003d15:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003d18:	5b                   	pop    %ebx
81003d19:	5f                   	pop    %edi
81003d1a:	5e                   	pop    %esi
81003d1b:	c9                   	leave  
81003d1c:	c3                   	ret    

81003d1d <_realloc_r>:
81003d1d:	55                   	push   %ebp
81003d1e:	89 e5                	mov    %esp,%ebp
81003d20:	83 ec 78             	sub    $0x78,%esp
81003d23:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003d27:	75 16                	jne    81003d3f <_realloc_r+0x22>
81003d29:	83 ec 08             	sub    $0x8,%esp
81003d2c:	ff 75 10             	pushl  0x10(%ebp)
81003d2f:	ff 75 08             	pushl  0x8(%ebp)
81003d32:	e8 99 d6 ff ff       	call   810013d0 <_malloc_r>
81003d37:	83 c4 10             	add    $0x10,%esp
81003d3a:	e9 b6 08 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
81003d3f:	83 ec 0c             	sub    $0xc,%esp
81003d42:	ff 75 08             	pushl  0x8(%ebp)
81003d45:	e8 30 df ff ff       	call   81001c7a <__malloc_lock>
81003d4a:	83 c4 10             	add    $0x10,%esp
81003d4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d50:	83 e8 08             	sub    $0x8,%eax
81003d53:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003d56:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d5c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d5f:	8b 40 04             	mov    0x4(%eax),%eax
81003d62:	83 e0 fc             	and    $0xfffffffc,%eax
81003d65:	89 45 c0             	mov    %eax,-0x40(%ebp)
81003d68:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003d6b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d6e:	8b 45 10             	mov    0x10(%ebp),%eax
81003d71:	83 c0 0b             	add    $0xb,%eax
81003d74:	83 f8 16             	cmp    $0x16,%eax
81003d77:	76 0b                	jbe    81003d84 <_realloc_r+0x67>
81003d79:	8b 45 10             	mov    0x10(%ebp),%eax
81003d7c:	83 c0 0b             	add    $0xb,%eax
81003d7f:	83 e0 f8             	and    $0xfffffff8,%eax
81003d82:	eb 05                	jmp    81003d89 <_realloc_r+0x6c>
81003d84:	b8 10 00 00 00       	mov    $0x10,%eax
81003d89:	89 45 bc             	mov    %eax,-0x44(%ebp)
81003d8c:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003d8f:	85 c0                	test   %eax,%eax
81003d91:	78 08                	js     81003d9b <_realloc_r+0x7e>
81003d93:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003d96:	3b 45 10             	cmp    0x10(%ebp),%eax
81003d99:	73 13                	jae    81003dae <_realloc_r+0x91>
81003d9b:	8b 45 08             	mov    0x8(%ebp),%eax
81003d9e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003da4:	b8 00 00 00 00       	mov    $0x0,%eax
81003da9:	e9 47 08 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
81003dae:	8b 55 c0             	mov    -0x40(%ebp),%edx
81003db1:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003db4:	39 c2                	cmp    %eax,%edx
81003db6:	0f 8d 8b 07 00 00    	jge    81004547 <_realloc_r+0x82a>
81003dbc:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003dbf:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003dc2:	01 d0                	add    %edx,%eax
81003dc4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003dc7:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81003dcc:	8b 40 08             	mov    0x8(%eax),%eax
81003dcf:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003dd2:	74 1e                	je     81003df2 <_realloc_r+0xd5>
81003dd4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003dd7:	8b 40 04             	mov    0x4(%eax),%eax
81003dda:	83 e0 fe             	and    $0xfffffffe,%eax
81003ddd:	89 c2                	mov    %eax,%edx
81003ddf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003de2:	01 d0                	add    %edx,%eax
81003de4:	8b 40 04             	mov    0x4(%eax),%eax
81003de7:	83 e0 01             	and    $0x1,%eax
81003dea:	85 c0                	test   %eax,%eax
81003dec:	0f 85 ca 00 00 00    	jne    81003ebc <_realloc_r+0x19f>
81003df2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003df5:	8b 40 04             	mov    0x4(%eax),%eax
81003df8:	83 e0 fc             	and    $0xfffffffc,%eax
81003dfb:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003dfe:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81003e03:	8b 40 08             	mov    0x8(%eax),%eax
81003e06:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003e09:	75 71                	jne    81003e7c <_realloc_r+0x15f>
81003e0b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e11:	01 d0                	add    %edx,%eax
81003e13:	89 c2                	mov    %eax,%edx
81003e15:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003e18:	83 c0 10             	add    $0x10,%eax
81003e1b:	39 c2                	cmp    %eax,%edx
81003e1d:	0f 8c a9 00 00 00    	jl     81003ecc <_realloc_r+0x1af>
81003e23:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e26:	01 45 f0             	add    %eax,-0x10(%ebp)
81003e29:	ba e0 50 00 81       	mov    $0x810050e0,%edx
81003e2e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81003e31:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003e34:	01 c8                	add    %ecx,%eax
81003e36:	89 42 08             	mov    %eax,0x8(%edx)
81003e39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e3c:	2b 45 bc             	sub    -0x44(%ebp),%eax
81003e3f:	89 c2                	mov    %eax,%edx
81003e41:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81003e46:	8b 40 08             	mov    0x8(%eax),%eax
81003e49:	83 ca 01             	or     $0x1,%edx
81003e4c:	89 50 04             	mov    %edx,0x4(%eax)
81003e4f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e52:	8b 40 04             	mov    0x4(%eax),%eax
81003e55:	83 e0 01             	and    $0x1,%eax
81003e58:	0b 45 bc             	or     -0x44(%ebp),%eax
81003e5b:	89 c2                	mov    %eax,%edx
81003e5d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e60:	89 50 04             	mov    %edx,0x4(%eax)
81003e63:	83 ec 0c             	sub    $0xc,%esp
81003e66:	ff 75 08             	pushl  0x8(%ebp)
81003e69:	e8 12 de ff ff       	call   81001c80 <__malloc_unlock>
81003e6e:	83 c4 10             	add    $0x10,%esp
81003e71:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e74:	83 c0 08             	add    $0x8,%eax
81003e77:	e9 79 07 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
81003e7c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e82:	01 d0                	add    %edx,%eax
81003e84:	89 c2                	mov    %eax,%edx
81003e86:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003e89:	39 c2                	cmp    %eax,%edx
81003e8b:	7c 3f                	jl     81003ecc <_realloc_r+0x1af>
81003e8d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e90:	8b 40 0c             	mov    0xc(%eax),%eax
81003e93:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003e96:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e99:	8b 40 08             	mov    0x8(%eax),%eax
81003e9c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003e9f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003ea2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003ea5:	89 50 0c             	mov    %edx,0xc(%eax)
81003ea8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003eab:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003eae:	89 50 08             	mov    %edx,0x8(%eax)
81003eb1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003eb4:	01 45 f0             	add    %eax,-0x10(%ebp)
81003eb7:	e9 8c 06 00 00       	jmp    81004548 <_realloc_r+0x82b>
81003ebc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003ec3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003eca:	eb 01                	jmp    81003ecd <_realloc_r+0x1b0>
81003ecc:	90                   	nop
81003ecd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ed0:	8b 40 04             	mov    0x4(%eax),%eax
81003ed3:	83 e0 01             	and    $0x1,%eax
81003ed6:	85 c0                	test   %eax,%eax
81003ed8:	0f 85 d6 04 00 00    	jne    810043b4 <_realloc_r+0x697>
81003ede:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ee1:	8b 00                	mov    (%eax),%eax
81003ee3:	f7 d8                	neg    %eax
81003ee5:	89 c2                	mov    %eax,%edx
81003ee7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003eea:	01 d0                	add    %edx,%eax
81003eec:	89 45 b0             	mov    %eax,-0x50(%ebp)
81003eef:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003ef2:	8b 40 04             	mov    0x4(%eax),%eax
81003ef5:	83 e0 fc             	and    $0xfffffffc,%eax
81003ef8:	89 45 ac             	mov    %eax,-0x54(%ebp)
81003efb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003eff:	0f 84 4a 03 00 00    	je     8100424f <_realloc_r+0x532>
81003f05:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81003f0a:	8b 40 08             	mov    0x8(%eax),%eax
81003f0d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003f10:	0f 85 b0 01 00 00    	jne    810040c6 <_realloc_r+0x3a9>
81003f16:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003f19:	8b 45 ac             	mov    -0x54(%ebp),%eax
81003f1c:	01 c2                	add    %eax,%edx
81003f1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f21:	01 d0                	add    %edx,%eax
81003f23:	89 c2                	mov    %eax,%edx
81003f25:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003f28:	83 c0 10             	add    $0x10,%eax
81003f2b:	39 c2                	cmp    %eax,%edx
81003f2d:	0f 8c 1c 03 00 00    	jl     8100424f <_realloc_r+0x532>
81003f33:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003f36:	8b 40 0c             	mov    0xc(%eax),%eax
81003f39:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003f3c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003f3f:	8b 40 08             	mov    0x8(%eax),%eax
81003f42:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003f45:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003f48:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003f4b:	89 50 0c             	mov    %edx,0xc(%eax)
81003f4e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003f51:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003f54:	89 50 08             	mov    %edx,0x8(%eax)
81003f57:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003f5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f5d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81003f60:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f63:	01 d0                	add    %edx,%eax
81003f65:	01 45 f0             	add    %eax,-0x10(%ebp)
81003f68:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f6b:	83 c0 08             	add    $0x8,%eax
81003f6e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81003f71:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003f74:	83 e8 04             	sub    $0x4,%eax
81003f77:	89 45 a0             	mov    %eax,-0x60(%ebp)
81003f7a:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81003f7e:	0f 87 de 00 00 00    	ja     81004062 <_realloc_r+0x345>
81003f84:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f87:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003f8a:	8b 45 a8             	mov    -0x58(%ebp),%eax
81003f8d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f90:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81003f94:	0f 86 90 00 00 00    	jbe    8100402a <_realloc_r+0x30d>
81003f9a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003f9d:	8d 42 04             	lea    0x4(%edx),%eax
81003fa0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003fa3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003fa6:	8d 48 04             	lea    0x4(%eax),%ecx
81003fa9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003fac:	8b 12                	mov    (%edx),%edx
81003fae:	89 10                	mov    %edx,(%eax)
81003fb0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003fb3:	8d 42 04             	lea    0x4(%edx),%eax
81003fb6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003fb9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003fbc:	8d 48 04             	lea    0x4(%eax),%ecx
81003fbf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003fc2:	8b 12                	mov    (%edx),%edx
81003fc4:	89 10                	mov    %edx,(%eax)
81003fc6:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81003fca:	76 5e                	jbe    8100402a <_realloc_r+0x30d>
81003fcc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003fcf:	8d 42 04             	lea    0x4(%edx),%eax
81003fd2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003fd5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003fd8:	8d 48 04             	lea    0x4(%eax),%ecx
81003fdb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003fde:	8b 12                	mov    (%edx),%edx
81003fe0:	89 10                	mov    %edx,(%eax)
81003fe2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003fe5:	8d 42 04             	lea    0x4(%edx),%eax
81003fe8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003feb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003fee:	8d 48 04             	lea    0x4(%eax),%ecx
81003ff1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003ff4:	8b 12                	mov    (%edx),%edx
81003ff6:	89 10                	mov    %edx,(%eax)
81003ff8:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81003ffc:	76 2c                	jbe    8100402a <_realloc_r+0x30d>
81003ffe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004001:	8d 42 04             	lea    0x4(%edx),%eax
81004004:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004007:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100400a:	8d 48 04             	lea    0x4(%eax),%ecx
8100400d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004010:	8b 12                	mov    (%edx),%edx
81004012:	89 10                	mov    %edx,(%eax)
81004014:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004017:	8d 42 04             	lea    0x4(%edx),%eax
8100401a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100401d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004020:	8d 48 04             	lea    0x4(%eax),%ecx
81004023:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004026:	8b 12                	mov    (%edx),%edx
81004028:	89 10                	mov    %edx,(%eax)
8100402a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100402d:	8d 42 04             	lea    0x4(%edx),%eax
81004030:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004033:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004036:	8d 48 04             	lea    0x4(%eax),%ecx
81004039:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100403c:	8b 12                	mov    (%edx),%edx
8100403e:	89 10                	mov    %edx,(%eax)
81004040:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004043:	8d 42 04             	lea    0x4(%edx),%eax
81004046:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004049:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100404c:	8d 48 04             	lea    0x4(%eax),%ecx
8100404f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004052:	8b 12                	mov    (%edx),%edx
81004054:	89 10                	mov    %edx,(%eax)
81004056:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004059:	8b 10                	mov    (%eax),%edx
8100405b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100405e:	89 10                	mov    %edx,(%eax)
81004060:	eb 14                	jmp    81004076 <_realloc_r+0x359>
81004062:	83 ec 04             	sub    $0x4,%esp
81004065:	ff 75 a0             	pushl  -0x60(%ebp)
81004068:	ff 75 0c             	pushl  0xc(%ebp)
8100406b:	ff 75 a8             	pushl  -0x58(%ebp)
8100406e:	e8 1d fc ff ff       	call   81003c90 <memmove>
81004073:	83 c4 10             	add    $0x10,%esp
81004076:	ba e0 50 00 81       	mov    $0x810050e0,%edx
8100407b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100407e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004081:	01 c8                	add    %ecx,%eax
81004083:	89 42 08             	mov    %eax,0x8(%edx)
81004086:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004089:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100408c:	89 c2                	mov    %eax,%edx
8100408e:	b8 e0 50 00 81       	mov    $0x810050e0,%eax
81004093:	8b 40 08             	mov    0x8(%eax),%eax
81004096:	83 ca 01             	or     $0x1,%edx
81004099:	89 50 04             	mov    %edx,0x4(%eax)
8100409c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100409f:	8b 40 04             	mov    0x4(%eax),%eax
810040a2:	83 e0 01             	and    $0x1,%eax
810040a5:	0b 45 bc             	or     -0x44(%ebp),%eax
810040a8:	89 c2                	mov    %eax,%edx
810040aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040ad:	89 50 04             	mov    %edx,0x4(%eax)
810040b0:	83 ec 0c             	sub    $0xc,%esp
810040b3:	ff 75 08             	pushl  0x8(%ebp)
810040b6:	e8 c5 db ff ff       	call   81001c80 <__malloc_unlock>
810040bb:	83 c4 10             	add    $0x10,%esp
810040be:	8b 45 a8             	mov    -0x58(%ebp),%eax
810040c1:	e9 2f 05 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
810040c6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810040c9:	8b 45 ac             	mov    -0x54(%ebp),%eax
810040cc:	01 c2                	add    %eax,%edx
810040ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040d1:	01 d0                	add    %edx,%eax
810040d3:	89 c2                	mov    %eax,%edx
810040d5:	8b 45 bc             	mov    -0x44(%ebp),%eax
810040d8:	39 c2                	cmp    %eax,%edx
810040da:	0f 8c 6f 01 00 00    	jl     8100424f <_realloc_r+0x532>
810040e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040e3:	8b 40 0c             	mov    0xc(%eax),%eax
810040e6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810040e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040ec:	8b 40 08             	mov    0x8(%eax),%eax
810040ef:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810040f2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810040f5:	8b 55 b8             	mov    -0x48(%ebp),%edx
810040f8:	89 50 0c             	mov    %edx,0xc(%eax)
810040fb:	8b 45 b8             	mov    -0x48(%ebp),%eax
810040fe:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81004101:	89 50 08             	mov    %edx,0x8(%eax)
81004104:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004107:	8b 40 0c             	mov    0xc(%eax),%eax
8100410a:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100410d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004110:	8b 40 08             	mov    0x8(%eax),%eax
81004113:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81004116:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81004119:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100411c:	89 50 0c             	mov    %edx,0xc(%eax)
8100411f:	8b 45 b8             	mov    -0x48(%ebp),%eax
81004122:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81004125:	89 50 08             	mov    %edx,0x8(%eax)
81004128:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100412b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100412e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004131:	8b 45 ac             	mov    -0x54(%ebp),%eax
81004134:	01 d0                	add    %edx,%eax
81004136:	01 45 f0             	add    %eax,-0x10(%ebp)
81004139:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100413c:	83 c0 08             	add    $0x8,%eax
8100413f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81004142:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004145:	83 e8 04             	sub    $0x4,%eax
81004148:	89 45 a4             	mov    %eax,-0x5c(%ebp)
8100414b:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
8100414f:	0f 87 e1 00 00 00    	ja     81004236 <_realloc_r+0x519>
81004155:	8b 45 0c             	mov    0xc(%ebp),%eax
81004158:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100415b:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100415e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004161:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81004165:	0f 86 90 00 00 00    	jbe    810041fb <_realloc_r+0x4de>
8100416b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100416e:	8d 42 04             	lea    0x4(%edx),%eax
81004171:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004174:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004177:	8d 48 04             	lea    0x4(%eax),%ecx
8100417a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100417d:	8b 12                	mov    (%edx),%edx
8100417f:	89 10                	mov    %edx,(%eax)
81004181:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004184:	8d 42 04             	lea    0x4(%edx),%eax
81004187:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100418a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100418d:	8d 48 04             	lea    0x4(%eax),%ecx
81004190:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81004193:	8b 12                	mov    (%edx),%edx
81004195:	89 10                	mov    %edx,(%eax)
81004197:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100419b:	76 5e                	jbe    810041fb <_realloc_r+0x4de>
8100419d:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041a0:	8d 42 04             	lea    0x4(%edx),%eax
810041a3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810041a6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041a9:	8d 48 04             	lea    0x4(%eax),%ecx
810041ac:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810041af:	8b 12                	mov    (%edx),%edx
810041b1:	89 10                	mov    %edx,(%eax)
810041b3:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041b6:	8d 42 04             	lea    0x4(%edx),%eax
810041b9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810041bc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041bf:	8d 48 04             	lea    0x4(%eax),%ecx
810041c2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810041c5:	8b 12                	mov    (%edx),%edx
810041c7:	89 10                	mov    %edx,(%eax)
810041c9:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810041cd:	76 2c                	jbe    810041fb <_realloc_r+0x4de>
810041cf:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041d2:	8d 42 04             	lea    0x4(%edx),%eax
810041d5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810041d8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041db:	8d 48 04             	lea    0x4(%eax),%ecx
810041de:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810041e1:	8b 12                	mov    (%edx),%edx
810041e3:	89 10                	mov    %edx,(%eax)
810041e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041e8:	8d 42 04             	lea    0x4(%edx),%eax
810041eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810041ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041f1:	8d 48 04             	lea    0x4(%eax),%ecx
810041f4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810041f7:	8b 12                	mov    (%edx),%edx
810041f9:	89 10                	mov    %edx,(%eax)
810041fb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041fe:	8d 42 04             	lea    0x4(%edx),%eax
81004201:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004204:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004207:	8d 48 04             	lea    0x4(%eax),%ecx
8100420a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100420d:	8b 12                	mov    (%edx),%edx
8100420f:	89 10                	mov    %edx,(%eax)
81004211:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004214:	8d 42 04             	lea    0x4(%edx),%eax
81004217:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100421a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100421d:	8d 48 04             	lea    0x4(%eax),%ecx
81004220:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81004223:	8b 12                	mov    (%edx),%edx
81004225:	89 10                	mov    %edx,(%eax)
81004227:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100422a:	8b 10                	mov    (%eax),%edx
8100422c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100422f:	89 10                	mov    %edx,(%eax)
81004231:	e9 12 03 00 00       	jmp    81004548 <_realloc_r+0x82b>
81004236:	83 ec 04             	sub    $0x4,%esp
81004239:	ff 75 a4             	pushl  -0x5c(%ebp)
8100423c:	ff 75 0c             	pushl  0xc(%ebp)
8100423f:	ff 75 a8             	pushl  -0x58(%ebp)
81004242:	e8 49 fa ff ff       	call   81003c90 <memmove>
81004247:	83 c4 10             	add    $0x10,%esp
8100424a:	e9 f9 02 00 00       	jmp    81004548 <_realloc_r+0x82b>
8100424f:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81004253:	0f 84 5b 01 00 00    	je     810043b4 <_realloc_r+0x697>
81004259:	8b 55 ac             	mov    -0x54(%ebp),%edx
8100425c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100425f:	01 d0                	add    %edx,%eax
81004261:	89 c2                	mov    %eax,%edx
81004263:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004266:	39 c2                	cmp    %eax,%edx
81004268:	0f 8c 46 01 00 00    	jl     810043b4 <_realloc_r+0x697>
8100426e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004271:	8b 40 0c             	mov    0xc(%eax),%eax
81004274:	89 45 b8             	mov    %eax,-0x48(%ebp)
81004277:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100427a:	8b 40 08             	mov    0x8(%eax),%eax
8100427d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81004280:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81004283:	8b 55 b8             	mov    -0x48(%ebp),%edx
81004286:	89 50 0c             	mov    %edx,0xc(%eax)
81004289:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100428c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100428f:	89 50 08             	mov    %edx,0x8(%eax)
81004292:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004295:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004298:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100429b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100429e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a1:	83 c0 08             	add    $0x8,%eax
810042a4:	89 45 a8             	mov    %eax,-0x58(%ebp)
810042a7:	8b 45 c0             	mov    -0x40(%ebp),%eax
810042aa:	83 e8 04             	sub    $0x4,%eax
810042ad:	89 45 9c             	mov    %eax,-0x64(%ebp)
810042b0:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810042b4:	0f 87 e1 00 00 00    	ja     8100439b <_realloc_r+0x67e>
810042ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810042bd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810042c0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810042c3:	89 45 d0             	mov    %eax,-0x30(%ebp)
810042c6:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810042ca:	0f 86 90 00 00 00    	jbe    81004360 <_realloc_r+0x643>
810042d0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810042d3:	8d 42 04             	lea    0x4(%edx),%eax
810042d6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810042d9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042dc:	8d 48 04             	lea    0x4(%eax),%ecx
810042df:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810042e2:	8b 12                	mov    (%edx),%edx
810042e4:	89 10                	mov    %edx,(%eax)
810042e6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810042e9:	8d 42 04             	lea    0x4(%edx),%eax
810042ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810042ef:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042f2:	8d 48 04             	lea    0x4(%eax),%ecx
810042f5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810042f8:	8b 12                	mov    (%edx),%edx
810042fa:	89 10                	mov    %edx,(%eax)
810042fc:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81004300:	76 5e                	jbe    81004360 <_realloc_r+0x643>
81004302:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004305:	8d 42 04             	lea    0x4(%edx),%eax
81004308:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100430b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100430e:	8d 48 04             	lea    0x4(%eax),%ecx
81004311:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004314:	8b 12                	mov    (%edx),%edx
81004316:	89 10                	mov    %edx,(%eax)
81004318:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100431b:	8d 42 04             	lea    0x4(%edx),%eax
8100431e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004321:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004324:	8d 48 04             	lea    0x4(%eax),%ecx
81004327:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100432a:	8b 12                	mov    (%edx),%edx
8100432c:	89 10                	mov    %edx,(%eax)
8100432e:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81004332:	76 2c                	jbe    81004360 <_realloc_r+0x643>
81004334:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004337:	8d 42 04             	lea    0x4(%edx),%eax
8100433a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100433d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004340:	8d 48 04             	lea    0x4(%eax),%ecx
81004343:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004346:	8b 12                	mov    (%edx),%edx
81004348:	89 10                	mov    %edx,(%eax)
8100434a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100434d:	8d 42 04             	lea    0x4(%edx),%eax
81004350:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004353:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004356:	8d 48 04             	lea    0x4(%eax),%ecx
81004359:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100435c:	8b 12                	mov    (%edx),%edx
8100435e:	89 10                	mov    %edx,(%eax)
81004360:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004363:	8d 42 04             	lea    0x4(%edx),%eax
81004366:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004369:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100436c:	8d 48 04             	lea    0x4(%eax),%ecx
8100436f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004372:	8b 12                	mov    (%edx),%edx
81004374:	89 10                	mov    %edx,(%eax)
81004376:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004379:	8d 42 04             	lea    0x4(%edx),%eax
8100437c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100437f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004382:	8d 48 04             	lea    0x4(%eax),%ecx
81004385:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004388:	8b 12                	mov    (%edx),%edx
8100438a:	89 10                	mov    %edx,(%eax)
8100438c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100438f:	8b 10                	mov    (%eax),%edx
81004391:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004394:	89 10                	mov    %edx,(%eax)
81004396:	e9 ad 01 00 00       	jmp    81004548 <_realloc_r+0x82b>
8100439b:	83 ec 04             	sub    $0x4,%esp
8100439e:	ff 75 9c             	pushl  -0x64(%ebp)
810043a1:	ff 75 0c             	pushl  0xc(%ebp)
810043a4:	ff 75 a8             	pushl  -0x58(%ebp)
810043a7:	e8 e4 f8 ff ff       	call   81003c90 <memmove>
810043ac:	83 c4 10             	add    $0x10,%esp
810043af:	e9 94 01 00 00       	jmp    81004548 <_realloc_r+0x82b>
810043b4:	83 ec 08             	sub    $0x8,%esp
810043b7:	ff 75 10             	pushl  0x10(%ebp)
810043ba:	ff 75 08             	pushl  0x8(%ebp)
810043bd:	e8 0e d0 ff ff       	call   810013d0 <_malloc_r>
810043c2:	83 c4 10             	add    $0x10,%esp
810043c5:	89 45 a8             	mov    %eax,-0x58(%ebp)
810043c8:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810043cc:	75 18                	jne    810043e6 <_realloc_r+0x6c9>
810043ce:	83 ec 0c             	sub    $0xc,%esp
810043d1:	ff 75 08             	pushl  0x8(%ebp)
810043d4:	e8 a7 d8 ff ff       	call   81001c80 <__malloc_unlock>
810043d9:	83 c4 10             	add    $0x10,%esp
810043dc:	b8 00 00 00 00       	mov    $0x0,%eax
810043e1:	e9 0f 02 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
810043e6:	8b 45 a8             	mov    -0x58(%ebp),%eax
810043e9:	83 e8 08             	sub    $0x8,%eax
810043ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043ef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810043f2:	8b 40 04             	mov    0x4(%eax),%eax
810043f5:	83 e0 fe             	and    $0xfffffffe,%eax
810043f8:	89 c2                	mov    %eax,%edx
810043fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810043fd:	01 d0                	add    %edx,%eax
810043ff:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81004402:	75 17                	jne    8100441b <_realloc_r+0x6fe>
81004404:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004407:	8b 40 04             	mov    0x4(%eax),%eax
8100440a:	83 e0 fc             	and    $0xfffffffc,%eax
8100440d:	01 45 f0             	add    %eax,-0x10(%ebp)
81004410:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004413:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004416:	e9 2d 01 00 00       	jmp    81004548 <_realloc_r+0x82b>
8100441b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100441e:	83 e8 04             	sub    $0x4,%eax
81004421:	89 45 98             	mov    %eax,-0x68(%ebp)
81004424:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81004428:	0f 87 de 00 00 00    	ja     8100450c <_realloc_r+0x7ef>
8100442e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004431:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004434:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004437:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100443a:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100443e:	0f 86 90 00 00 00    	jbe    810044d4 <_realloc_r+0x7b7>
81004444:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004447:	8d 42 04             	lea    0x4(%edx),%eax
8100444a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100444d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004450:	8d 48 04             	lea    0x4(%eax),%ecx
81004453:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004456:	8b 12                	mov    (%edx),%edx
81004458:	89 10                	mov    %edx,(%eax)
8100445a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100445d:	8d 42 04             	lea    0x4(%edx),%eax
81004460:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004463:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004466:	8d 48 04             	lea    0x4(%eax),%ecx
81004469:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100446c:	8b 12                	mov    (%edx),%edx
8100446e:	89 10                	mov    %edx,(%eax)
81004470:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81004474:	76 5e                	jbe    810044d4 <_realloc_r+0x7b7>
81004476:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004479:	8d 42 04             	lea    0x4(%edx),%eax
8100447c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100447f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004482:	8d 48 04             	lea    0x4(%eax),%ecx
81004485:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004488:	8b 12                	mov    (%edx),%edx
8100448a:	89 10                	mov    %edx,(%eax)
8100448c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100448f:	8d 42 04             	lea    0x4(%edx),%eax
81004492:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004495:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004498:	8d 48 04             	lea    0x4(%eax),%ecx
8100449b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100449e:	8b 12                	mov    (%edx),%edx
810044a0:	89 10                	mov    %edx,(%eax)
810044a2:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810044a6:	76 2c                	jbe    810044d4 <_realloc_r+0x7b7>
810044a8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810044ab:	8d 42 04             	lea    0x4(%edx),%eax
810044ae:	89 45 cc             	mov    %eax,-0x34(%ebp)
810044b1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044b4:	8d 48 04             	lea    0x4(%eax),%ecx
810044b7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810044ba:	8b 12                	mov    (%edx),%edx
810044bc:	89 10                	mov    %edx,(%eax)
810044be:	8b 55 cc             	mov    -0x34(%ebp),%edx
810044c1:	8d 42 04             	lea    0x4(%edx),%eax
810044c4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810044c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044ca:	8d 48 04             	lea    0x4(%eax),%ecx
810044cd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810044d0:	8b 12                	mov    (%edx),%edx
810044d2:	89 10                	mov    %edx,(%eax)
810044d4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810044d7:	8d 42 04             	lea    0x4(%edx),%eax
810044da:	89 45 cc             	mov    %eax,-0x34(%ebp)
810044dd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044e0:	8d 48 04             	lea    0x4(%eax),%ecx
810044e3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810044e6:	8b 12                	mov    (%edx),%edx
810044e8:	89 10                	mov    %edx,(%eax)
810044ea:	8b 55 cc             	mov    -0x34(%ebp),%edx
810044ed:	8d 42 04             	lea    0x4(%edx),%eax
810044f0:	89 45 cc             	mov    %eax,-0x34(%ebp)
810044f3:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044f6:	8d 48 04             	lea    0x4(%eax),%ecx
810044f9:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810044fc:	8b 12                	mov    (%edx),%edx
810044fe:	89 10                	mov    %edx,(%eax)
81004500:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004503:	8b 10                	mov    (%eax),%edx
81004505:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004508:	89 10                	mov    %edx,(%eax)
8100450a:	eb 14                	jmp    81004520 <_realloc_r+0x803>
8100450c:	83 ec 04             	sub    $0x4,%esp
8100450f:	ff 75 98             	pushl  -0x68(%ebp)
81004512:	ff 75 0c             	pushl  0xc(%ebp)
81004515:	ff 75 a8             	pushl  -0x58(%ebp)
81004518:	e8 73 f7 ff ff       	call   81003c90 <memmove>
8100451d:	83 c4 10             	add    $0x10,%esp
81004520:	83 ec 08             	sub    $0x8,%esp
81004523:	ff 75 0c             	pushl  0xc(%ebp)
81004526:	ff 75 08             	pushl  0x8(%ebp)
81004529:	e8 3a c5 ff ff       	call   81000a68 <_free_r>
8100452e:	83 c4 10             	add    $0x10,%esp
81004531:	83 ec 0c             	sub    $0xc,%esp
81004534:	ff 75 08             	pushl  0x8(%ebp)
81004537:	e8 44 d7 ff ff       	call   81001c80 <__malloc_unlock>
8100453c:	83 c4 10             	add    $0x10,%esp
8100453f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004542:	e9 ae 00 00 00       	jmp    810045f5 <_realloc_r+0x8d8>
81004547:	90                   	nop
81004548:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100454b:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100454e:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004551:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81004555:	76 5d                	jbe    810045b4 <_realloc_r+0x897>
81004557:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100455a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100455d:	01 d0                	add    %edx,%eax
8100455f:	89 45 90             	mov    %eax,-0x70(%ebp)
81004562:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004565:	8b 40 04             	mov    0x4(%eax),%eax
81004568:	83 e0 01             	and    $0x1,%eax
8100456b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100456e:	89 c2                	mov    %eax,%edx
81004570:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004573:	89 50 04             	mov    %edx,0x4(%eax)
81004576:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004579:	83 c8 01             	or     $0x1,%eax
8100457c:	89 c2                	mov    %eax,%edx
8100457e:	8b 45 90             	mov    -0x70(%ebp),%eax
81004581:	89 50 04             	mov    %edx,0x4(%eax)
81004584:	8b 55 90             	mov    -0x70(%ebp),%edx
81004587:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100458a:	01 d0                	add    %edx,%eax
8100458c:	8b 50 04             	mov    0x4(%eax),%edx
8100458f:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81004592:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004595:	01 c8                	add    %ecx,%eax
81004597:	83 ca 01             	or     $0x1,%edx
8100459a:	89 50 04             	mov    %edx,0x4(%eax)
8100459d:	8b 45 90             	mov    -0x70(%ebp),%eax
810045a0:	83 c0 08             	add    $0x8,%eax
810045a3:	83 ec 08             	sub    $0x8,%esp
810045a6:	50                   	push   %eax
810045a7:	ff 75 08             	pushl  0x8(%ebp)
810045aa:	e8 b9 c4 ff ff       	call   81000a68 <_free_r>
810045af:	83 c4 10             	add    $0x10,%esp
810045b2:	eb 2d                	jmp    810045e1 <_realloc_r+0x8c4>
810045b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045b7:	8b 40 04             	mov    0x4(%eax),%eax
810045ba:	83 e0 01             	and    $0x1,%eax
810045bd:	0b 45 f0             	or     -0x10(%ebp),%eax
810045c0:	89 c2                	mov    %eax,%edx
810045c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045c5:	89 50 04             	mov    %edx,0x4(%eax)
810045c8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810045cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045ce:	01 d0                	add    %edx,%eax
810045d0:	8b 50 04             	mov    0x4(%eax),%edx
810045d3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810045d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045d9:	01 c8                	add    %ecx,%eax
810045db:	83 ca 01             	or     $0x1,%edx
810045de:	89 50 04             	mov    %edx,0x4(%eax)
810045e1:	83 ec 0c             	sub    $0xc,%esp
810045e4:	ff 75 08             	pushl  0x8(%ebp)
810045e7:	e8 94 d6 ff ff       	call   81001c80 <__malloc_unlock>
810045ec:	83 c4 10             	add    $0x10,%esp
810045ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045f2:	83 c0 08             	add    $0x8,%eax
810045f5:	c9                   	leave  
810045f6:	c3                   	ret    

810045f7 <strcmp>:
810045f7:	55                   	push   %ebp
810045f8:	89 e5                	mov    %esp,%ebp
810045fa:	83 ec 10             	sub    $0x10,%esp
810045fd:	8b 55 08             	mov    0x8(%ebp),%edx
81004600:	8b 45 0c             	mov    0xc(%ebp),%eax
81004603:	09 d0                	or     %edx,%eax
81004605:	83 e0 03             	and    $0x3,%eax
81004608:	85 c0                	test   %eax,%eax
8100460a:	75 5e                	jne    8100466a <strcmp+0x73>
8100460c:	8b 45 08             	mov    0x8(%ebp),%eax
8100460f:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004612:	8b 45 0c             	mov    0xc(%ebp),%eax
81004615:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004618:	eb 2c                	jmp    81004646 <strcmp+0x4f>
8100461a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100461d:	8b 00                	mov    (%eax),%eax
8100461f:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81004625:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004628:	8b 00                	mov    (%eax),%eax
8100462a:	f7 d0                	not    %eax
8100462c:	21 d0                	and    %edx,%eax
8100462e:	25 80 80 80 80       	and    $0x80808080,%eax
81004633:	85 c0                	test   %eax,%eax
81004635:	74 07                	je     8100463e <strcmp+0x47>
81004637:	b8 00 00 00 00       	mov    $0x0,%eax
8100463c:	eb 5c                	jmp    8100469a <strcmp+0xa3>
8100463e:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004642:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004646:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004649:	8b 10                	mov    (%eax),%edx
8100464b:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100464e:	8b 00                	mov    (%eax),%eax
81004650:	39 c2                	cmp    %eax,%edx
81004652:	74 c6                	je     8100461a <strcmp+0x23>
81004654:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004657:	89 45 08             	mov    %eax,0x8(%ebp)
8100465a:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100465d:	89 45 0c             	mov    %eax,0xc(%ebp)
81004660:	eb 08                	jmp    8100466a <strcmp+0x73>
81004662:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81004666:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100466a:	8b 45 08             	mov    0x8(%ebp),%eax
8100466d:	0f b6 00             	movzbl (%eax),%eax
81004670:	84 c0                	test   %al,%al
81004672:	74 10                	je     81004684 <strcmp+0x8d>
81004674:	8b 45 08             	mov    0x8(%ebp),%eax
81004677:	0f b6 10             	movzbl (%eax),%edx
8100467a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100467d:	0f b6 00             	movzbl (%eax),%eax
81004680:	38 c2                	cmp    %al,%dl
81004682:	74 de                	je     81004662 <strcmp+0x6b>
81004684:	8b 45 08             	mov    0x8(%ebp),%eax
81004687:	0f b6 00             	movzbl (%eax),%eax
8100468a:	0f b6 d0             	movzbl %al,%edx
8100468d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004690:	0f b6 00             	movzbl (%eax),%eax
81004693:	0f b6 c8             	movzbl %al,%ecx
81004696:	89 d0                	mov    %edx,%eax
81004698:	29 c8                	sub    %ecx,%eax
8100469a:	c9                   	leave  
8100469b:	c3                   	ret    

8100469c <__get_global_locale>:
8100469c:	55                   	push   %ebp
8100469d:	89 e5                	mov    %esp,%ebp
8100469f:	b8 00 55 00 81       	mov    $0x81005500,%eax
810046a4:	5d                   	pop    %ebp
810046a5:	c3                   	ret    

810046a6 <__get_current_locale>:
810046a6:	55                   	push   %ebp
810046a7:	89 e5                	mov    %esp,%ebp
810046a9:	e8 ee ff ff ff       	call   8100469c <__get_global_locale>
810046ae:	5d                   	pop    %ebp
810046af:	c3                   	ret    

810046b0 <_wcrtomb_r>:
810046b0:	55                   	push   %ebp
810046b1:	89 e5                	mov    %esp,%ebp
810046b3:	83 ec 18             	sub    $0x18,%esp
810046b6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810046bd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810046c1:	75 21                	jne    810046e4 <_wcrtomb_r+0x34>
810046c3:	e8 de ff ff ff       	call   810046a6 <__get_current_locale>
810046c8:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810046ce:	ff 75 14             	pushl  0x14(%ebp)
810046d1:	6a 00                	push   $0x0
810046d3:	8d 55 ea             	lea    -0x16(%ebp),%edx
810046d6:	52                   	push   %edx
810046d7:	ff 75 08             	pushl  0x8(%ebp)
810046da:	ff d0                	call   *%eax
810046dc:	83 c4 10             	add    $0x10,%esp
810046df:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046e2:	eb 1f                	jmp    81004703 <_wcrtomb_r+0x53>
810046e4:	e8 bd ff ff ff       	call   810046a6 <__get_current_locale>
810046e9:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810046ef:	ff 75 14             	pushl  0x14(%ebp)
810046f2:	ff 75 10             	pushl  0x10(%ebp)
810046f5:	ff 75 0c             	pushl  0xc(%ebp)
810046f8:	ff 75 08             	pushl  0x8(%ebp)
810046fb:	ff d0                	call   *%eax
810046fd:	83 c4 10             	add    $0x10,%esp
81004700:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004703:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004707:	75 19                	jne    81004722 <_wcrtomb_r+0x72>
81004709:	8b 45 14             	mov    0x14(%ebp),%eax
8100470c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004712:	8b 45 08             	mov    0x8(%ebp),%eax
81004715:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100471b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004720:	eb 03                	jmp    81004725 <_wcrtomb_r+0x75>
81004722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004725:	c9                   	leave  
81004726:	c3                   	ret    

81004727 <wcrtomb>:
81004727:	55                   	push   %ebp
81004728:	89 e5                	mov    %esp,%ebp
8100472a:	83 ec 28             	sub    $0x28,%esp
8100472d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004734:	a1 c4 50 00 81       	mov    0x810050c4,%eax
81004739:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100473c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81004740:	75 21                	jne    81004763 <wcrtomb+0x3c>
81004742:	e8 5f ff ff ff       	call   810046a6 <__get_current_locale>
81004747:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100474d:	ff 75 10             	pushl  0x10(%ebp)
81004750:	6a 00                	push   $0x0
81004752:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81004755:	52                   	push   %edx
81004756:	ff 75 f0             	pushl  -0x10(%ebp)
81004759:	ff d0                	call   *%eax
8100475b:	83 c4 10             	add    $0x10,%esp
8100475e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004761:	eb 1f                	jmp    81004782 <wcrtomb+0x5b>
81004763:	e8 3e ff ff ff       	call   810046a6 <__get_current_locale>
81004768:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100476e:	ff 75 10             	pushl  0x10(%ebp)
81004771:	ff 75 0c             	pushl  0xc(%ebp)
81004774:	ff 75 08             	pushl  0x8(%ebp)
81004777:	ff 75 f0             	pushl  -0x10(%ebp)
8100477a:	ff d0                	call   *%eax
8100477c:	83 c4 10             	add    $0x10,%esp
8100477f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004782:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004786:	75 19                	jne    810047a1 <wcrtomb+0x7a>
81004788:	8b 45 10             	mov    0x10(%ebp),%eax
8100478b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004791:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004794:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100479a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100479f:	eb 03                	jmp    810047a4 <wcrtomb+0x7d>
810047a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047a4:	c9                   	leave  
810047a5:	c3                   	ret    

810047a6 <__get_global_locale>:
810047a6:	55                   	push   %ebp
810047a7:	89 e5                	mov    %esp,%ebp
810047a9:	b8 00 55 00 81       	mov    $0x81005500,%eax
810047ae:	5d                   	pop    %ebp
810047af:	c3                   	ret    

810047b0 <__get_current_locale>:
810047b0:	55                   	push   %ebp
810047b1:	89 e5                	mov    %esp,%ebp
810047b3:	e8 ee ff ff ff       	call   810047a6 <__get_global_locale>
810047b8:	5d                   	pop    %ebp
810047b9:	c3                   	ret    

810047ba <_wctomb_r>:
810047ba:	55                   	push   %ebp
810047bb:	89 e5                	mov    %esp,%ebp
810047bd:	83 ec 08             	sub    $0x8,%esp
810047c0:	e8 eb ff ff ff       	call   810047b0 <__get_current_locale>
810047c5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810047cb:	ff 75 14             	pushl  0x14(%ebp)
810047ce:	ff 75 10             	pushl  0x10(%ebp)
810047d1:	ff 75 0c             	pushl  0xc(%ebp)
810047d4:	ff 75 08             	pushl  0x8(%ebp)
810047d7:	ff d0                	call   *%eax
810047d9:	83 c4 10             	add    $0x10,%esp
810047dc:	c9                   	leave  
810047dd:	c3                   	ret    

810047de <__ascii_wctomb>:
810047de:	55                   	push   %ebp
810047df:	89 e5                	mov    %esp,%ebp
810047e1:	83 ec 10             	sub    $0x10,%esp
810047e4:	8b 45 10             	mov    0x10(%ebp),%eax
810047e7:	89 45 fc             	mov    %eax,-0x4(%ebp)
810047ea:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810047ee:	75 07                	jne    810047f7 <__ascii_wctomb+0x19>
810047f0:	b8 00 00 00 00       	mov    $0x0,%eax
810047f5:	eb 28                	jmp    8100481f <__ascii_wctomb+0x41>
810047f7:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810047fe:	76 10                	jbe    81004810 <__ascii_wctomb+0x32>
81004800:	8b 45 08             	mov    0x8(%ebp),%eax
81004803:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004809:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100480e:	eb 0f                	jmp    8100481f <__ascii_wctomb+0x41>
81004810:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004813:	89 c2                	mov    %eax,%edx
81004815:	8b 45 0c             	mov    0xc(%ebp),%eax
81004818:	88 10                	mov    %dl,(%eax)
8100481a:	b8 01 00 00 00       	mov    $0x1,%eax
8100481f:	c9                   	leave  
81004820:	c3                   	ret    

81004821 <_fstat_r>:
81004821:	55                   	push   %ebp
81004822:	89 e5                	mov    %esp,%ebp
81004824:	83 ec 18             	sub    $0x18,%esp
81004827:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
8100482e:	00 00 00 
81004831:	83 ec 08             	sub    $0x8,%esp
81004834:	ff 75 10             	pushl  0x10(%ebp)
81004837:	ff 75 0c             	pushl  0xc(%ebp)
8100483a:	e8 07 bb ff ff       	call   81000346 <fstat>
8100483f:	83 c4 10             	add    $0x10,%esp
81004842:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004845:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004849:	75 14                	jne    8100485f <_fstat_r+0x3e>
8100484b:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81004850:	85 c0                	test   %eax,%eax
81004852:	74 0b                	je     8100485f <_fstat_r+0x3e>
81004854:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
8100485a:	8b 45 08             	mov    0x8(%ebp),%eax
8100485d:	89 10                	mov    %edx,(%eax)
8100485f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004862:	c9                   	leave  
81004863:	c3                   	ret    

81004864 <_isatty_r>:
81004864:	55                   	push   %ebp
81004865:	89 e5                	mov    %esp,%ebp
81004867:	83 ec 18             	sub    $0x18,%esp
8100486a:	c7 05 ec 5a 00 81 00 	movl   $0x0,0x81005aec
81004871:	00 00 00 
81004874:	83 ec 0c             	sub    $0xc,%esp
81004877:	ff 75 0c             	pushl  0xc(%ebp)
8100487a:	e8 a6 ba ff ff       	call   81000325 <isatty>
8100487f:	83 c4 10             	add    $0x10,%esp
81004882:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004885:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004889:	75 14                	jne    8100489f <_isatty_r+0x3b>
8100488b:	a1 ec 5a 00 81       	mov    0x81005aec,%eax
81004890:	85 c0                	test   %eax,%eax
81004892:	74 0b                	je     8100489f <_isatty_r+0x3b>
81004894:	8b 15 ec 5a 00 81    	mov    0x81005aec,%edx
8100489a:	8b 45 08             	mov    0x8(%ebp),%eax
8100489d:	89 10                	mov    %edx,(%eax)
8100489f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810048a2:	c9                   	leave  
810048a3:	c3                   	ret    
